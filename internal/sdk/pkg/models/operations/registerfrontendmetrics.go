// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// RegisterFrontendMetricsFrontendAPIResponseResponseBody - The requested resource was not found.
type RegisterFrontendMetricsFrontendAPIResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RegisterFrontendMetricsFrontendAPIResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RegisterFrontendMetricsFrontendAPIResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RegisterFrontendMetricsFrontendAPIResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// RegisterFrontendMetricsFrontendAPIResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type RegisterFrontendMetricsFrontendAPIResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RegisterFrontendMetricsFrontendAPIResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RegisterFrontendMetricsFrontendAPIResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RegisterFrontendMetricsFrontendAPIResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// RegisterFrontendMetricsResponseBody - The request data does not match what we expect.
type RegisterFrontendMetricsResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RegisterFrontendMetricsResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RegisterFrontendMetricsResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RegisterFrontendMetricsResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type RegisterFrontendMetricsResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *RegisterFrontendMetricsResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *RegisterFrontendMetricsFrontendAPIResponseBody
	// The requested resource was not found.
	FourHundredAndFourApplicationJSONObject *RegisterFrontendMetricsFrontendAPIResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *RegisterFrontendMetricsResponse) GetFourHundredApplicationJSONObject() *RegisterFrontendMetricsResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *RegisterFrontendMetricsResponse) GetFourHundredAndOneApplicationJSONObject() *RegisterFrontendMetricsFrontendAPIResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *RegisterFrontendMetricsResponse) GetFourHundredAndFourApplicationJSONObject() *RegisterFrontendMetricsFrontendAPIResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *RegisterFrontendMetricsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RegisterFrontendMetricsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RegisterFrontendMetricsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
