// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/models/shared"
	"net/http"
)

type UpdateUserRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// updateUserSchema
	UpdateUserSchema shared.UpdateUserSchema `request:"mediaType=application/json"`
}

func (o *UpdateUserRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateUserRequest) GetUpdateUserSchema() shared.UpdateUserSchema {
	if o == nil {
		return shared.UpdateUserSchema{}
	}
	return o.UpdateUserSchema
}

// UpdateUserUsersResponse404ResponseBody - The requested resource was not found.
type UpdateUserUsersResponse404ResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateUserUsersResponse404ResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateUserUsersResponse404ResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateUserUsersResponse404ResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateUserUsersResponseResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type UpdateUserUsersResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateUserUsersResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateUserUsersResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateUserUsersResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateUserUsersResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type UpdateUserUsersResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateUserUsersResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateUserUsersResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateUserUsersResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateUserResponseBody - The request data does not match what we expect.
type UpdateUserResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateUserResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateUserResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateUserResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type UpdateUserResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *UpdateUserResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *UpdateUserUsersResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *UpdateUserUsersResponseResponseBody
	// The requested resource was not found.
	FourHundredAndFourApplicationJSONObject *UpdateUserUsersResponse404ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// createUserResponseSchema
	CreateUserResponseSchema *shared.CreateUserResponseSchema
}

func (o *UpdateUserResponse) GetFourHundredApplicationJSONObject() *UpdateUserResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *UpdateUserResponse) GetFourHundredAndOneApplicationJSONObject() *UpdateUserUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *UpdateUserResponse) GetFourHundredAndThreeApplicationJSONObject() *UpdateUserUsersResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *UpdateUserResponse) GetFourHundredAndFourApplicationJSONObject() *UpdateUserUsersResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *UpdateUserResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateUserResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateUserResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateUserResponse) GetCreateUserResponseSchema() *shared.CreateUserResponseSchema {
	if o == nil {
		return nil
	}
	return o.CreateUserResponseSchema
}
