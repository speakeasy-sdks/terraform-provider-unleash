// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type RemoveTagRequest struct {
	FeatureName string `pathParam:"style=simple,explode=false,name=featureName"`
	Type        string `pathParam:"style=simple,explode=false,name=type"`
	Value       string `pathParam:"style=simple,explode=false,name=value"`
}

func (o *RemoveTagRequest) GetFeatureName() string {
	if o == nil {
		return ""
	}
	return o.FeatureName
}

func (o *RemoveTagRequest) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *RemoveTagRequest) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// RemoveTagFeaturesResponseResponseBody - The requested resource was not found.
type RemoveTagFeaturesResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RemoveTagFeaturesResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveTagFeaturesResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RemoveTagFeaturesResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// RemoveTagFeaturesResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type RemoveTagFeaturesResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RemoveTagFeaturesResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveTagFeaturesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RemoveTagFeaturesResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// RemoveTagResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type RemoveTagResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RemoveTagResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveTagResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RemoveTagResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type RemoveTagResponse struct {
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *RemoveTagResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *RemoveTagFeaturesResponseBody
	// The requested resource was not found.
	FourHundredAndFourApplicationJSONObject *RemoveTagFeaturesResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *RemoveTagResponse) GetFourHundredAndOneApplicationJSONObject() *RemoveTagResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *RemoveTagResponse) GetFourHundredAndThreeApplicationJSONObject() *RemoveTagFeaturesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *RemoveTagResponse) GetFourHundredAndFourApplicationJSONObject() *RemoveTagFeaturesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *RemoveTagResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RemoveTagResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RemoveTagResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
