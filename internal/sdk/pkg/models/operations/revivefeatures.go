// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"terraform/internal/sdk/pkg/models/shared"
)

type ReviveFeaturesRequest struct {
	// batchFeaturesSchema
	BatchFeaturesSchema shared.BatchFeaturesSchema `request:"mediaType=application/json"`
	ProjectID           string                     `pathParam:"style=simple,explode=false,name=projectId"`
}

func (o *ReviveFeaturesRequest) GetBatchFeaturesSchema() shared.BatchFeaturesSchema {
	if o == nil {
		return shared.BatchFeaturesSchema{}
	}
	return o.BatchFeaturesSchema
}

func (o *ReviveFeaturesRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

// ReviveFeaturesArchiveResponseResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type ReviveFeaturesArchiveResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ReviveFeaturesArchiveResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ReviveFeaturesArchiveResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ReviveFeaturesArchiveResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ReviveFeaturesArchiveResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type ReviveFeaturesArchiveResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ReviveFeaturesArchiveResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ReviveFeaturesArchiveResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ReviveFeaturesArchiveResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ReviveFeaturesResponseBody - The request data does not match what we expect.
type ReviveFeaturesResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ReviveFeaturesResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ReviveFeaturesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ReviveFeaturesResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type ReviveFeaturesResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *ReviveFeaturesResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *ReviveFeaturesArchiveResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *ReviveFeaturesArchiveResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ReviveFeaturesResponse) GetFourHundredApplicationJSONObject() *ReviveFeaturesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *ReviveFeaturesResponse) GetFourHundredAndOneApplicationJSONObject() *ReviveFeaturesArchiveResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *ReviveFeaturesResponse) GetFourHundredAndThreeApplicationJSONObject() *ReviveFeaturesArchiveResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *ReviveFeaturesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ReviveFeaturesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ReviveFeaturesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
