// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"terraform/internal/sdk/pkg/models/shared"
)

type UpdateAddonRequest struct {
	// addonCreateUpdateSchema
	AddonCreateUpdateSchema shared.AddonCreateUpdateSchema `request:"mediaType=application/json"`
	ID                      string                         `pathParam:"style=simple,explode=false,name=id"`
}

func (o *UpdateAddonRequest) GetAddonCreateUpdateSchema() shared.AddonCreateUpdateSchema {
	if o == nil {
		return shared.AddonCreateUpdateSchema{}
	}
	return o.AddonCreateUpdateSchema
}

func (o *UpdateAddonRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UpdateAddonAddonsResponse415ResponseBody - The operation does not support request payloads of the provided type. Please ensure that you're using one of the listed payload types and that you have specified the right content type in the "content-type" header.
type UpdateAddonAddonsResponse415ResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateAddonAddonsResponse415ResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateAddonAddonsResponse415ResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateAddonAddonsResponse415ResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateAddonAddonsResponse413ResponseBody - The request body is larger than what we accept. By default we only accept bodies of 100kB or less
type UpdateAddonAddonsResponse413ResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateAddonAddonsResponse413ResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateAddonAddonsResponse413ResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateAddonAddonsResponse413ResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateAddonAddonsResponse404ResponseBody - The requested resource was not found.
type UpdateAddonAddonsResponse404ResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateAddonAddonsResponse404ResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateAddonAddonsResponse404ResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateAddonAddonsResponse404ResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateAddonAddonsResponseResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type UpdateAddonAddonsResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateAddonAddonsResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateAddonAddonsResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateAddonAddonsResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateAddonAddonsResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type UpdateAddonAddonsResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateAddonAddonsResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateAddonAddonsResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateAddonAddonsResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// UpdateAddonResponseBody - The request data does not match what we expect.
type UpdateAddonResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *UpdateAddonResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateAddonResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UpdateAddonResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type UpdateAddonResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *UpdateAddonResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *UpdateAddonAddonsResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *UpdateAddonAddonsResponseResponseBody
	// The requested resource was not found.
	FourHundredAndFourApplicationJSONObject *UpdateAddonAddonsResponse404ResponseBody
	// The request body is larger than what we accept. By default we only accept bodies of 100kB or less
	FourHundredAndThirteenApplicationJSONObject *UpdateAddonAddonsResponse413ResponseBody
	// The operation does not support request payloads of the provided type. Please ensure that you're using one of the listed payload types and that you have specified the right content type in the "content-type" header.
	FourHundredAndFifteenApplicationJSONObject *UpdateAddonAddonsResponse415ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// addonSchema
	AddonSchema *shared.AddonSchema
}

func (o *UpdateAddonResponse) GetFourHundredApplicationJSONObject() *UpdateAddonResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *UpdateAddonResponse) GetFourHundredAndOneApplicationJSONObject() *UpdateAddonAddonsResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *UpdateAddonResponse) GetFourHundredAndThreeApplicationJSONObject() *UpdateAddonAddonsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *UpdateAddonResponse) GetFourHundredAndFourApplicationJSONObject() *UpdateAddonAddonsResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *UpdateAddonResponse) GetFourHundredAndThirteenApplicationJSONObject() *UpdateAddonAddonsResponse413ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThirteenApplicationJSONObject
}

func (o *UpdateAddonResponse) GetFourHundredAndFifteenApplicationJSONObject() *UpdateAddonAddonsResponse415ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFifteenApplicationJSONObject
}

func (o *UpdateAddonResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateAddonResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateAddonResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateAddonResponse) GetAddonSchema() *shared.AddonSchema {
	if o == nil {
		return nil
	}
	return o.AddonSchema
}
