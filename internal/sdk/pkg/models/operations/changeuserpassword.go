// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/models/shared"
	"net/http"
)

type ChangeUserPasswordRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// passwordSchema
	PasswordSchema shared.PasswordSchema `request:"mediaType=application/json"`
}

func (o *ChangeUserPasswordRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ChangeUserPasswordRequest) GetPasswordSchema() shared.PasswordSchema {
	if o == nil {
		return shared.PasswordSchema{}
	}
	return o.PasswordSchema
}

// ChangeUserPasswordUsersResponseResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type ChangeUserPasswordUsersResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ChangeUserPasswordUsersResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ChangeUserPasswordUsersResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ChangeUserPasswordUsersResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ChangeUserPasswordUsersResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type ChangeUserPasswordUsersResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ChangeUserPasswordUsersResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ChangeUserPasswordUsersResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ChangeUserPasswordUsersResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ChangeUserPasswordResponseBody - The request data does not match what we expect.
type ChangeUserPasswordResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ChangeUserPasswordResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ChangeUserPasswordResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ChangeUserPasswordResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type ChangeUserPasswordResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *ChangeUserPasswordResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *ChangeUserPasswordUsersResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *ChangeUserPasswordUsersResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ChangeUserPasswordResponse) GetFourHundredApplicationJSONObject() *ChangeUserPasswordResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *ChangeUserPasswordResponse) GetFourHundredAndOneApplicationJSONObject() *ChangeUserPasswordUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *ChangeUserPasswordResponse) GetFourHundredAndThreeApplicationJSONObject() *ChangeUserPasswordUsersResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *ChangeUserPasswordResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ChangeUserPasswordResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ChangeUserPasswordResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
