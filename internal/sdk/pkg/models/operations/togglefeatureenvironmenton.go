// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/models/shared"
	"net/http"
)

type ToggleFeatureEnvironmentOnRequest struct {
	Environment string `pathParam:"style=simple,explode=false,name=environment"`
	FeatureName string `pathParam:"style=simple,explode=false,name=featureName"`
	ProjectID   string `pathParam:"style=simple,explode=false,name=projectId"`
}

func (o *ToggleFeatureEnvironmentOnRequest) GetEnvironment() string {
	if o == nil {
		return ""
	}
	return o.Environment
}

func (o *ToggleFeatureEnvironmentOnRequest) GetFeatureName() string {
	if o == nil {
		return ""
	}
	return o.FeatureName
}

func (o *ToggleFeatureEnvironmentOnRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

// ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody - The requested resource was not found.
type ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ToggleFeatureEnvironmentOnFeaturesResponseResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type ToggleFeatureEnvironmentOnFeaturesResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ToggleFeatureEnvironmentOnFeaturesResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type ToggleFeatureEnvironmentOnFeaturesResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ToggleFeatureEnvironmentOnFeaturesResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ToggleFeatureEnvironmentOnResponseBody - The request data does not match what we expect.
type ToggleFeatureEnvironmentOnResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ToggleFeatureEnvironmentOnResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ToggleFeatureEnvironmentOnResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ToggleFeatureEnvironmentOnResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type ToggleFeatureEnvironmentOnResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *ToggleFeatureEnvironmentOnResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *ToggleFeatureEnvironmentOnFeaturesResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *ToggleFeatureEnvironmentOnFeaturesResponseResponseBody
	// The requested resource was not found.
	FourHundredAndFourApplicationJSONObject *ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// featureSchema
	FeatureSchema *shared.FeatureSchema
}

func (o *ToggleFeatureEnvironmentOnResponse) GetFourHundredApplicationJSONObject() *ToggleFeatureEnvironmentOnResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *ToggleFeatureEnvironmentOnResponse) GetFourHundredAndOneApplicationJSONObject() *ToggleFeatureEnvironmentOnFeaturesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *ToggleFeatureEnvironmentOnResponse) GetFourHundredAndThreeApplicationJSONObject() *ToggleFeatureEnvironmentOnFeaturesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *ToggleFeatureEnvironmentOnResponse) GetFourHundredAndFourApplicationJSONObject() *ToggleFeatureEnvironmentOnFeaturesResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *ToggleFeatureEnvironmentOnResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ToggleFeatureEnvironmentOnResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ToggleFeatureEnvironmentOnResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ToggleFeatureEnvironmentOnResponse) GetFeatureSchema() *shared.FeatureSchema {
	if o == nil {
		return nil
	}
	return o.FeatureSchema
}
