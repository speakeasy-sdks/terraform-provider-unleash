// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type RemoveSegmentRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *RemoveSegmentRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// RemoveSegment409ApplicationJSON - The provided resource can not be created or updated because it would conflict with the current state of the resource or with an already existing resource, respectively.
type RemoveSegment409ApplicationJSON struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RemoveSegment409ApplicationJSON) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveSegment409ApplicationJSON) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RemoveSegment409ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// RemoveSegment403ApplicationJSON - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type RemoveSegment403ApplicationJSON struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RemoveSegment403ApplicationJSON) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveSegment403ApplicationJSON) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RemoveSegment403ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// RemoveSegment401ApplicationJSON - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type RemoveSegment401ApplicationJSON struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *RemoveSegment401ApplicationJSON) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RemoveSegment401ApplicationJSON) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *RemoveSegment401ApplicationJSON) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type RemoveSegmentResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	RemoveSegment401ApplicationJSONObject *RemoveSegment401ApplicationJSON
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	RemoveSegment403ApplicationJSONObject *RemoveSegment403ApplicationJSON
	// The provided resource can not be created or updated because it would conflict with the current state of the resource or with an already existing resource, respectively.
	RemoveSegment409ApplicationJSONObject *RemoveSegment409ApplicationJSON
}

func (o *RemoveSegmentResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RemoveSegmentResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RemoveSegmentResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RemoveSegmentResponse) GetRemoveSegment401ApplicationJSONObject() *RemoveSegment401ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.RemoveSegment401ApplicationJSONObject
}

func (o *RemoveSegmentResponse) GetRemoveSegment403ApplicationJSONObject() *RemoveSegment403ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.RemoveSegment403ApplicationJSONObject
}

func (o *RemoveSegmentResponse) GetRemoveSegment409ApplicationJSONObject() *RemoveSegment409ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.RemoveSegment409ApplicationJSONObject
}
