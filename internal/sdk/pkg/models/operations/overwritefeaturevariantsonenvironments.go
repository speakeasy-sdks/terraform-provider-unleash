// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"terraform/internal/sdk/pkg/models/shared"
)

type OverwriteFeatureVariantsOnEnvironmentsRequest struct {
	FeatureName string `pathParam:"style=simple,explode=false,name=featureName"`
	ProjectID   string `pathParam:"style=simple,explode=false,name=projectId"`
	// pushVariantsSchema
	PushVariantsSchema shared.PushVariantsSchema `request:"mediaType=application/json"`
}

func (o *OverwriteFeatureVariantsOnEnvironmentsRequest) GetFeatureName() string {
	if o == nil {
		return ""
	}
	return o.FeatureName
}

func (o *OverwriteFeatureVariantsOnEnvironmentsRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *OverwriteFeatureVariantsOnEnvironmentsRequest) GetPushVariantsSchema() shared.PushVariantsSchema {
	if o == nil {
		return shared.PushVariantsSchema{}
	}
	return o.PushVariantsSchema
}

// OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// OverwriteFeatureVariantsOnEnvironmentsResponseBody - The request data does not match what we expect.
type OverwriteFeatureVariantsOnEnvironmentsResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type OverwriteFeatureVariantsOnEnvironmentsResponse struct {
	// The request data does not match what we expect.
	FourHundredApplicationJSONObject *OverwriteFeatureVariantsOnEnvironmentsResponseBody
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// featureVariantsSchema
	FeatureVariantsSchema *shared.FeatureVariantsSchema
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetFourHundredApplicationJSONObject() *OverwriteFeatureVariantsOnEnvironmentsResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetFourHundredAndOneApplicationJSONObject() *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetFourHundredAndThreeApplicationJSONObject() *OverwriteFeatureVariantsOnEnvironmentsFeaturesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *OverwriteFeatureVariantsOnEnvironmentsResponse) GetFeatureVariantsSchema() *shared.FeatureVariantsSchema {
	if o == nil {
		return nil
	}
	return o.FeatureVariantsSchema
}
