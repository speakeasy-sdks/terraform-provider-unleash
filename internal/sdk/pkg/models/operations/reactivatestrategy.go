// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ReactivateStrategyRequest struct {
	StrategyName string `pathParam:"style=simple,explode=false,name=strategyName"`
}

func (o *ReactivateStrategyRequest) GetStrategyName() string {
	if o == nil {
		return ""
	}
	return o.StrategyName
}

// ReactivateStrategyStrategiesResponseResponseBody - The requested resource was not found.
type ReactivateStrategyStrategiesResponseResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ReactivateStrategyStrategiesResponseResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ReactivateStrategyStrategiesResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ReactivateStrategyStrategiesResponseResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ReactivateStrategyStrategiesResponseBody - The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
type ReactivateStrategyStrategiesResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ReactivateStrategyStrategiesResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ReactivateStrategyStrategiesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ReactivateStrategyStrategiesResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

// ReactivateStrategyResponseBody - Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
type ReactivateStrategyResponseBody struct {
	// The ID of the error instance
	ID *string `json:"id,omitempty"`
	// A description of what went wrong.
	Message *string `json:"message,omitempty"`
	// The name of the error kind
	Name *string `json:"name,omitempty"`
}

func (o *ReactivateStrategyResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ReactivateStrategyResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ReactivateStrategyResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type ReactivateStrategyResponse struct {
	// Authorization information is missing or invalid. Provide a valid API token as the `authorization` header, e.g. `authorization:*.*.my-admin-token`.
	FourHundredAndOneApplicationJSONObject *ReactivateStrategyResponseBody
	// The provided user credentials are valid, but the user does not have the necessary permissions to perform this operation
	FourHundredAndThreeApplicationJSONObject *ReactivateStrategyStrategiesResponseBody
	// The requested resource was not found.
	FourHundredAndFourApplicationJSONObject *ReactivateStrategyStrategiesResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ReactivateStrategyResponse) GetFourHundredAndOneApplicationJSONObject() *ReactivateStrategyResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}

func (o *ReactivateStrategyResponse) GetFourHundredAndThreeApplicationJSONObject() *ReactivateStrategyStrategiesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *ReactivateStrategyResponse) GetFourHundredAndFourApplicationJSONObject() *ReactivateStrategyStrategiesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *ReactivateStrategyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ReactivateStrategyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ReactivateStrategyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
