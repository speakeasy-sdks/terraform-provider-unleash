// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// NotificationsSchemaInnerNotificationType - The type of the notification used e.g. for the graphical hints
type NotificationsSchemaInnerNotificationType string

const (
	NotificationsSchemaInnerNotificationTypeChangeRequest NotificationsSchemaInnerNotificationType = "change-request"
	NotificationsSchemaInnerNotificationTypeToggle        NotificationsSchemaInnerNotificationType = "toggle"
)

func (e NotificationsSchemaInnerNotificationType) ToPointer() *NotificationsSchemaInnerNotificationType {
	return &e
}

func (e *NotificationsSchemaInnerNotificationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change-request":
		fallthrough
	case "toggle":
		*e = NotificationsSchemaInnerNotificationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationsSchemaInnerNotificationType: %v", v)
	}
}

type NotificationsSchemaInner struct {
	// The date and time when the notification was created
	CreatedAt time.Time                         `json:"createdAt"`
	CreatedBy NotificationsSchemaInnerCreatedBy `json:"createdBy"`
	// The id of this notification
	ID float64 `json:"id"`
	// The link to change request or feature toggle the notification refers to
	Link string `json:"link"`
	// The actual notification message
	Message string `json:"message"`
	// The type of the notification used e.g. for the graphical hints
	NotificationType NotificationsSchemaInnerNotificationType `json:"notificationType"`
	// The date and time when the notification was read or marked as read, otherwise `null`
	ReadAt time.Time `json:"readAt"`
}
