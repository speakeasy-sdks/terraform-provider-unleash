// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Environments struct {
	// The name of the environment
	Name string `json:"name"`
	// Permissions available for this environment
	Permissions []AdminPermissionSchema `json:"permissions"`
}

func (o *Environments) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Environments) GetPermissions() []AdminPermissionSchema {
	if o == nil {
		return []AdminPermissionSchema{}
	}
	return o.Permissions
}

// Permissions - Returns permissions available at all three levels (root|project|environment)
type Permissions struct {
	// A list of environments with available permissions per environment
	Environments []Environments `json:"environments"`
	// Permissions available at the project level
	Project []AdminPermissionSchema `json:"project"`
	// Permissions available at the root level, i.e. not connected to any specific project or environment
	Root []AdminPermissionSchema `json:"root,omitempty"`
}

func (o *Permissions) GetEnvironments() []Environments {
	if o == nil {
		return []Environments{}
	}
	return o.Environments
}

func (o *Permissions) GetProject() []AdminPermissionSchema {
	if o == nil {
		return []AdminPermissionSchema{}
	}
	return o.Project
}

func (o *Permissions) GetRoot() []AdminPermissionSchema {
	if o == nil {
		return nil
	}
	return o.Root
}

// Version - The api version of this response. A natural increasing number. Only increases if format changes
type Version int64

const (
	VersionOne Version = 1
	VersionTwo Version = 2
)

func (e Version) ToPointer() *Version {
	return &e
}

func (e *Version) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		*e = Version(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Version: %v", v)
	}
}

// AdminPermissionsSchema - What kind of permissions are available
type AdminPermissionsSchema struct {
	// Returns permissions available at all three levels (root|project|environment)
	Permissions Permissions `json:"permissions"`
	// The api version of this response. A natural increasing number. Only increases if format changes
	Version Version `json:"version"`
}

func (o *AdminPermissionsSchema) GetPermissions() Permissions {
	if o == nil {
		return Permissions{}
	}
	return o.Permissions
}

func (o *AdminPermissionsSchema) GetVersion() Version {
	if o == nil {
		return Version(0)
	}
	return o.Version
}
