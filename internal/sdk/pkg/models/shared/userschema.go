// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/utils"
	"time"
)

// UserSchema - An Unleash user
type UserSchema struct {
	// A user is either an actual User or a Service Account
	AccountType *string `json:"accountType,omitempty"`
	// The user was created at this time
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Email of the user
	Email *string `json:"email,omitempty"`
	// Is the welcome email sent to the user or not
	EmailSent *bool `json:"emailSent,omitempty"`
	// The user id
	ID int64 `json:"id"`
	// URL used for the userprofile image
	ImageURL *string `json:"imageUrl,omitempty"`
	// If the user is actively inviting other users, this is the link that can be shared with other users
	InviteLink *string `json:"inviteLink,omitempty"`
	// (Deprecated): Used internally to know which operations the user should be allowed to perform
	//
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	IsAPI *bool `json:"isAPI,omitempty"`
	// How many unsuccessful attempts at logging in has the user made
	LoginAttempts *int64 `json:"loginAttempts,omitempty"`
	// Name of the user
	Name *string `json:"name,omitempty"`
	// Deprecated
	Permissions []string `json:"permissions,omitempty"`
	// Which [root role](https://docs.getunleash.io/reference/rbac#standard-roles) this user is assigned
	RootRole *int64 `json:"rootRole,omitempty"`
	// The last time this user logged in
	SeenAt *time.Time `json:"seenAt,omitempty"`
	// A unique username for the user
	Username *string `json:"username,omitempty"`
}

func (u UserSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UserSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UserSchema) GetAccountType() *string {
	if o == nil {
		return nil
	}
	return o.AccountType
}

func (o *UserSchema) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UserSchema) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *UserSchema) GetEmailSent() *bool {
	if o == nil {
		return nil
	}
	return o.EmailSent
}

func (o *UserSchema) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *UserSchema) GetImageURL() *string {
	if o == nil {
		return nil
	}
	return o.ImageURL
}

func (o *UserSchema) GetInviteLink() *string {
	if o == nil {
		return nil
	}
	return o.InviteLink
}

func (o *UserSchema) GetIsAPI() *bool {
	if o == nil {
		return nil
	}
	return o.IsAPI
}

func (o *UserSchema) GetLoginAttempts() *int64 {
	if o == nil {
		return nil
	}
	return o.LoginAttempts
}

func (o *UserSchema) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UserSchema) GetPermissions() []string {
	if o == nil {
		return nil
	}
	return o.Permissions
}

func (o *UserSchema) GetRootRole() *int64 {
	if o == nil {
		return nil
	}
	return o.RootRole
}

func (o *UserSchema) GetSeenAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.SeenAt
}

func (o *UserSchema) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}
