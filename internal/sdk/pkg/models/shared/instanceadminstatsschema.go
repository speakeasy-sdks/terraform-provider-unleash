// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// InstanceAdminStatsSchemaClientAppsRange - A description of a time range
type InstanceAdminStatsSchemaClientAppsRange string

const (
	InstanceAdminStatsSchemaClientAppsRangeAllTime InstanceAdminStatsSchemaClientAppsRange = "allTime"
	InstanceAdminStatsSchemaClientAppsRangeThirtyd InstanceAdminStatsSchemaClientAppsRange = "30d"
	InstanceAdminStatsSchemaClientAppsRangeSevend  InstanceAdminStatsSchemaClientAppsRange = "7d"
)

func (e InstanceAdminStatsSchemaClientAppsRange) ToPointer() *InstanceAdminStatsSchemaClientAppsRange {
	return &e
}

func (e *InstanceAdminStatsSchemaClientAppsRange) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allTime":
		fallthrough
	case "30d":
		fallthrough
	case "7d":
		*e = InstanceAdminStatsSchemaClientAppsRange(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceAdminStatsSchemaClientAppsRange: %v", v)
	}
}

// InstanceAdminStatsSchemaClientApps - An entry describing how many client applications has been observed over the defined range
type InstanceAdminStatsSchemaClientApps struct {
	// The number of client applications that have been observed in this period
	Count *float64 `json:"count,omitempty"`
	// A description of a time range
	Range *InstanceAdminStatsSchemaClientAppsRange `json:"range,omitempty"`
}

// InstanceAdminStatsSchema - Information about an instance and statistics about usage of various features of Unleash
type InstanceAdminStatsSchema struct {
	// Whether or not OIDC authentication is enabled for this instance
	OIDCenabled *bool `json:"OIDCenabled,omitempty"`
	// Whether or not SAML authentication is enabled for this instance
	SAMLenabled *bool `json:"SAMLenabled,omitempty"`
	// A count of connected applications in the last week, last month and all time since last restart
	ClientApps []InstanceAdminStatsSchemaClientApps `json:"clientApps,omitempty"`
	// The number of context fields defined in this instance.
	ContextFields *float64 `json:"contextFields,omitempty"`
	// The number of environments defined in this instance
	Environments *float64 `json:"environments,omitempty"`
	// The number of feature-toggles this instance has
	FeatureToggles *float64 `json:"featureToggles,omitempty"`
	// The number of groups defined in this instance
	Groups *float64 `json:"groups,omitempty"`
	// A unique identifier for this instance. Generated by the database migration scripts at first run. Typically a UUID.
	InstanceID string `json:"instanceId"`
	// The number of projects defined in this instance.
	Projects *float64 `json:"projects,omitempty"`
	// The number of roles defined in this instance
	Roles *float64 `json:"roles,omitempty"`
	// The number of segments defined in this instance
	Segments *float64 `json:"segments,omitempty"`
	// The number of strategies defined in this instance
	Strategies *float64 `json:"strategies,omitempty"`
	// A SHA-256 checksum of the instance statistics to be used to verify that the data in this object has not been tampered with
	Sum *string `json:"sum,omitempty"`
	// When these statistics were produced
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// The number of users this instance has
	Users *float64 `json:"users,omitempty"`
	// The version of Unleash Enterprise that is bundled in this instance
	VersionEnterprise *string `json:"versionEnterprise,omitempty"`
	// The version of Unleash OSS that is bundled in this instance
	VersionOSS *string `json:"versionOSS,omitempty"`

	AdditionalProperties interface{} `json:"-"`
}
type _InstanceAdminStatsSchema InstanceAdminStatsSchema

func (c *InstanceAdminStatsSchema) UnmarshalJSON(bs []byte) error {
	data := _InstanceAdminStatsSchema{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = InstanceAdminStatsSchema(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "OIDCenabled")
	delete(additionalFields, "SAMLenabled")
	delete(additionalFields, "clientApps")
	delete(additionalFields, "contextFields")
	delete(additionalFields, "environments")
	delete(additionalFields, "featureToggles")
	delete(additionalFields, "groups")
	delete(additionalFields, "instanceId")
	delete(additionalFields, "projects")
	delete(additionalFields, "roles")
	delete(additionalFields, "segments")
	delete(additionalFields, "strategies")
	delete(additionalFields, "sum")
	delete(additionalFields, "timestamp")
	delete(additionalFields, "users")
	delete(additionalFields, "versionEnterprise")
	delete(additionalFields, "versionOSS")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c InstanceAdminStatsSchema) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_InstanceAdminStatsSchema(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}
