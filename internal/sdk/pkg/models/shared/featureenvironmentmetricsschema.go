// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// FeatureEnvironmentMetricsSchema - How many times `feautreName` was evaluated to `true` (yes) and `false` (no) for `appName` in `environmnet`
type FeatureEnvironmentMetricsSchema struct {
	// The name of the application the SDK is being used in
	AppName *string `json:"appName,omitempty"`
	// Which environment the SDK is being used in
	Environment string `json:"environment"`
	// The name of the feature
	FeatureName *string `json:"featureName,omitempty"`
	// How many times the toggle evaluated to false
	No        int64      `json:"no"`
	Timestamp DateSchema `json:"timestamp"`
	// How many times each variant was returned
	Variants map[string]int64 `json:"variants,omitempty"`
	// How many times the toggle evaluated to true
	Yes int64 `json:"yes"`
}

func (o *FeatureEnvironmentMetricsSchema) GetAppName() *string {
	if o == nil {
		return nil
	}
	return o.AppName
}

func (o *FeatureEnvironmentMetricsSchema) GetEnvironment() string {
	if o == nil {
		return ""
	}
	return o.Environment
}

func (o *FeatureEnvironmentMetricsSchema) GetFeatureName() *string {
	if o == nil {
		return nil
	}
	return o.FeatureName
}

func (o *FeatureEnvironmentMetricsSchema) GetNo() int64 {
	if o == nil {
		return 0
	}
	return o.No
}

func (o *FeatureEnvironmentMetricsSchema) GetTimestamp() DateSchema {
	if o == nil {
		return DateSchema{}
	}
	return o.Timestamp
}

func (o *FeatureEnvironmentMetricsSchema) GetVariants() map[string]int64 {
	if o == nil {
		return nil
	}
	return o.Variants
}

func (o *FeatureEnvironmentMetricsSchema) GetYes() int64 {
	if o == nil {
		return 0
	}
	return o.Yes
}
