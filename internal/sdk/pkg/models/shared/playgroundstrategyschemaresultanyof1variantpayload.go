// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlaygroundStrategySchemaResultAnyOf1VariantPayloadType - The format of the payload.
type PlaygroundStrategySchemaResultAnyOf1VariantPayloadType string

const (
	PlaygroundStrategySchemaResultAnyOf1VariantPayloadTypeJSON   PlaygroundStrategySchemaResultAnyOf1VariantPayloadType = "json"
	PlaygroundStrategySchemaResultAnyOf1VariantPayloadTypeCsv    PlaygroundStrategySchemaResultAnyOf1VariantPayloadType = "csv"
	PlaygroundStrategySchemaResultAnyOf1VariantPayloadTypeString PlaygroundStrategySchemaResultAnyOf1VariantPayloadType = "string"
)

func (e PlaygroundStrategySchemaResultAnyOf1VariantPayloadType) ToPointer() *PlaygroundStrategySchemaResultAnyOf1VariantPayloadType {
	return &e
}

func (e *PlaygroundStrategySchemaResultAnyOf1VariantPayloadType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "csv":
		fallthrough
	case "string":
		*e = PlaygroundStrategySchemaResultAnyOf1VariantPayloadType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlaygroundStrategySchemaResultAnyOf1VariantPayloadType: %v", v)
	}
}

// PlaygroundStrategySchemaResultAnyOf1VariantPayload - An optional payload attached to the variant.
type PlaygroundStrategySchemaResultAnyOf1VariantPayload struct {
	// The format of the payload.
	Type PlaygroundStrategySchemaResultAnyOf1VariantPayloadType `json:"type"`
	// The payload value stringified.
	Value string `json:"value"`
}
