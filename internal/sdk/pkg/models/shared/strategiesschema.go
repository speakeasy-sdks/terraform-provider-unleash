// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StrategiesSchemaVersion - Version of the strategies schema
type StrategiesSchemaVersion int64

const (
	StrategiesSchemaVersionOne StrategiesSchemaVersion = 1
)

func (e StrategiesSchemaVersion) ToPointer() *StrategiesSchemaVersion {
	return &e
}

func (e *StrategiesSchemaVersion) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		*e = StrategiesSchemaVersion(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StrategiesSchemaVersion: %v", v)
	}
}

// StrategiesSchema - List of strategies
type StrategiesSchema struct {
	// List of strategies
	Strategies []StrategySchema `json:"strategies"`
	// Version of the strategies schema
	Version StrategiesSchemaVersion `json:"version"`
}

func (o *StrategiesSchema) GetStrategies() []StrategySchema {
	if o == nil {
		return []StrategySchema{}
	}
	return o.Strategies
}

func (o *StrategiesSchema) GetVersion() StrategiesSchemaVersion {
	if o == nil {
		return StrategiesSchemaVersion(0)
	}
	return o.Version
}
