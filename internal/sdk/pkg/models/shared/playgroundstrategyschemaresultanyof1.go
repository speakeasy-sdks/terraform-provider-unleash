// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlaygroundStrategySchemaResultAnyOf1EvaluationStatus - Signals that this strategy was evaluated successfully.
type PlaygroundStrategySchemaResultAnyOf1EvaluationStatus string

const (
	PlaygroundStrategySchemaResultAnyOf1EvaluationStatusComplete PlaygroundStrategySchemaResultAnyOf1EvaluationStatus = "complete"
)

func (e PlaygroundStrategySchemaResultAnyOf1EvaluationStatus) ToPointer() *PlaygroundStrategySchemaResultAnyOf1EvaluationStatus {
	return &e
}

func (e *PlaygroundStrategySchemaResultAnyOf1EvaluationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "complete":
		*e = PlaygroundStrategySchemaResultAnyOf1EvaluationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlaygroundStrategySchemaResultAnyOf1EvaluationStatus: %v", v)
	}
}

// PlaygroundStrategySchemaResultAnyOf1 - The strategy's evaluation result. If the strategy is a custom strategy that Unleash can't evaluate, `evaluationStatus` will be `unknown`. Otherwise, it will be `true` or `false`
type PlaygroundStrategySchemaResultAnyOf1 struct {
	// Whether this strategy evaluates to true or not.
	Enabled bool `json:"enabled"`
	// Signals that this strategy was evaluated successfully.
	EvaluationStatus PlaygroundStrategySchemaResultAnyOf1EvaluationStatus `json:"evaluationStatus"`
	// The feature variant you receive based on the provided context or the _disabled
	//                           variant_. If a feature is disabled or doesn't have any
	//                           variants, you would get the _disabled variant_.
	//                           Otherwise, you'll get one of the feature's defined variants.
	Variant *PlaygroundStrategySchemaResultAnyOf1Variant `json:"variant,omitempty"`
	// The feature variants.
	Variants []VariantSchema `json:"variants,omitempty"`
}
