// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"terraform/internal/sdk/pkg/utils"
	"time"
)

// FeedbackResponseSchema - User feedback information about a particular feedback item.
type FeedbackResponseSchema struct {
	// The name of the feedback session
	FeedbackID *string `json:"feedbackId,omitempty"`
	// When this feedback was given
	Given *time.Time `json:"given,omitempty"`
	// `true` if the user has asked never to see this feedback questionnaire again.
	NeverShow *bool `json:"neverShow,omitempty"`
	// The ID of the user that gave the feedback.
	UserID *int64 `json:"userId,omitempty"`
}

func (f FeedbackResponseSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FeedbackResponseSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FeedbackResponseSchema) GetFeedbackID() *string {
	if o == nil {
		return nil
	}
	return o.FeedbackID
}

func (o *FeedbackResponseSchema) GetGiven() *time.Time {
	if o == nil {
		return nil
	}
	return o.Given
}

func (o *FeedbackResponseSchema) GetNeverShow() *bool {
	if o == nil {
		return nil
	}
	return o.NeverShow
}

func (o *FeedbackResponseSchema) GetUserID() *int64 {
	if o == nil {
		return nil
	}
	return o.UserID
}
