// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"time"
)

type ProxyClientSchemaStartedType string

const (
	ProxyClientSchemaStartedTypeDateTime ProxyClientSchemaStartedType = "date-time"
	ProxyClientSchemaStartedTypeNumber   ProxyClientSchemaStartedType = "number"
)

type ProxyClientSchemaStarted struct {
	DateTime *time.Time
	Number   *float64

	Type ProxyClientSchemaStartedType
}

func CreateProxyClientSchemaStartedDateTime(dateTime time.Time) ProxyClientSchemaStarted {
	typ := ProxyClientSchemaStartedTypeDateTime

	return ProxyClientSchemaStarted{
		DateTime: &dateTime,
		Type:     typ,
	}
}

func CreateProxyClientSchemaStartedNumber(number float64) ProxyClientSchemaStarted {
	typ := ProxyClientSchemaStartedTypeNumber

	return ProxyClientSchemaStarted{
		Number: &number,
		Type:   typ,
	}
}

func (u *ProxyClientSchemaStarted) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	dateTime := new(time.Time)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&dateTime); err == nil {
		u.DateTime = dateTime
		u.Type = ProxyClientSchemaStartedTypeDateTime
		return nil
	}

	number := new(float64)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&number); err == nil {
		u.Number = number
		u.Type = ProxyClientSchemaStartedTypeNumber
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ProxyClientSchemaStarted) MarshalJSON() ([]byte, error) {
	if u.DateTime != nil {
		return json.Marshal(u.DateTime)
	}

	if u.Number != nil {
		return json.Marshal(u.Number)
	}

	return nil, nil
}

// ProxyClientSchema - Frontend SDK client registration information
type ProxyClientSchema struct {
	// Name of the application using Unleash
	AppName string `json:"appName"`
	// deprecated
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	Environment *string `json:"environment,omitempty"`
	// Instance id for this application (typically hostname, podId or similar)
	InstanceID *string `json:"instanceId,omitempty"`
	// At which interval, in milliseconds, will this client be expected to send metrics
	Interval float64 `json:"interval"`
	// Optional field that describes the sdk version (name:version)
	SDKVersion *string `json:"sdkVersion,omitempty"`
	// When this client started. Should be reported as ISO8601 time.
	Started ProxyClientSchemaStarted `json:"started"`
	// List of strategies implemented by this application
	Strategies []string `json:"strategies"`
}
