// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AddonTypeSchemaAlertsInnerType - The type of alert. This determines the color of the alert.
type AddonTypeSchemaAlertsInnerType string

const (
	AddonTypeSchemaAlertsInnerTypeSuccess AddonTypeSchemaAlertsInnerType = "success"
	AddonTypeSchemaAlertsInnerTypeInfo    AddonTypeSchemaAlertsInnerType = "info"
	AddonTypeSchemaAlertsInnerTypeWarning AddonTypeSchemaAlertsInnerType = "warning"
	AddonTypeSchemaAlertsInnerTypeError   AddonTypeSchemaAlertsInnerType = "error"
)

func (e AddonTypeSchemaAlertsInnerType) ToPointer() *AddonTypeSchemaAlertsInnerType {
	return &e
}

func (e *AddonTypeSchemaAlertsInnerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "info":
		fallthrough
	case "warning":
		fallthrough
	case "error":
		*e = AddonTypeSchemaAlertsInnerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddonTypeSchemaAlertsInnerType: %v", v)
	}
}

type AddonTypeSchemaAlertsInner struct {
	// The text of the alert. This is what will be displayed to the user.
	Text string `json:"text"`
	// The type of alert. This determines the color of the alert.
	Type AddonTypeSchemaAlertsInnerType `json:"type"`
}
