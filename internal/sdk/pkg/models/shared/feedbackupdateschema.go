// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/utils"
	"time"
)

// FeedbackUpdateSchema - User feedback information to be updated.
type FeedbackUpdateSchema struct {
	// When this feedback was given
	Given *time.Time `json:"given,omitempty"`
	// `true` if the user has asked never to see this feedback questionnaire again.
	NeverShow *bool `json:"neverShow,omitempty"`
	// The ID of the user that gave the feedback.
	UserID *int64 `json:"userId,omitempty"`
}

func (f FeedbackUpdateSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FeedbackUpdateSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FeedbackUpdateSchema) GetGiven() *time.Time {
	if o == nil {
		return nil
	}
	return o.Given
}

func (o *FeedbackUpdateSchema) GetNeverShow() *bool {
	if o == nil {
		return nil
	}
	return o.NeverShow
}

func (o *FeedbackUpdateSchema) GetUserID() *int64 {
	if o == nil {
		return nil
	}
	return o.UserID
}
