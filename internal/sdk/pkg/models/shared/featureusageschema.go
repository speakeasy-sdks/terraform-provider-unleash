// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// FeatureUsageSchema - How many applications have seen this feature toggle, as well as how this feature was evaluated the last hour
type FeatureUsageSchema struct {
	// The name of the feature
	FeatureName string `json:"featureName"`
	// Last hour statistics. Accumulated per feature per environment. Contains counts for evaluations to true (yes) and to false (no)
	LastHourUsage []FeatureEnvironmentMetricsSchema `json:"lastHourUsage"`
	// The maturity level of this API (alpha, beta, stable, deprecated)
	Maturity string `json:"maturity"`
	// A list of applications seen using this feature
	SeenApplications []string `json:"seenApplications"`
	// The version of this schema
	Version int64 `json:"version"`
}

func (o *FeatureUsageSchema) GetFeatureName() string {
	if o == nil {
		return ""
	}
	return o.FeatureName
}

func (o *FeatureUsageSchema) GetLastHourUsage() []FeatureEnvironmentMetricsSchema {
	if o == nil {
		return []FeatureEnvironmentMetricsSchema{}
	}
	return o.LastHourUsage
}

func (o *FeatureUsageSchema) GetMaturity() string {
	if o == nil {
		return ""
	}
	return o.Maturity
}

func (o *FeatureUsageSchema) GetSeenApplications() []string {
	if o == nil {
		return []string{}
	}
	return o.SeenApplications
}

func (o *FeatureUsageSchema) GetVersion() int64 {
	if o == nil {
		return 0
	}
	return o.Version
}
