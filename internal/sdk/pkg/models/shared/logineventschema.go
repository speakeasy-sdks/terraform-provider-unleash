// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"terraform/internal/sdk/pkg/utils"
	"time"
)

// LoginEventSchema - A model representing a single login event.
type LoginEventSchema struct {
	// The authentication type used to log in.
	AuthType *string `json:"auth_type,omitempty"`
	// The date and time of when the login was attempted.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The reason for the login failure. This property is only present if the login was unsuccessful.
	FailureReason *string `json:"failure_reason,omitempty"`
	// The event's ID. Event IDs are incrementing integers. In other words, a more recent event will always have a higher ID than an older event.
	ID int64 `json:"id"`
	// The IP address of the client that attempted to log in.
	IP *string `json:"ip,omitempty"`
	// Whether the login was successful or not.
	Successful *bool `json:"successful,omitempty"`
	// The username of the user that attempted to log in. Will return "Incorrectly configured provider" when attempting to log in using a misconfigured provider.
	Username *string `json:"username,omitempty"`
}

func (l LoginEventSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LoginEventSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LoginEventSchema) GetAuthType() *string {
	if o == nil {
		return nil
	}
	return o.AuthType
}

func (o *LoginEventSchema) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *LoginEventSchema) GetFailureReason() *string {
	if o == nil {
		return nil
	}
	return o.FailureReason
}

func (o *LoginEventSchema) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *LoginEventSchema) GetIP() *string {
	if o == nil {
		return nil
	}
	return o.IP
}

func (o *LoginEventSchema) GetSuccessful() *bool {
	if o == nil {
		return nil
	}
	return o.Successful
}

func (o *LoginEventSchema) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}
