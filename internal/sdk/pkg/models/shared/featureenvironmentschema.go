// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// FeatureEnvironmentSchema - A detailed description of the feature environment
type FeatureEnvironmentSchema struct {
	// `true` if the feature is enabled for the environment, otherwise `false`.
	Enabled bool `json:"enabled"`
	// The name of the environment
	Environment *string `json:"environment,omitempty"`
	// The name of the feature
	FeatureName *string `json:"featureName,omitempty"`
	// The name of the environment
	Name string `json:"name"`
	// The sort order of the feature environment in the feature environments list
	SortOrder *float64 `json:"sortOrder,omitempty"`
	// A list of activation strategies for the feature environment
	Strategies []FeatureStrategySchema `json:"strategies,omitempty"`
	// The type of the environment
	Type *string `json:"type,omitempty"`
	// The number of defined variants
	VariantCount *float64 `json:"variantCount,omitempty"`
	// A list of variants for the feature environment
	Variants []VariantSchema `json:"variants,omitempty"`
}

func (o *FeatureEnvironmentSchema) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *FeatureEnvironmentSchema) GetEnvironment() *string {
	if o == nil {
		return nil
	}
	return o.Environment
}

func (o *FeatureEnvironmentSchema) GetFeatureName() *string {
	if o == nil {
		return nil
	}
	return o.FeatureName
}

func (o *FeatureEnvironmentSchema) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *FeatureEnvironmentSchema) GetSortOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

func (o *FeatureEnvironmentSchema) GetStrategies() []FeatureStrategySchema {
	if o == nil {
		return nil
	}
	return o.Strategies
}

func (o *FeatureEnvironmentSchema) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *FeatureEnvironmentSchema) GetVariantCount() *float64 {
	if o == nil {
		return nil
	}
	return o.VariantCount
}

func (o *FeatureEnvironmentSchema) GetVariants() []VariantSchema {
	if o == nil {
		return nil
	}
	return o.Variants
}
