// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"time"
)

// ServiceAccountSchema - Represents a [service account](https://docs.getunleash.io/reference/service-accounts). Service accounts are used to let systems interact with the Unleash API.
type ServiceAccountSchema struct {
	// The service account creation date
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Deprecated: service accounts don't have emails associated with them
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	Email *string `json:"email,omitempty"`
	// Deprecated: internal use only
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	EmailSent *bool `json:"emailSent,omitempty"`
	// The service account id
	ID float64 `json:"id"`
	// The service account image url
	ImageURL *string `json:"imageUrl,omitempty"`
	// Deprecated: service accounts cannot be invited via an invitation link
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	InviteLink *string `json:"inviteLink,omitempty"`
	// Deprecated: for internal use only, should not be exposed through the API
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	IsAPI *bool `json:"isAPI,omitempty"`
	// Deprecated: service accounts cannot log in to Unleash
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	LoginAttempts *float64 `json:"loginAttempts,omitempty"`
	// The name of the service account
	Name *string `json:"name,omitempty"`
	// The root role id associated with the service account
	RootRole *int64 `json:"rootRole,omitempty"`
	// Deprecated. This property is always `null`. To find out when a service account was last seen, check its `tokens` list and refer to each token's `lastSeen` property instead.
	//
	// @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	SeenAt *time.Time `json:"seenAt,omitempty"`
	// The list of tokens associated with the service account
	Tokens []PatSchema `json:"tokens,omitempty"`
	// The service account username
	Username *string `json:"username,omitempty"`

	AdditionalProperties interface{} `json:"-"`
}
type _ServiceAccountSchema ServiceAccountSchema

func (c *ServiceAccountSchema) UnmarshalJSON(bs []byte) error {
	data := _ServiceAccountSchema{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = ServiceAccountSchema(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "createdAt")
	delete(additionalFields, "email")
	delete(additionalFields, "emailSent")
	delete(additionalFields, "id")
	delete(additionalFields, "imageUrl")
	delete(additionalFields, "inviteLink")
	delete(additionalFields, "isAPI")
	delete(additionalFields, "loginAttempts")
	delete(additionalFields, "name")
	delete(additionalFields, "rootRole")
	delete(additionalFields, "seenAt")
	delete(additionalFields, "tokens")
	delete(additionalFields, "username")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c ServiceAccountSchema) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_ServiceAccountSchema(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}
