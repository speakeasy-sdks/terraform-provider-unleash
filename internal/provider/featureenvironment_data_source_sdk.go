// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"math/big"
	"unleash/internal/sdk/pkg/models/shared"
)

func (r *FeatureEnvironmentDataSourceModel) RefreshFromGetResponse(resp *shared.FeatureEnvironmentSchema) {
	// Generate(false, false, {"Type":"class","ItemType":null,"AssociatedTypes":[],"RefType":"Schemas","Truncated":false,"Format":"","Name":"featureEnvironmentSchema","Fields":[{"Name":"enabled","Type":{"Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Type":"boolean","BaseName":"","Input":false,"Output":false,"Fields":[],"Scope":"","Format":"","Name":"","AssociatedTypes":[],"Enum":null,"RefType":"","Examples":[true],"Discriminator":null,"ItemType":null},"Comments":{"Summary":"","Description":"`true` if the feature is enabled for the environment, otherwise `false`.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"enabled"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the environment"},"Annotations":[{"Ignore":false,"FieldName":"environment"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"environment","Type":{"RefType":"","Format":"","AssociatedTypes":[],"BaseName":"","Name":"","Fields":[],"ItemType":null,"Comments":{"Summary":"","Description":"","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Scope":"","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true},"Examples":["development"],"Type":"string","Enum":null,"AdditionalProperties":null,"Discriminator":null}},{"Name":"featureName","Type":{"Type":"string","Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Comments":{"DeprecationMessage":"","Summary":"","Description":"","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Input":false,"Format":"","Discriminator":null,"Truncated":false,"Name":"","Enum":null,"Output":false,"Extensions":{"x-untouched":true},"Examples":["disable-comments"],"ItemType":null,"RefType":"","AdditionalProperties":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the feature"},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"name","Type":{"Enum":null,"RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Fields":[],"Comments":null,"Type":"string","ItemType":null,"Scope":"","Truncated":false,"Examples":["my-dev-env"],"Name":"","BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AssociatedTypes":[]},"Comments":{"Summary":"","Description":"The name of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"projectId","Type":{"AssociatedTypes":[],"Scope":"","BaseName":"","RefType":"","Truncated":false,"Output":false,"Discriminator":null,"Type":"string","Fields":[],"Enum":null,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"","ExternalDocs":null,"Deprecated":false},"Extensions":{},"Format":"","ItemType":null,"Examples":[],"AdditionalProperties":null,"Name":"","Input":false},"Comments":null,"Annotations":[{"ParamType":"pathParam","Name":"projectId","Serialization":"","Style":"simple","Explode":false,"FieldType":{"ItemType":null,"Name":"","Fields":[],"BaseName":"","Output":false,"Extensions":{},"Type":"string","AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"AdditionalProperties":null,"Discriminator":null,"Scope":"","Comments":{"Description":"","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"Examples":[],"Format":""}}]},{"Comments":{"Summary":"","Description":"The sort order of the feature environment in the feature environments list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"sortOrder","Type":{"Type":"number","AssociatedTypes":[],"Enum":null,"Examples":[3],"Format":"","AdditionalProperties":null,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Discriminator":null,"Scope":"","BaseName":"","Name":"","ItemType":null,"Fields":[],"RefType":""}},{"Name":"strategies","Type":{"Name":"","Type":"array","AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Comments":null,"Input":false,"Output":false,"ItemType":{"Name":"featureStrategySchema","Fields":[{"Annotations":[{"Ignore":false,"FieldName":"constraints"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"constraints","Type":{"Format":"","ItemType":{"RefType":"Schemas","Output":false,"AdditionalProperties":null,"Name":"constraintSchema","Enum":null,"Scope":"shared","BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"ConstraintSchema"},"Type":"class","Fields":[{"Name":"caseInsensitive","Type":{"Truncated":false,"Comments":null,"Input":false,"Scope":"","ItemType":null,"Fields":[],"BaseName":"","RefType":"","AdditionalProperties":null,"Type":"boolean","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Format":"","Discriminator":null,"Output":false,"AssociatedTypes":[],"Enum":null,"Name":""},"Comments":{"Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Name":"","Truncated":false,"Output":false,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["appName"],"Discriminator":null,"Enum":null,"RefType":"","Comments":null,"Input":false,"Format":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"RefType":"","AdditionalProperties":null,"Fields":[],"Enum":null,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Type":"boolean","ItemType":null,"Examples":[],"Format":"","AssociatedTypes":[],"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Scope":""},"Comments":{"Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true},{"Name":"operator","Type":{"Scope":"shared","BaseName":"","Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Examples":["IN"],"Enum":{"Type":{"Format":"","Name":"","ItemType":null,"AssociatedTypes":[],"Scope":"","BaseName":"","Discriminator":null,"Extensions":{},"Examples":[],"AdditionalProperties":null,"Type":"string","Truncated":false,"Comments":null,"Input":false,"Output":false,"Fields":[],"Enum":null,"RefType":""},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"RefType":"","AdditionalProperties":null,"Name":"constraintSchema_operator","Input":false,"Output":false,"Type":"enum","ItemType":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Discriminator":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators)."},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Output":false,"Examples":["my-app"],"Discriminator":null,"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null,"Name":"","ItemType":null,"Enum":null,"Scope":"","Input":false,"Format":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""}},{"Name":"values","Type":{"Enum":null,"Examples":[],"AssociatedTypes":[],"RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"array","Truncated":false,"Comments":null,"Format":"","AdditionalProperties":null,"Discriminator":null,"ItemType":{"Output":false,"ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":"","Name":"","Fields":[],"Enum":null,"Scope":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Discriminator":null,"Type":"string","AssociatedTypes":[],"BaseName":"","AdditionalProperties":null},"Fields":[],"Scope":"","BaseName":"","Output":false},"Comments":{"Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Discriminator":null,"AssociatedTypes":[],"Truncated":false,"Examples":[],"Format":"","ItemType":null,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false}},"BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Enum":null,"Discriminator":null,"Truncated":false,"Comments":null,"Output":false,"AdditionalProperties":null,"Type":"array","Fields":[],"Scope":"","RefType":"","AssociatedTypes":[],"Examples":[]},"Comments":{"Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Type":{"Scope":"","Comments":null,"Output":false,"Format":"","Type":"boolean","RefType":"","Truncated":false,"Input":false,"AdditionalProperties":null,"Name":"","ItemType":null,"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Fields":[],"Enum":null,"BaseName":"","Examples":[false]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"disabled"},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"featureName","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"featureName","Type":{"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["myAwesomeFeature"],"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Comments":null,"Discriminator":null,"Type":"string","Enum":null,"RefType":"","Format":"","ItemType":null,"Scope":"","Input":false,"Name":"","BaseName":""}},{"Name":"id","Type":{"Type":"string","ItemType":null,"Fields":[],"Discriminator":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"Format":"","Name":"","Scope":"","Truncated":false,"Input":false,"Output":false,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"AdditionalProperties":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["flexibleRollout"],"AdditionalProperties":null,"Enum":null,"Scope":"","Output":false,"Name":"","Fields":[],"AssociatedTypes":[],"BaseName":"","RefType":"","Discriminator":null,"Type":"string","ItemType":null,"Truncated":false,"Comments":null,"Format":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"name"}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"parameters","Type":{"Scope":"","RefType":"","Input":false,"Examples":[],"AdditionalProperties":null,"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"map","ItemType":{"AssociatedTypes":[],"RefType":"","Truncated":false,"Input":false,"Discriminator":null,"Name":"","Type":"string","ItemType":null,"Comments":null,"Output":false,"Format":"","Examples":[],"AdditionalProperties":null,"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Fields":[],"Enum":null,"Scope":""},"Output":false,"Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Truncated":false},"Comments":{"Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true},{"SerializationMethod":null,"ErrorMessage":false,"Name":"segments","Type":{"Name":"","BaseName":"","Examples":[],"Discriminator":null,"Type":"array","ItemType":{"AdditionalProperties":null,"BaseName":"","Output":false,"RefType":"","Examples":[],"Fields":[],"AssociatedTypes":[],"Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"Segments","x-untouched":true},"Format":"","Discriminator":null,"ItemType":null,"Scope":"","Enum":null,"Truncated":false,"Comments":null,"Input":false,"Name":"","Type":"number"},"AssociatedTypes":[],"RefType":"","Truncated":false,"Enum":null,"Input":false,"Output":false,"Format":"","Fields":[],"Scope":"","Comments":null,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"AdditionalProperties":null},"Comments":{"Summary":"","Description":"A list of segment ids attached to the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"segments"}],"Optional":true},{"ErrorMessage":false,"Name":"sortOrder","Type":{"Comments":null,"Name":"","Type":"number","Truncated":false,"Enum":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"RefType":"","AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"BaseName":"","Examples":[9999],"Format":"","Discriminator":null,"Fields":[],"Scope":"","Input":false},"Comments":{"Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null},{"Comments":{"Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"title","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"title","Type":{"AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"ItemType":null,"Type":"string","Fields":[],"Comments":null,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Name":"","Output":false,"Examples":["Gradual Rollout 25-Prod"],"AdditionalProperties":null,"Discriminator":null,"BaseName":"","Input":false,"Format":"","Scope":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"Fields":[],"AssociatedTypes":[],"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Comments":null,"Examples":[],"Format":"","ItemType":{"Input":false,"Examples":[],"AdditionalProperties":null,"Type":"class","BaseName":"","RefType":"Schemas","Output":false,"Scope":"shared","Truncated":false,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false},"Enum":null,"Format":"","Discriminator":null,"Name":"strategyVariantSchema","Fields":[{"Type":{"AdditionalProperties":null,"Discriminator":null,"Type":"string","Input":false,"Examples":["blue_group"],"Comments":null,"RefType":"","Truncated":false,"Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","ItemType":null,"Scope":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle"},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Fields":[{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"RefType":"","Fields":[],"ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Type":"enum","Format":"","AssociatedTypes":[],"Enum":{"Names":[],"Type":{"ItemType":null,"BaseName":"","Input":false,"Extensions":{},"AdditionalProperties":null,"Type":"string","Truncated":false,"Output":false,"Scope":"","RefType":"","Format":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"Examples":[]},"Values":["json","csv","string"]},"Name":"strategyVariantSchema_payload_type","Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"Discriminator":null,"BaseName":""}},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"ItemType":null,"Comments":null,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Examples":[],"Type":"string","AssociatedTypes":[],"Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"RefType":"","Input":false,"Name":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false}}],"RefType":"Schemas","Output":false,"Name":"strategyVariantSchema_payload","Enum":null,"BaseName":"","ItemType":null,"AssociatedTypes":[],"Scope":"shared","Examples":[],"AdditionalProperties":null,"Type":"class","Truncated":false,"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Format":"","Discriminator":null},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true},{"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"ItemType":null,"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"Type":"string","Discriminator":null,"RefType":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"BaseName":"","Fields":[],"Scope":"","Examples":["custom.context.field"],"Name":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time"},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false},{"Name":"weight","Type":{"AdditionalProperties":null,"Type":"integer","Fields":[],"Truncated":false,"Input":false,"RefType":"","Output":false,"Format":"","Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Comments":null,"Examples":[]},"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"AdditionalProperties":null,"BaseName":"","Input":false,"Examples":["fix"],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"ItemType":null,"Fields":[],"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Truncated":false,"Output":false,"Name":"strategyVariantSchema_weightType","Type":"enum","RefType":"","Format":"","AssociatedTypes":[],"Enum":{"Type":{"Type":"string","ItemType":null,"Output":false,"Fields":[],"Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","Enum":null,"Scope":"","RefType":"","Extensions":{},"Format":"","AdditionalProperties":null},"Values":["variable","fix"],"Names":[]},"Scope":"shared"},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)."},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType"}],"AssociatedTypes":[],"ItemType":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchema"}},"Enum":null,"Scope":"","AdditionalProperties":null,"Discriminator":null,"Type":"array","RefType":"","Truncated":false,"BaseName":""},"Comments":{"Summary":"","Description":"Strategy level variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"variants"}]}],"BaseName":"","RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"FeatureStrategySchema"},"AdditionalProperties":null,"ItemType":null,"Type":"class","AssociatedTypes":[],"Truncated":false,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A single activation strategy configuration schema for a feature","ExternalDocs":null},"Enum":null,"Scope":"shared","Input":false,"Output":false,"Examples":[],"Format":"","Discriminator":null},"RefType":"","Examples":[],"Format":"","AdditionalProperties":null},"Comments":{"Description":"A list of activation strategies for the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"strategies"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Summary":"","Description":"The type of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Comments":null,"RefType":"","Input":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Discriminator":null,"Type":"string","ItemType":null,"Scope":"","Truncated":false,"Examples":["development"],"Format":"","AssociatedTypes":[],"Enum":null,"BaseName":"","AdditionalProperties":null,"Name":"","Fields":[],"Output":false}},{"Annotations":[{"FieldName":"variantCount","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variantCount","Type":{"RefType":"","Input":false,"Output":false,"Type":"number","ItemType":null,"Scope":"","BaseName":"","Truncated":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Enum":null,"Format":"","AdditionalProperties":null,"Name":"","Fields":[],"AssociatedTypes":[],"Comments":null,"Examples":[],"Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The number of defined variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"Scope":"","BaseName":"","Output":false,"AdditionalProperties":null,"Name":"","Type":"array","ItemType":{"Discriminator":null,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A variant allows for further separation of users into segments. See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants) for a more detailed description","ExternalDocs":null},"Input":false,"Examples":[],"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"shared","Truncated":false,"Output":false,"Type":"class","Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"AdditionalProperties":null,"Enum":null,"BaseName":"","RefType":"","Type":"string","Input":false,"Output":false,"AssociatedTypes":[],"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Name":"","ItemType":null,"Fields":[],"Discriminator":null,"Scope":"","Truncated":false,"Examples":["blue_group"]},"Comments":{"Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":false},{"Name":"overrides","Type":{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"AssociatedTypes":[],"Scope":"","RefType":"","Truncated":false,"ItemType":{"Scope":"shared","Truncated":false,"Examples":[],"AdditionalProperties":null,"Name":"overrideSchema","Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Enum":null,"Scope":"","Truncated":false,"Output":false,"Examples":["userId"],"AssociatedTypes":[],"Type":"string","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","RefType":"","Format":"","AdditionalProperties":null,"Fields":[],"Comments":null,"Input":false,"ItemType":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"contextName"}]},{"Name":"values","Type":{"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"ItemType":{"ItemType":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Examples":[],"Type":"string","Scope":"","Input":false,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"Name":"","Truncated":false},"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Input":false,"Discriminator":null,"RefType":"","Truncated":false,"Format":"","Name":"","Enum":null,"Comments":null,"Examples":[],"Type":"array","AdditionalProperties":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Which values that should be overriden","ExternalDocs":null},"Annotations":[{"FieldName":"values","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"OverrideSchema","x-untouched":true},"Format":"","Comments":{"Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Discriminator":null,"Type":"class","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":""},"BaseName":"","Output":false,"Format":"","Discriminator":null,"Type":"array","Enum":null,"Comments":null,"Examples":[],"AdditionalProperties":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Examples":[],"Scope":"shared","Truncated":false,"Output":false,"Input":false,"AdditionalProperties":null,"Fields":[{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Enum":{"Type":{"Name":"","Scope":"","BaseName":"","AdditionalProperties":null,"Discriminator":null,"Enum":null,"Truncated":false,"Comments":null,"Output":false,"Format":"","Fields":[],"RefType":"","Extensions":{},"Examples":[],"Type":"string","ItemType":null,"AssociatedTypes":[],"Input":false},"Values":["json","csv","string"],"Names":[]},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Examples":[],"Type":"enum","ItemType":null,"Fields":[],"Discriminator":null,"Scope":"shared","RefType":"","AdditionalProperties":null,"Truncated":false,"Name":"variantSchema_payload_type","AssociatedTypes":[],"BaseName":"","Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Format":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Output":false,"Format":"","AdditionalProperties":null,"Enum":null,"Scope":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Discriminator":null,"AssociatedTypes":[],"ItemType":null,"BaseName":"","Name":"","Fields":[],"RefType":"","Comments":null,"Type":"string"},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"FieldName":"value","Ignore":false}],"Optional":false}],"AssociatedTypes":[],"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Enum":null,"BaseName":"","Format":"","Name":"variantSchema_payload","Type":"class","ItemType":null,"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Discriminator":null},"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"payload","Ignore":false}]},{"Type":{"Output":false,"Fields":[],"Input":false,"Truncated":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"RefType":"","Enum":null,"Comments":null,"Examples":["custom.context.field"],"Discriminator":null,"Name":"","ItemType":null,"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Type":"string","Scope":""},"Comments":{"Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness"},{"Type":{"Truncated":false,"AdditionalProperties":null,"BaseName":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"number","ItemType":null,"AssociatedTypes":[],"Enum":null,"Scope":"","Output":false,"Examples":[],"Fields":[],"RefType":"","Format":"","Discriminator":null},"Comments":{"Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Enum":{"Names":[],"Type":{"RefType":"","Input":false,"Examples":[],"Name":"","Type":"string","ItemType":null,"AdditionalProperties":null,"Scope":"","Output":false,"Format":"","Extensions":{},"Discriminator":null,"BaseName":"","Truncated":false,"Comments":null,"Fields":[],"AssociatedTypes":[],"Enum":null},"Values":["variable","fix"]},"BaseName":"","RefType":"","Examples":["variable"],"AdditionalProperties":null,"ItemType":null,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"variantSchema_weightType","Fields":[],"AssociatedTypes":[],"Scope":"shared","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000"},"Format":"","Type":"enum","Input":false,"Output":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":true}],"AssociatedTypes":[],"RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"VariantSchema","x-untouched":true},"Name":"variantSchema","Enum":null,"BaseName":""},"Format":"","AssociatedTypes":[],"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Fields":[],"Enum":null,"Truncated":false,"RefType":"","Input":false,"Discriminator":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of variants for the feature environment"},"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true}],"Comments":{"Summary":"","Description":"A detailed description of the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{"x-speakeasy-entity":"FeatureEnvironment","x-untouched":true,"x-speakeasy-root":true},"Scope":"shared","BaseName":"","Output":false,"Examples":[],"Discriminator":null,"Enum":null,"Input":false,"AdditionalProperties":null}, {"ItemType":null,"AssociatedTypes":[],"Enum":null,"Scope":"shared","RefType":"Schemas","Extensions":{"x-speakeasy-entity":"FeatureEnvironment"},"Format":"","Name":"featureEnvironmentSchema","AdditionalProperties":null,"BaseName":"","Output":false,"Type":"class","Examples":[],"Input":false,"Truncated":false,"Comments":{"Description":"A detailed description of the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Discriminator":null,"Fields":[{"Name":"enabled","Type":{"BaseName":"","RefType":"","Truncated":false,"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"","Comments":null,"Extensions":{},"Discriminator":null,"Name":"","AssociatedTypes":[],"Output":false,"Examples":[true],"Type":"boolean","Fields":[],"Enum":null,"Input":false},"Comments":{"Summary":"","Description":"`true` if the feature is enabled for the environment, otherwise `false`.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"enabled"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"environment","Type":{"ItemType":null,"Fields":[],"Enum":null,"RefType":"","Name":"","AssociatedTypes":[],"Scope":"","Output":false,"Truncated":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"Type":"string","BaseName":"","Comments":null,"Input":false,"Examples":["development"],"Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the environment"},"Annotations":[{"Ignore":false,"FieldName":"environment"}]},{"Name":"featureName","Type":{"Enum":null,"BaseName":"","AdditionalProperties":null,"Name":"","Fields":[],"Input":false,"Format":"","RefType":"","Truncated":false,"Extensions":{},"Discriminator":null,"ItemType":null,"Scope":"","Comments":null,"Output":false,"Examples":["disable-comments"],"Type":"string","AssociatedTypes":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the feature","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"name","Type":{"AssociatedTypes":[],"Enum":null,"Scope":"","RefType":"","Fields":[],"Type":"string","ItemType":null,"BaseName":"","Truncated":false,"Comments":null,"Input":false,"Format":"","Name":"","Extensions":{},"AdditionalProperties":null,"Output":false,"Discriminator":null,"Examples":["my-dev-env"]},"Comments":{"Description":"The name of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"sortOrder","Type":{"AdditionalProperties":null,"Type":"number","ItemType":null,"Input":false,"Format":"","Name":"","RefType":"","Comments":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Examples":[3],"Extensions":{},"Fields":[],"Scope":"","Truncated":false,"Output":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The sort order of the feature environment in the feature environments list","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null},{"Comments":{"Summary":"","Description":"A list of activation strategies for the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"strategies"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"strategies","Type":{"Name":"","BaseName":"","Output":false,"Format":"","Type":"array","AssociatedTypes":[],"Enum":null,"AdditionalProperties":null,"Discriminator":null,"Fields":[],"Scope":"","Truncated":false,"Comments":null,"Input":false,"ItemType":{"ItemType":null,"Fields":[{"Comments":{"Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"constraints","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"constraints","Type":{"Truncated":false,"Input":false,"Output":false,"Type":"array","BaseName":"","Format":"","Comments":null,"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","RefType":"","Name":"","ItemType":{"AssociatedTypes":[],"Scope":"shared","Format":"","Discriminator":null,"Name":"constraintSchema","BaseName":"","Truncated":false,"Input":false,"Output":false,"Extensions":{},"Type":"class","ItemType":null,"Comments":{"Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Examples":[],"Fields":[{"ErrorMessage":false,"Name":"caseInsensitive","Type":{"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Scope":"","BaseName":"","Comments":null,"Extensions":{},"Name":"","ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":"","Type":"boolean","Fields":[],"Input":false,"Output":false},"Comments":{"Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"ItemType":null,"BaseName":"","Truncated":false,"Output":false,"Extensions":{},"Name":"","Type":"string","Fields":[],"Enum":null,"RefType":"","Comments":null,"Input":false,"Examples":["appName"],"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","Discriminator":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to."},"Annotations":[{"FieldName":"contextName","Ignore":false}]},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Type":"boolean","Fields":[],"Enum":null,"BaseName":"","Truncated":false,"Extensions":{},"Examples":[],"ItemType":null,"Scope":"","Input":false,"AdditionalProperties":null,"Comments":null,"Format":"","Name":"","AssociatedTypes":[],"RefType":"","Output":false,"Discriminator":null}},{"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"BaseName":"","RefType":"","Input":false,"Examples":["IN"],"AssociatedTypes":[],"Enum":{"Type":{"ItemType":null,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Extensions":{},"Format":"","Fields":[],"RefType":"","Comments":null,"Examples":[],"Output":false,"Name":"","Type":"string","Scope":"","Truncated":false,"Input":false},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"Extensions":{},"Format":"","AdditionalProperties":null,"Fields":[],"Scope":"shared","Comments":{"Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"ItemType":null,"Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"Name":"constraintSchema_operator"},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Name":"","AssociatedTypes":[],"Truncated":false,"Input":false,"Output":false,"Fields":[],"Examples":["my-app"],"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Comments":null,"Enum":null,"Scope":"","Extensions":{}},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"value"}]},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"ItemType":{"Input":false,"Output":false,"Extensions":{},"RefType":"","Truncated":false,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Scope":"","Comments":null,"Name":"","Type":"string","ItemType":null,"Fields":[],"BaseName":"","Examples":[],"Format":"","AdditionalProperties":null},"Enum":null,"Truncated":false,"Input":false,"RefType":"","Examples":[],"AdditionalProperties":null,"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","Comments":null,"Output":false,"Extensions":{},"Format":"","Type":"array","Fields":[],"Scope":""}}],"Enum":null,"RefType":"Schemas","AdditionalProperties":null},"Extensions":{},"Examples":[],"Discriminator":null}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"disabled","Type":{"Name":"","RefType":"","Truncated":false,"Enum":null,"Comments":null,"Output":false,"Extensions":{},"Examples":[false],"Format":"","Type":"boolean","Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","ItemType":null,"Input":false,"AdditionalProperties":null,"Discriminator":null},"Comments":{"Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"disabled","Ignore":false}]},{"ErrorMessage":false,"Name":"featureName","Type":{"ItemType":null,"Input":false,"Examples":["myAwesomeFeature"],"Format":"","AdditionalProperties":null,"Fields":[],"Enum":null,"Scope":"","Output":false,"Extensions":{},"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Comments":null,"Type":"string","Truncated":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"featureName","Ignore":false}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"BaseName":"","RefType":"","Comments":null,"Name":"","ItemType":null,"Enum":null,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Truncated":false,"Input":false,"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"Type":"string","Fields":[],"Scope":"","Output":false,"Format":""},"Comments":{"Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Type":{"Name":"","BaseName":"","Input":false,"Discriminator":null,"Truncated":false,"Extensions":{},"Type":"string","ItemType":null,"Fields":[],"Scope":"","Examples":["flexibleRollout"],"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Output":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"},{"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"parameters","Type":{"Name":"","AssociatedTypes":[],"AdditionalProperties":null,"Truncated":false,"Examples":[],"Type":"map","ItemType":{"Extensions":{},"Truncated":false,"Fields":[],"AssociatedTypes":[],"AdditionalProperties":null,"Name":"","Enum":null,"Scope":"","RefType":"","Input":false,"Output":false,"Format":"","Discriminator":null,"Type":"string","BaseName":"","Comments":null,"Examples":[],"ItemType":null},"Fields":[],"RefType":"","Scope":"","BaseName":"","Output":false,"Extensions":{},"Discriminator":null,"Enum":null,"Comments":null,"Input":false,"Format":""},"Comments":{"Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of segment ids attached to the strategy"},"Annotations":[{"Ignore":false,"FieldName":"segments"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"segments","Type":{"AssociatedTypes":[],"Fields":[],"Enum":null,"Scope":"","BaseName":"","RefType":"","Truncated":false,"Discriminator":null,"ItemType":{"Examples":[],"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Truncated":false,"Comments":null,"Name":"","Fields":[],"Scope":"","Input":false,"Discriminator":null,"Type":"number","Extensions":{},"Output":false,"Format":"","AdditionalProperties":null},"Output":false,"Extensions":{},"Examples":[],"Type":"array","Comments":null,"Input":false,"Format":"","AdditionalProperties":null,"Name":""}},{"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"sortOrder","Type":{"Type":"number","Scope":"","BaseName":"","Comments":null,"Examples":[9999],"AssociatedTypes":[],"Truncated":false,"Input":false,"Output":false,"Extensions":{},"ItemType":null,"Fields":[],"Enum":null,"Discriminator":null,"Name":"","RefType":"","Format":"","AdditionalProperties":null},"Comments":{"Summary":"","Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"title","Type":{"Discriminator":null,"Name":"","Type":"string","AssociatedTypes":[],"Scope":"","Input":false,"Output":false,"Enum":null,"RefType":"","Truncated":false,"Examples":["Gradual Rollout 25-Prod"],"Format":"","ItemType":null,"Fields":[],"Comments":null,"Extensions":{},"AdditionalProperties":null,"BaseName":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"title"}]},{"Type":{"Enum":null,"Scope":"","Truncated":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Comments":null,"Output":false,"Extensions":{},"Examples":[],"Discriminator":null,"Name":"","Type":"array","ItemType":{"Name":"strategyVariantSchema","AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"Schemas","Output":false,"ItemType":null,"Fields":[{"ErrorMessage":false,"Name":"name","Type":{"Scope":"","Comments":null,"Examples":["blue_group"],"ItemType":null,"Type":"string","Enum":null,"BaseName":"","RefType":"","Output":false,"Extensions":{},"AdditionalProperties":null,"Name":"","Truncated":false,"Input":false,"Fields":[],"Format":"","Discriminator":null,"AssociatedTypes":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null},{"Name":"payload","Type":{"Enum":null,"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{},"Examples":[],"Name":"strategyVariantSchema_payload","Type":"class","Scope":"shared","Truncated":false,"Output":false,"Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Input":false,"Output":false,"Discriminator":null,"Name":"strategyVariantSchema_payload_type","Type":"enum","RefType":"","Truncated":false,"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{},"Examples":[],"Format":"","ItemType":null,"Scope":"shared","BaseName":"","AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":{"Values":["json","csv","string"],"Names":[],"Type":{"Input":false,"Extensions":{},"Examples":[],"ItemType":null,"Type":"string","Fields":[],"Scope":"","RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Name":"","Comments":null,"AssociatedTypes":[],"BaseName":"","Truncated":false,"Discriminator":null,"Enum":null}}},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false},{"Name":"value","Type":{"Input":false,"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Comments":null,"Name":"","Extensions":{},"Discriminator":null,"AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Format":"","Enum":null,"Examples":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"BaseName":"","RefType":"Schemas","ItemType":null,"Format":"","AdditionalProperties":null,"Discriminator":null},"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"stickiness","Type":{"Extensions":{},"Examples":["custom.context.field"],"Name":"","Fields":[],"Enum":null,"RefType":"","Truncated":false,"Output":false,"Type":"string","AssociatedTypes":[],"Scope":"","BaseName":"","Comments":null,"Input":false,"Format":"","ItemType":null,"AdditionalProperties":null,"Discriminator":null},"Comments":{"Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Scope":"","Enum":null,"BaseName":"","Discriminator":null,"Name":"","Truncated":false,"Comments":null,"Extensions":{},"Format":"","AdditionalProperties":null,"Type":"integer","Fields":[],"AssociatedTypes":[],"RefType":"","Input":false,"Output":false,"Examples":[],"ItemType":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"AdditionalProperties":null,"Name":"strategyVariantSchema_weightType","AssociatedTypes":[],"Output":false,"Extensions":{},"Type":"enum","Enum":{"Type":{"ItemType":null,"AssociatedTypes":[],"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Name":"","Truncated":false,"Discriminator":null,"Type":"string","Enum":null,"BaseName":"","RefType":"","Comments":null,"Examples":[],"Fields":[],"Scope":"","Extensions":{}},"Values":["variable","fix"],"Names":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Input":false,"Scope":"shared","BaseName":"","RefType":"","Truncated":false,"Discriminator":null,"ItemType":null,"Fields":[],"Examples":["fix"],"Format":""},"Comments":{"Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false}],"Comments":{"Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"Type":"class","Scope":"shared","Truncated":false,"Examples":[],"Format":""},"Fields":[],"BaseName":"","RefType":"","Input":false},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Strategy level variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants"}],"AssociatedTypes":[],"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"class","Enum":null,"Extensions":{},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A single activation strategy configuration schema for a feature","ExternalDocs":null,"Deprecated":false},"Name":"featureStrategySchema","Scope":"shared","RefType":"Schemas","Output":false,"BaseName":"","Truncated":false,"Input":false},"RefType":"","Extensions":{},"Examples":[]}},{"Type":{"Input":false,"BaseName":"","RefType":"","AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"Examples":["development"],"Type":"string","Fields":[],"Name":"","ItemType":null,"Extensions":{},"Format":"","AdditionalProperties":null,"Discriminator":null,"Scope":"","Truncated":false},"Comments":{"Summary":"","Description":"The type of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type"},{"ErrorMessage":false,"Name":"variantCount","Type":{"Discriminator":null,"BaseName":"","Truncated":false,"Examples":[],"Format":"","Enum":null,"Type":"number","ItemType":null,"Fields":[],"AssociatedTypes":[],"Name":"","Extensions":{},"Output":false,"AdditionalProperties":null,"Scope":"","RefType":"","Comments":null,"Input":false},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The number of defined variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"variantCount"}],"Optional":true,"SerializationMethod":null},{"Name":"variants","Type":{"Enum":null,"Output":false,"Extensions":{},"Examples":[],"Discriminator":null,"Type":"array","Fields":[],"Input":false,"Format":"","Comments":null,"AdditionalProperties":null,"Name":"","ItemType":{"Type":"class","Comments":{"Description":"A variant allows for further separation of users into segments. See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants) for a more detailed description","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"RefType":"Schemas","Input":false,"Output":false,"Extensions":{},"Examples":[],"Name":"variantSchema","Fields":[{"Comments":{"Summary":"","Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Input":false,"AdditionalProperties":null,"Discriminator":null,"Type":"string","Fields":[],"Scope":"","Comments":null,"Output":false,"Examples":["blue_group"],"Truncated":false,"Extensions":{},"Format":"","Enum":null,"BaseName":"","RefType":"","Name":"","ItemType":null,"AssociatedTypes":[]}},{"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"overrides","Type":{"Name":"","Enum":null,"Scope":"","Output":false,"Extensions":{},"Examples":[],"Type":"array","AssociatedTypes":[],"Input":false,"ItemType":{"AssociatedTypes":[],"Truncated":false,"Extensions":{},"Fields":[{"Name":"contextName","Type":{"ItemType":null,"Scope":"","BaseName":"","Comments":null,"Truncated":false,"Input":false,"AdditionalProperties":null,"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Extensions":{},"Name":"","Type":"string","Output":false,"Examples":["userId"],"Format":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Which values that should be overriden","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Comments":null,"Extensions":{},"Fields":[],"Scope":"","BaseName":"","Output":false,"Examples":[],"AssociatedTypes":[],"ItemType":{"ItemType":null,"BaseName":"","Truncated":false,"Examples":[],"Discriminator":null,"Type":"string","AssociatedTypes":[],"AdditionalProperties":null,"Name":"","Fields":[],"Enum":null,"Scope":"","Output":false,"Extensions":{},"RefType":"","Comments":null,"Input":false,"Format":""},"AdditionalProperties":null,"Discriminator":null,"Name":"","Enum":null,"RefType":"","Truncated":false,"Input":false,"Format":"","Type":"array"}}],"BaseName":"","RefType":"Schemas","Input":false,"Format":"","Discriminator":null,"Name":"overrideSchema","ItemType":null,"Enum":null,"Scope":"shared","Output":false,"Examples":[],"Type":"class","Comments":{"Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null},"BaseName":"","RefType":"","Comments":null,"Fields":[],"Truncated":false,"Format":"","AdditionalProperties":null,"Discriminator":null},"Comments":{"Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"Name":"payload","Type":{"Truncated":false,"Enum":null,"Scope":"shared","RefType":"Schemas","Output":false,"BaseName":"","Input":false,"Extensions":{},"Examples":[],"Format":"","Name":"variantSchema_payload","Type":"class","AssociatedTypes":[],"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Name":"variantSchema_payload_type","Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{},"Examples":[],"Fields":[],"Enum":{"Type":{"Type":"string","AdditionalProperties":null,"Fields":[],"Scope":"","Comments":null,"Input":false,"RefType":"","Extensions":{},"Examples":[],"Discriminator":null,"Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Output":false,"Format":""},"Values":["json","csv","string"],"Names":[]},"BaseName":"","Format":"","AdditionalProperties":null,"Type":"enum","AssociatedTypes":[],"Scope":"shared","Truncated":false,"Input":false,"Output":false,"ItemType":null,"RefType":"","Discriminator":null},"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false},{"ErrorMessage":false,"Name":"value","Type":{"Type":"string","Truncated":false,"Comments":null,"Input":false,"Extensions":{},"Examples":[],"Discriminator":null,"ItemType":null,"Fields":[],"AssociatedTypes":[],"Name":"","Enum":null,"Scope":"","BaseName":"","Format":"","AdditionalProperties":null,"RefType":"","Output":false},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null}],"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"AssociatedTypes":[],"Examples":["custom.context.field"],"AdditionalProperties":null,"Fields":[],"RefType":"","Comments":null,"Input":false,"Output":false,"Extensions":{},"Type":"string","Enum":null,"Scope":"","BaseName":"","Truncated":false,"Name":"","ItemType":null,"Format":"","Discriminator":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null},"Annotations":[{"FieldName":"stickiness","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness"},{"Comments":{"DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Examples":[],"AdditionalProperties":null,"ItemType":null,"Truncated":false,"Extensions":{},"Format":"","Discriminator":null,"Name":"","Output":false,"Type":"number","Fields":[],"Scope":"","BaseName":"","Input":false}},{"Name":"weightType","Type":{"ItemType":null,"Output":false,"AdditionalProperties":null,"Name":"variantSchema_weightType","RefType":"","Truncated":false,"Format":"","Fields":[],"BaseName":"","Comments":{"Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{},"Examples":["variable"],"Enum":{"Names":[],"Type":{"Format":"","Name":"","Enum":null,"BaseName":"","Output":false,"Extensions":{},"Examples":[],"Type":"string","AssociatedTypes":[],"RefType":"","Comments":null,"Discriminator":null,"ItemType":null,"Scope":"","Truncated":false,"Fields":[],"Input":false,"AdditionalProperties":null},"Values":["variable","fix"]},"AssociatedTypes":[],"Scope":"shared","Discriminator":null,"Type":"enum"},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Format":"","Discriminator":null,"ItemType":null,"Scope":"shared","BaseName":"","Truncated":false},"AssociatedTypes":[],"BaseName":"","RefType":"","Scope":"","Truncated":false},"Comments":{"Summary":"","Description":"A list of variants for the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}]}, r)
	// Generate(get.feature_environment.enabled, {"Annotations":[{"Ignore":false,"FieldName":"enabled"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"enabled","Type":{"ItemType":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Examples":[true],"Discriminator":null,"Type":"boolean","Truncated":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Fields":[],"BaseName":"","Input":false,"Output":false,"Name":"","Scope":"","Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"`true` if the feature is enabled for the environment, otherwise `false`."}}, {"Type":{"ItemType":null,"Scope":"","Comments":null,"Extensions":{},"Discriminator":null,"Name":"","AssociatedTypes":[],"Output":false,"Examples":[true],"Type":"boolean","Fields":[],"Enum":null,"Input":false,"BaseName":"","RefType":"","Truncated":false,"Format":"","AdditionalProperties":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"`true` if the feature is enabled for the environment, otherwise `false`.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"enabled"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"enabled"})
	r.Enabled = types.BoolValue(resp.Enabled)
	// Generate(get.feature_environment.environment, {"SerializationMethod":null,"ErrorMessage":false,"Name":"environment","Type":{"ItemType":null,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"","ExternalDocs":null,"Deprecated":false},"Examples":["development"],"Type":"string","Enum":null,"Scope":"","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true},"AdditionalProperties":null,"Discriminator":null,"RefType":"","Format":"","Name":"","Fields":[],"AssociatedTypes":[],"BaseName":""},"Comments":{"Description":"The name of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"environment"}],"Optional":true}, {"Name":"environment","Type":{"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","BaseName":"","Comments":null,"Input":false,"Examples":["development"],"ItemType":null,"Fields":[],"Enum":null,"RefType":"","Name":"","AssociatedTypes":[],"Scope":"","Output":false,"Truncated":false,"Extensions":{}},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The name of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"environment"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
	if resp.Environment != nil {
		r.Environment = types.StringValue(*resp.Environment)
	} else {
		r.Environment = types.StringNull()
	}
	// Generate(get.feature_environment.feature_name, {"Name":"featureName","Type":{"Name":"","Enum":null,"Output":false,"Extensions":{"x-untouched":true},"Examples":["disable-comments"],"ItemType":null,"RefType":"","AdditionalProperties":null,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"","ExternalDocs":null,"Deprecated":false},"Input":false,"Format":"","Type":"string","Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Discriminator":null,"Truncated":false},"Comments":{"Summary":"","Description":"The name of the feature","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}, {"Type":{"Type":"string","AssociatedTypes":[],"Comments":null,"Output":false,"Examples":["disable-comments"],"Name":"","Fields":[],"Enum":null,"BaseName":"","AdditionalProperties":null,"Input":false,"Format":"","ItemType":null,"Scope":"","RefType":"","Truncated":false,"Extensions":{},"Discriminator":null},"Comments":{"Summary":"","Description":"The name of the feature","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"featureName"})
	if resp.FeatureName != nil {
		r.FeatureName = types.StringValue(*resp.FeatureName)
	} else {
		r.FeatureName = types.StringNull()
	}
	// Generate(get.feature_environment.name, {"Type":{"Comments":null,"Name":"","Type":"string","ItemType":null,"Scope":"","Truncated":false,"Examples":["my-dev-env"],"AssociatedTypes":[],"BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Fields":[],"Enum":null,"RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null},"Comments":{"Summary":"","Description":"The name of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"}, {"Comments":{"Summary":"","Description":"The name of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Output":false,"Extensions":{},"AdditionalProperties":null,"Examples":["my-dev-env"],"Discriminator":null,"RefType":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Comments":null,"Input":false,"Format":"","Name":"","Type":"string","ItemType":null,"BaseName":""}})
	r.Name = types.StringValue(resp.Name)
	// Generate(get.feature_environment.sort_order, {"Type":{"AssociatedTypes":[],"Enum":null,"Examples":[3],"Format":"","AdditionalProperties":null,"Type":"number","Comments":null,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Truncated":false,"BaseName":"","Scope":"","ItemType":null,"Fields":[],"RefType":"","Name":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The sort order of the feature environment in the feature environments list"},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"sortOrder"}, {"Name":"sortOrder","Type":{"Examples":[3],"AssociatedTypes":[],"Enum":null,"BaseName":"","Output":false,"Extensions":{},"Fields":[],"Scope":"","Truncated":false,"Format":"","AdditionalProperties":null,"Type":"number","ItemType":null,"Input":false,"Discriminator":null,"Name":"","RefType":"","Comments":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The sort order of the feature environment in the feature environments list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
	if resp.SortOrder != nil {
		r.SortOrder = types.NumberValue(big.NewFloat(float64(*resp.SortOrder)))
	} else {
		r.SortOrder = types.NumberNull()
	}
	// Generate(get.feature_environment.strategies, {"Annotations":[{"Ignore":false,"FieldName":"strategies"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"strategies","Type":{"Discriminator":null,"Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Comments":null,"Input":false,"Output":false,"ItemType":{"ItemType":null,"Type":"class","AssociatedTypes":[],"Truncated":false,"Comments":{"Description":"A single activation strategy configuration schema for a feature","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Discriminator":null,"Enum":null,"Scope":"shared","Input":false,"Output":false,"Examples":[],"Format":"","Name":"featureStrategySchema","Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"constraints","Type":{"ItemType":{"ItemType":null,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false},"Examples":[],"Format":"","Name":"constraintSchema","Enum":null,"RefType":"Schemas","Output":false,"AdditionalProperties":null,"Type":"class","Fields":[{"Comments":{"Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"caseInsensitive","Type":{"Discriminator":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Format":"","Name":"","AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Comments":null,"Input":false,"RefType":"","AdditionalProperties":null,"Type":"boolean","ItemType":null,"Fields":[],"BaseName":""}},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Name":"","Truncated":false,"Output":false,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["appName"],"Discriminator":null,"Enum":null,"RefType":"","Comments":null,"Input":false,"Format":""}},{"Name":"inverted","Type":{"Fields":[],"Enum":null,"RefType":"","AdditionalProperties":null,"Type":"boolean","ItemType":null,"Truncated":false,"Comments":null,"Input":false,"Output":false,"AssociatedTypes":[],"BaseName":"","Examples":[],"Format":"","Name":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null},"Comments":{"Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"inverted","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"Scope":"shared","BaseName":"","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators)."},"Examples":["IN"],"Enum":{"Type":{"Type":"string","Truncated":false,"Comments":null,"Extensions":{},"Examples":[],"AdditionalProperties":null,"Fields":[],"Enum":null,"RefType":"","Input":false,"Output":false,"Name":"","ItemType":null,"AssociatedTypes":[],"Format":"","Scope":"","BaseName":"","Discriminator":null},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"RefType":"","AdditionalProperties":null,"Name":"constraintSchema_operator","Input":false,"Output":false,"Discriminator":null,"Type":"enum","ItemType":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Name":"","ItemType":null,"Enum":null,"Scope":"","Input":false,"Format":"","Output":false,"Examples":["my-app"],"Discriminator":null,"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null},"Comments":{"Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}]},{"Type":{"Discriminator":null,"Name":"","Type":"array","Truncated":false,"Comments":null,"Format":"","AdditionalProperties":null,"ItemType":{"Output":false,"ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Discriminator":null,"Name":"","Fields":[],"Enum":null,"Scope":"","Comments":null,"Input":false,"Type":"string","AssociatedTypes":[],"BaseName":"","AdditionalProperties":null},"Fields":[],"Scope":"","BaseName":"","Output":false,"Enum":null,"Examples":[],"AssociatedTypes":[],"RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true}},"Comments":{"Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"values","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"values"}],"Scope":"shared","BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"ConstraintSchema"},"AssociatedTypes":[],"Truncated":false,"Discriminator":null},"BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Name":"","Enum":null,"Discriminator":null,"AdditionalProperties":null,"Type":"array","Fields":[],"Scope":"","RefType":"","Truncated":false,"Comments":null,"Output":false,"AssociatedTypes":[],"Examples":[]},"Comments":{"Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"constraints"}],"Optional":true},{"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"disabled","Type":{"Fields":[],"Enum":null,"BaseName":"","Examples":[false],"Scope":"","Comments":null,"Output":false,"Format":"","Type":"boolean","RefType":"","Truncated":false,"Input":false,"AdditionalProperties":null,"Name":"","ItemType":null,"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null},"Comments":{"Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Name":"featureName","Type":{"Format":"","Discriminator":null,"Type":"string","Enum":null,"RefType":"","ItemType":null,"Scope":"","Input":false,"Name":"","BaseName":"","Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["myAwesomeFeature"],"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Truncated":false},"Comments":{"Summary":"","Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"Format":"","Name":"","Scope":"","Truncated":false,"Input":false,"Output":false,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"Discriminator":null},"Comments":{"Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id"},{"Name":"name","Type":{"AssociatedTypes":[],"BaseName":"","RefType":"","Discriminator":null,"Name":"","Fields":[],"Truncated":false,"Comments":null,"Format":"","Type":"string","ItemType":null,"Examples":["flexibleRollout"],"AdditionalProperties":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Output":false,"Enum":null,"Scope":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy"},"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"parameters","Type":{"Fields":[],"AssociatedTypes":[],"Enum":null,"Truncated":false,"Scope":"","RefType":"","Input":false,"Examples":[],"AdditionalProperties":null,"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"map","ItemType":{"Comments":null,"Output":false,"Format":"","Examples":[],"AdditionalProperties":null,"Fields":[],"Enum":null,"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"string","ItemType":null,"AssociatedTypes":[],"RefType":"","Truncated":false,"Input":false},"Output":false,"Format":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"segments","Type":{"Enum":null,"Input":false,"Output":false,"Format":"","Fields":[],"Scope":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Name":"","BaseName":"","Examples":[],"Discriminator":null,"Type":"array","ItemType":{"Truncated":false,"Comments":null,"Input":false,"Name":"","Type":"number","Enum":null,"BaseName":"","Output":false,"AdditionalProperties":null,"Examples":[],"Fields":[],"AssociatedTypes":[],"RefType":"","Format":"","Discriminator":null,"ItemType":null,"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Segments"}},"AssociatedTypes":[],"RefType":"","Truncated":false},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of segment ids attached to the strategy"},"Annotations":[{"FieldName":"segments","Ignore":false}]},{"Name":"sortOrder","Type":{"Comments":null,"Name":"","Type":"number","Truncated":false,"Enum":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"RefType":"","AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"BaseName":"","Examples":[9999],"Format":"","Discriminator":null,"Fields":[],"Scope":"","Input":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"title","Type":{"Examples":["Gradual Rollout 25-Prod"],"AdditionalProperties":null,"Discriminator":null,"BaseName":"","Output":false,"Format":"","Scope":"","Input":false,"Enum":null,"RefType":"","Truncated":false,"ItemType":null,"AssociatedTypes":[],"Fields":[],"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"string"},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"title"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"BaseName":"","RefType":"","Truncated":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"AssociatedTypes":[],"Input":false,"ItemType":{"Name":"strategyVariantSchema","Fields":[{"Name":"name","Type":{"Name":"","ItemType":null,"Scope":"","BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Type":"string","Input":false,"Examples":["blue_group"],"AdditionalProperties":null,"Discriminator":null,"Comments":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"Format":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Name":"strategyVariantSchema_payload","Enum":null,"BaseName":"","ItemType":null,"AssociatedTypes":[],"Scope":"shared","Examples":[],"AdditionalProperties":null,"Type":"class","Truncated":false,"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Format":"","Discriminator":null,"Fields":[{"Name":"type","Type":{"Name":"strategyVariantSchema_payload_type","AssociatedTypes":[],"Enum":{"Type":{"AdditionalProperties":null,"ItemType":null,"BaseName":"","Input":false,"Extensions":{},"Type":"string","Truncated":false,"Output":false,"Scope":"","RefType":"","Comments":null,"Examples":[],"Format":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null},"Values":["json","csv","string"],"Names":[]},"BaseName":"","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Input":false,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Examples":[],"Type":"enum","ItemType":null,"Scope":"shared","Truncated":false,"Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"ItemType":null,"AssociatedTypes":[],"Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","Input":false,"RefType":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Name":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}]}],"RefType":"Schemas","Output":false},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}]},{"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"RefType":"","Discriminator":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"BaseName":"","Truncated":false,"Scope":"","Examples":["custom.context.field"],"Name":"","Fields":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null}},{"ErrorMessage":false,"Name":"weight","Type":{"Type":"integer","Fields":[],"Truncated":false,"Input":false,"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Output":false,"Format":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Comments":null,"Examples":[]},"Comments":{"Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"AssociatedTypes":[],"Enum":{"Type":{"Name":"","AssociatedTypes":[],"BaseName":"","Enum":null,"Scope":"","RefType":"","Extensions":{},"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"Output":false,"Fields":[],"Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null},"Values":["variable","fix"],"Names":[]},"Scope":"shared","Format":"","BaseName":"","Input":false,"Examples":["fix"],"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Fields":[],"Comments":{"Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Output":false,"Name":"strategyVariantSchema_weightType","Type":"enum","RefType":"","Truncated":false},"Comments":{"Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}}],"AssociatedTypes":[],"Enum":null,"Format":"","Discriminator":null,"ItemType":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchema"},"Type":"class","BaseName":"","RefType":"Schemas","Input":false,"Examples":[],"AdditionalProperties":null,"Scope":"shared","Truncated":false,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null},"Output":false},"Comments":null,"Examples":[],"Format":"","Discriminator":null,"Type":"array","Enum":null,"Scope":"","AdditionalProperties":null},"Comments":{"Summary":"","Description":"Strategy level variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"variants"}]}],"BaseName":"","RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"FeatureStrategySchema","x-untouched":true},"AdditionalProperties":null},"RefType":"","Examples":[],"Format":"","AdditionalProperties":null,"Name":"","Type":"array","AssociatedTypes":[]},"Comments":{"Summary":"","Description":"A list of activation strategies for the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}}, {"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"strategies","Type":{"BaseName":"","Output":false,"Format":"","Name":"","AssociatedTypes":[],"Enum":null,"Type":"array","Scope":"","Truncated":false,"Comments":null,"Input":false,"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Extensions":{},"Examples":[],"ItemType":{"Name":"featureStrategySchema","Scope":"shared","RefType":"Schemas","Comments":{"Summary":"","Description":"A single activation strategy configuration schema for a feature","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"BaseName":"","Truncated":false,"Input":false,"Output":false,"ItemType":null,"Fields":[{"Name":"constraints","Type":{"Examples":[],"Discriminator":null,"Name":"","ItemType":{"Input":false,"Output":false,"Extensions":{},"Format":"","Discriminator":null,"Name":"constraintSchema","BaseName":"","Truncated":false,"Examples":[],"Type":"class","ItemType":null,"Comments":{"Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"Fields":[{"Name":"caseInsensitive","Type":{"Examples":[],"Format":"","Type":"boolean","Fields":[],"Input":false,"Output":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Scope":"","BaseName":"","Comments":null,"Extensions":{},"Name":"","ItemType":null,"RefType":"","Truncated":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"contextName","Type":{"Name":"","Type":"string","Fields":[],"Examples":["appName"],"Format":"","AdditionalProperties":null,"Enum":null,"RefType":"","Comments":null,"Input":false,"AssociatedTypes":[],"Scope":"","Discriminator":null,"Extensions":{},"ItemType":null,"BaseName":"","Truncated":false,"Output":false},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null},{"Name":"inverted","Type":{"Comments":null,"Format":"","Name":"","AssociatedTypes":[],"RefType":"","Output":false,"Discriminator":null,"Examples":[],"Type":"boolean","Fields":[],"Enum":null,"BaseName":"","Truncated":false,"Extensions":{},"ItemType":null,"Scope":"","Input":false,"AdditionalProperties":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa."},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"Name":"constraintSchema_operator","Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Input":false,"Examples":["IN"],"Fields":[],"Enum":{"Type":{"Output":false,"Name":"","Type":"string","Scope":"","Truncated":false,"Input":false,"ItemType":null,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Extensions":{},"Format":"","Fields":[],"RefType":"","Comments":null,"Examples":[]},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"Extensions":{},"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"shared","Comments":{"Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}}},{"ErrorMessage":false,"Name":"value","Type":{"Enum":null,"Scope":"","Extensions":{},"Output":false,"Name":"","AssociatedTypes":[],"Truncated":false,"Input":false,"Fields":[],"Examples":["my-app"],"Format":"","AdditionalProperties":null,"Comments":null,"Discriminator":null,"Type":"string","ItemType":null,"BaseName":"","RefType":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Input":false,"BaseName":"","RefType":"","Examples":[],"AdditionalProperties":null,"Discriminator":null,"Name":"","AssociatedTypes":[],"Scope":"","Comments":null,"Output":false,"Extensions":{},"Format":"","Type":"array","Fields":[],"Truncated":false,"ItemType":{"RefType":"","Truncated":false,"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","Comments":null,"Name":"","Type":"string","ItemType":null,"AdditionalProperties":null,"BaseName":"","Examples":[],"Format":"","Input":false,"Output":false,"Extensions":{}},"Enum":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null}}],"Enum":null,"RefType":"Schemas","AssociatedTypes":[],"Scope":"shared"},"Extensions":{},"Truncated":false,"Input":false,"Output":false,"Type":"array","BaseName":"","Format":"","Scope":"","RefType":"","Comments":null,"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"constraints"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"disabled","Type":{"Name":"","RefType":"","Truncated":false,"Extensions":{},"Examples":[false],"Enum":null,"Comments":null,"Output":false,"Scope":"","BaseName":"","Format":"","Type":"boolean","Fields":[],"AssociatedTypes":[],"Discriminator":null,"ItemType":null,"Input":false,"AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"featureName","Type":{"Type":"string","Truncated":false,"AdditionalProperties":null,"ItemType":null,"Input":false,"Examples":["myAwesomeFeature"],"Format":"","Extensions":{},"Fields":[],"Enum":null,"Scope":"","Output":false,"Comments":null,"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":""},"Comments":{"Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"featureName","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"Input":false,"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"AssociatedTypes":[],"Truncated":false,"Scope":"","Output":false,"Format":"","Type":"string","Fields":[],"Comments":null,"BaseName":"","RefType":"","Enum":null,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"Name":"","ItemType":null}},{"Type":{"BaseName":"","Input":false,"Discriminator":null,"Name":"","Extensions":{},"Truncated":false,"ItemType":null,"Fields":[],"Scope":"","Examples":["flexibleRollout"],"Format":"","AdditionalProperties":null,"Type":"string","Enum":null,"RefType":"","Comments":null,"Output":false,"AssociatedTypes":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"},{"Name":"parameters","Type":{"BaseName":"","Output":false,"Extensions":{},"Scope":"","Comments":null,"Input":false,"Format":"","Discriminator":null,"Enum":null,"AssociatedTypes":[],"AdditionalProperties":null,"Name":"","ItemType":{"Comments":null,"Examples":[],"ItemType":null,"BaseName":"","Truncated":false,"Extensions":{},"AssociatedTypes":[],"AdditionalProperties":null,"Name":"","Fields":[],"Scope":"","RefType":"","Input":false,"Output":false,"Format":"","Discriminator":null,"Type":"string","Enum":null},"Fields":[],"RefType":"","Truncated":false,"Examples":[],"Type":"map"},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"segments","Type":{"Name":"","Comments":null,"Input":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Discriminator":null,"ItemType":{"Discriminator":null,"Name":"","Fields":[],"Scope":"","Input":false,"Type":"number","Extensions":{},"Output":false,"Format":"","AdditionalProperties":null,"RefType":"","Truncated":false,"Comments":null,"Examples":[],"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":""},"Fields":[],"Enum":null,"Scope":"","BaseName":"","RefType":"","Truncated":false,"Type":"array","Output":false,"Extensions":{},"Examples":[]},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A list of segment ids attached to the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"segments"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"sortOrder","Type":{"Scope":"","BaseName":"","Comments":null,"Examples":[9999],"Type":"number","Truncated":false,"Input":false,"Output":false,"Extensions":{},"AssociatedTypes":[],"Fields":[],"Enum":null,"Discriminator":null,"ItemType":null,"RefType":"","Format":"","AdditionalProperties":null,"Name":""},"Comments":{"Summary":"","Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Type":{"BaseName":"","Scope":"","Input":false,"Output":false,"Discriminator":null,"Name":"","Type":"string","AssociatedTypes":[],"Examples":["Gradual Rollout 25-Prod"],"Format":"","Enum":null,"RefType":"","Truncated":false,"Extensions":{},"AdditionalProperties":null,"ItemType":null,"Fields":[],"Comments":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"title"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"title"},{"Name":"variants","Type":{"Format":"","AdditionalProperties":null,"Enum":null,"Scope":"","Truncated":false,"Extensions":{},"Examples":[],"Discriminator":null,"AssociatedTypes":[],"Comments":null,"Output":false,"Fields":[],"BaseName":"","RefType":"","Input":false,"Name":"","Type":"array","ItemType":{"Type":"class","Scope":"shared","Truncated":false,"Examples":[],"Format":"","Name":"strategyVariantSchema","AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"Schemas","Output":false,"ItemType":null,"Fields":[{"Type":{"ItemType":null,"Scope":"","Comments":null,"Examples":["blue_group"],"AdditionalProperties":null,"Name":"","Type":"string","Enum":null,"BaseName":"","RefType":"","Output":false,"Extensions":{},"Fields":[],"Truncated":false,"Input":false,"AssociatedTypes":[],"Format":"","Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"},{"Annotations":[{"FieldName":"payload","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant"},"Input":false,"Extensions":{},"Examples":[],"Enum":null,"Type":"class","Scope":"shared","Truncated":false,"Output":false,"Name":"strategyVariantSchema_payload","AssociatedTypes":[],"BaseName":"","RefType":"Schemas","Fields":[{"Name":"type","Type":{"Output":false,"Discriminator":null,"Input":false,"Type":"enum","RefType":"","Name":"strategyVariantSchema_payload_type","Scope":"shared","BaseName":"","Truncated":false,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"Extensions":{},"Examples":[],"Format":"","ItemType":null,"AdditionalProperties":null,"AssociatedTypes":[],"Enum":{"Type":{"Type":"string","Fields":[],"Scope":"","RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Name":"","Comments":null,"AssociatedTypes":[],"BaseName":"","Truncated":false,"Discriminator":null,"Enum":null,"Input":false,"Extensions":{},"Examples":[],"ItemType":null},"Values":["json","csv","string"],"Names":[]},"Fields":[]},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"Name":"","Extensions":{},"Discriminator":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Format":"","AdditionalProperties":null,"Enum":null,"Examples":[],"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Comments":null,"Input":false},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value"}],"Format":"","AdditionalProperties":null,"Discriminator":null,"ItemType":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false}},{"ErrorMessage":false,"Name":"stickiness","Type":{"Extensions":{},"Examples":["custom.context.field"],"Name":"","Fields":[],"Enum":null,"RefType":"","Truncated":false,"Output":false,"Type":"string","AssociatedTypes":[],"Scope":"","BaseName":"","Comments":null,"Input":false,"Format":"","ItemType":null,"AdditionalProperties":null,"Discriminator":null},"Comments":{"Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"stickiness","Ignore":false}],"Optional":false,"SerializationMethod":null},{"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Input":false,"Output":false,"Examples":[],"ItemType":null,"Fields":[],"AssociatedTypes":[],"RefType":"","Scope":"","Name":"","Enum":null,"BaseName":"","Discriminator":null,"Format":"","AdditionalProperties":null,"Type":"integer","Truncated":false,"Comments":null,"Extensions":{}}},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"ItemType":null,"Fields":[],"Examples":["fix"],"Format":"","Discriminator":null,"Name":"strategyVariantSchema_weightType","AssociatedTypes":[],"Output":false,"Extensions":{},"AdditionalProperties":null,"Type":"enum","Enum":{"Type":{"Discriminator":null,"Name":"","Truncated":false,"BaseName":"","RefType":"","Comments":null,"Examples":[],"Type":"string","Enum":null,"Extensions":{},"Fields":[],"Scope":"","Input":false,"Output":false,"Format":"","AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[]},"Values":["variable","fix"],"Names":[]},"Comments":{"Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Scope":"shared","BaseName":"","RefType":"","Truncated":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"weightType"}]}],"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants."},"Input":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null}},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Strategy level variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"FieldName":"variants","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"AdditionalProperties":null,"Discriminator":null,"Type":"class","Enum":null,"Extensions":{},"Examples":[],"Format":""}},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A list of activation strategies for the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"strategies"}]})
	r.Strategies = nil
	for _, strategiesItem := range resp.Strategies {
		var strategies1 FeatureStrategySchema
		// Generate(false, false, {"Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"FeatureStrategySchema","x-untouched":true},"AdditionalProperties":null,"Name":"featureStrategySchema","Fields":[{"Name":"constraints","Type":{"BaseName":"","Input":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Format":"","ItemType":{"ItemType":null,"Comments":{"DeprecationMessage":"","Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Examples":[],"Format":"","Name":"constraintSchema","Enum":null,"RefType":"Schemas","Output":false,"AdditionalProperties":null,"Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"ConstraintSchema","x-untouched":true},"Type":"class","Fields":[{"ErrorMessage":false,"Name":"caseInsensitive","Type":{"Scope":"","Truncated":false,"Comments":null,"Input":false,"Type":"boolean","ItemType":null,"Fields":[],"BaseName":"","RefType":"","AdditionalProperties":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"Enum":null},"Comments":{"Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Enum":null,"RefType":"","Comments":null,"Input":false,"Format":"","Name":"","Truncated":false,"Output":false,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["appName"],"Discriminator":null},"Comments":{"Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Discriminator":null,"Name":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Fields":[],"Enum":null,"RefType":"","Comments":null,"Input":false,"Output":false,"Type":"boolean","ItemType":null,"Truncated":false,"Format":"","AssociatedTypes":[],"BaseName":"","Examples":[]}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"Enum":{"Type":{"Name":"","ItemType":null,"AssociatedTypes":[],"Format":"","Scope":"","BaseName":"","Discriminator":null,"Type":"string","Truncated":false,"Comments":null,"Extensions":{},"Examples":[],"AdditionalProperties":null,"Fields":[],"Enum":null,"RefType":"","Input":false,"Output":false},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"RefType":"","AdditionalProperties":null,"Name":"constraintSchema_operator","Input":false,"Output":false,"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Format":"","Discriminator":null,"Type":"enum","ItemType":null,"Fields":[],"Examples":["IN"],"Scope":"shared","BaseName":"","Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},"Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false},{"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Name":"","ItemType":null,"Enum":null,"Scope":"","Input":false,"Format":"","Output":false,"Examples":["my-app"],"Discriminator":null,"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null},"Comments":{"Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"AssociatedTypes":[],"RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"array","Truncated":false,"Comments":null,"Format":"","AdditionalProperties":null,"Discriminator":null,"ItemType":{"ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Discriminator":null,"Name":"","Fields":[],"Enum":null,"Scope":"","Comments":null,"Input":false,"Type":"string","AssociatedTypes":[],"BaseName":"","AdditionalProperties":null,"Output":false},"Fields":[],"Scope":"","BaseName":"","Output":false,"Enum":null,"Examples":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"values"}]}],"Scope":"shared","BaseName":"","Input":false,"AssociatedTypes":[],"Truncated":false,"Discriminator":null},"Enum":null,"Discriminator":null,"Name":"","Fields":[],"Scope":"","RefType":"","Truncated":false,"Comments":null,"Output":false,"AdditionalProperties":null,"Type":"array","Examples":[],"AssociatedTypes":[]},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints"},"Annotations":[{"FieldName":"constraints","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"disabled","Type":{"Fields":[],"Enum":null,"BaseName":"","Examples":[false],"Scope":"","Comments":null,"Output":false,"Format":"","Type":"boolean","RefType":"","Truncated":false,"Input":false,"AdditionalProperties":null,"Name":"","ItemType":null,"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null},"Comments":{"Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"featureName","Type":{"AssociatedTypes":[],"Truncated":false,"Comments":null,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Examples":["myAwesomeFeature"],"AdditionalProperties":null,"Fields":[],"Enum":null,"RefType":"","Format":"","Discriminator":null,"Type":"string","Scope":"","Input":false,"ItemType":null,"BaseName":"","Name":""},"Comments":{"Summary":"","Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true},{"Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"Format":"","Output":false,"Name":"","Scope":"","Truncated":false,"Input":false,"Comments":null,"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Type":"string","ItemType":null,"Fields":[],"Discriminator":null},"Comments":{"Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"id"},{"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Enum":null,"Scope":"","Output":false,"Name":"","Fields":[],"AssociatedTypes":[],"BaseName":"","RefType":"","Discriminator":null,"Type":"string","ItemType":null,"Truncated":false,"Comments":null,"Format":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["flexibleRollout"],"AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy","ExternalDocs":null,"Deprecated":false}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"parameters","Type":{"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"map","ItemType":{"Comments":null,"Output":false,"Format":"","Examples":[],"AdditionalProperties":null,"Fields":[],"Enum":null,"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"string","ItemType":null,"AssociatedTypes":[],"RefType":"","Truncated":false,"Input":false},"Output":false,"Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Truncated":false,"Scope":"","RefType":"","Input":false,"Examples":[],"AdditionalProperties":null},"Comments":{"Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"segments","Type":{"Name":"","BaseName":"","Examples":[],"Discriminator":null,"Truncated":false,"Type":"array","ItemType":{"Fields":[],"AssociatedTypes":[],"RefType":"","Examples":[],"ItemType":null,"Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Segments"},"Format":"","Discriminator":null,"Input":false,"Name":"","Type":"number","Enum":null,"Truncated":false,"Comments":null,"BaseName":"","Output":false,"AdditionalProperties":null},"AssociatedTypes":[],"RefType":"","Enum":null,"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Fields":[],"Scope":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true}},"Comments":{"Summary":"","Description":"A list of segment ids attached to the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"segments"}]},{"Name":"sortOrder","Type":{"Scope":"","Input":false,"Examples":[9999],"Format":"","Discriminator":null,"Fields":[],"Type":"number","Truncated":false,"Comments":null,"Name":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Enum":null,"AssociatedTypes":[],"BaseName":"","RefType":"","AdditionalProperties":null,"ItemType":null},"Comments":{"Summary":"","Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"title","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"string","Fields":[],"Comments":null,"Discriminator":null,"BaseName":"","Output":false,"Examples":["Gradual Rollout 25-Prod"],"AdditionalProperties":null,"Scope":"","Input":false,"Format":"","Truncated":false,"ItemType":null,"AssociatedTypes":[],"Enum":null,"RefType":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null},"Annotations":[{"FieldName":"title","Ignore":false}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"AssociatedTypes":[],"Format":"","ItemType":{"ItemType":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchema"},"AdditionalProperties":null,"Type":"class","BaseName":"","RefType":"Schemas","Input":false,"Examples":[],"Scope":"shared","Truncated":false,"Comments":{"DeprecationMessage":"","Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Output":false,"Discriminator":null,"Name":"strategyVariantSchema","Fields":[{"Name":"name","Type":{"Comments":null,"Truncated":false,"Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","ItemType":null,"Scope":"","BaseName":"","Discriminator":null,"Type":"string","Input":false,"Examples":["blue_group"],"AdditionalProperties":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"payload","Type":{"BaseName":"","Name":"strategyVariantSchema_payload","Enum":null,"Scope":"shared","Examples":[],"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Format":"","Discriminator":null,"Type":"class","Truncated":false,"Output":false,"Fields":[{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"Annotations":[{"FieldName":"type","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Fields":[],"RefType":"","Examples":[],"Type":"enum","ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Name":"strategyVariantSchema_payload_type","AssociatedTypes":[],"Enum":{"Type":{"Scope":"","RefType":"","AssociatedTypes":[],"Enum":null,"Comments":null,"Examples":[],"Format":"","Discriminator":null,"Name":"","Fields":[],"Input":false,"Extensions":{},"AdditionalProperties":null,"ItemType":null,"BaseName":"","Output":false,"Type":"string","Truncated":false},"Values":["json","csv","string"],"Names":[]},"BaseName":"","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"AdditionalProperties":null,"Discriminator":null}},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","AssociatedTypes":[],"Output":false,"RefType":"","Input":false,"Scope":"","BaseName":"","Truncated":false,"Name":"","Fields":[],"Enum":null,"Examples":[],"ItemType":null,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true}},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}]}],"RefType":"Schemas"},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"BaseName":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"Scope":"","Examples":["custom.context.field"],"Type":"string","ItemType":null,"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"RefType":"","Discriminator":null}},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Scope":"","Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Name":"","Comments":null,"Examples":[],"Type":"integer","Fields":[],"Truncated":false,"Input":false,"AdditionalProperties":null,"Format":"","Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Output":false}},{"Type":{"Comments":{"DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"ItemType":null,"Fields":[],"RefType":"","Truncated":false,"Output":false,"Name":"strategyVariantSchema_weightType","Type":"enum","Scope":"shared","Format":"","AssociatedTypes":[],"Enum":{"Type":{"Type":"string","ItemType":null,"Output":false,"Fields":[],"Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","Enum":null,"Scope":"","RefType":"","Extensions":{},"Format":"","AdditionalProperties":null},"Values":["variable","fix"],"Names":[]},"Examples":["fix"],"AdditionalProperties":null,"BaseName":"","Input":false},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)."},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType"}],"AssociatedTypes":[],"Enum":null,"Format":""},"Comments":null,"Examples":[],"AdditionalProperties":null,"Discriminator":null,"Type":"array","Enum":null,"Scope":"","BaseName":"","RefType":"","Truncated":false},"Comments":{"Description":"Strategy level variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true}],"BaseName":"","RefType":"Schemas","ItemType":null,"Type":"class","AssociatedTypes":[],"Truncated":false,"Comments":{"Description":"A single activation strategy configuration schema for a feature","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Examples":[],"Format":"","Discriminator":null,"Enum":null,"Scope":"shared","Input":false,"Output":false}, {"AssociatedTypes":[],"ItemType":null,"Fields":[{"ErrorMessage":false,"Name":"constraints","Type":{"Name":"","ItemType":{"AssociatedTypes":[],"Scope":"shared","Discriminator":null,"Name":"constraintSchema","BaseName":"","Truncated":false,"Input":false,"Output":false,"Extensions":{},"Format":"","Type":"class","ItemType":null,"Comments":{"Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Examples":[],"Fields":[{"Name":"caseInsensitive","Type":{"RefType":"","Truncated":false,"Name":"","ItemType":null,"Examples":[],"Format":"","Input":false,"Output":false,"Type":"boolean","Fields":[],"Scope":"","BaseName":"","Comments":null,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Name":"","Type":"string","Fields":[],"Examples":["appName"],"Format":"","AdditionalProperties":null,"Enum":null,"RefType":"","Comments":null,"Input":false,"AssociatedTypes":[],"Scope":"","Discriminator":null,"Extensions":{},"ItemType":null,"BaseName":"","Truncated":false,"Output":false},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""}},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Format":"","Comments":null,"AssociatedTypes":[],"RefType":"","Output":false,"Discriminator":null,"Name":"","Fields":[],"Enum":null,"BaseName":"","Truncated":false,"Extensions":{},"Examples":[],"Type":"boolean","Scope":"","Input":false,"AdditionalProperties":null,"ItemType":null}},{"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"ItemType":null,"Scope":"shared","Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false},"Name":"constraintSchema_operator","Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Input":false,"Examples":["IN"],"Fields":[],"Enum":{"Names":[],"Type":{"Truncated":false,"Input":false,"Output":false,"Name":"","Type":"string","Scope":"","ItemType":null,"AdditionalProperties":null,"Extensions":{},"Format":"","Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Examples":[],"Fields":[],"RefType":"","Comments":null},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"]},"Extensions":{},"Format":"","AdditionalProperties":null},"Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Name":"value","Type":{"Enum":null,"Scope":"","Extensions":{},"Name":"","AssociatedTypes":[],"Truncated":false,"Input":false,"Output":false,"Fields":[],"Examples":["my-app"],"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Comments":null},"Comments":{"Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"ItemType":{"Scope":"","Comments":null,"Name":"","Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"BaseName":"","Examples":[],"Format":"","AdditionalProperties":null,"Input":false,"Output":false,"Extensions":{},"RefType":"","Truncated":false,"Discriminator":null},"Enum":null,"Truncated":false,"Input":false,"Examples":[],"AdditionalProperties":null,"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Output":false,"Extensions":{},"Format":"","Type":"array","Fields":[],"Scope":"","Comments":null},"Comments":{"Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}}],"Enum":null,"RefType":"Schemas","AdditionalProperties":null},"Extensions":{},"Examples":[],"Discriminator":null,"Truncated":false,"Input":false,"Output":false,"Type":"array","BaseName":"","Format":"","AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","RefType":"","Comments":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"constraints"}],"Optional":true,"SerializationMethod":null},{"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"disabled","Type":{"Comments":null,"Output":false,"Extensions":{},"Examples":[false],"Enum":null,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Format":"","Type":"boolean","Input":false,"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"RefType":"","Truncated":false,"Name":""},"Comments":{"Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"ErrorMessage":false,"Name":"featureName","Type":{"Type":"string","Truncated":false,"ItemType":null,"Input":false,"Examples":["myAwesomeFeature"],"Format":"","AdditionalProperties":null,"Fields":[],"Enum":null,"Scope":"","Output":false,"Extensions":{},"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Comments":null,"Discriminator":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or feature the strategy is attached to"},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null},{"Name":"id","Type":{"ItemType":null,"Enum":null,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"Name":"","Truncated":false,"Input":false,"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"AssociatedTypes":[],"Fields":[],"Scope":"","Output":false,"Format":"","Type":"string","RefType":"","Comments":null,"BaseName":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Discriminator":null,"Name":"","BaseName":"","Input":false,"Truncated":false,"Extensions":{},"Scope":"","Examples":["flexibleRollout"],"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"Comments":null,"Output":false,"AssociatedTypes":[],"Enum":null,"RefType":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy"},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false},{"ErrorMessage":false,"Name":"parameters","Type":{"Examples":[],"Type":"map","ItemType":{"Name":"","Fields":[],"AssociatedTypes":[],"AdditionalProperties":null,"Input":false,"Output":false,"Format":"","Discriminator":null,"Type":"string","Enum":null,"Scope":"","RefType":"","ItemType":null,"BaseName":"","Comments":null,"Examples":[],"Truncated":false,"Extensions":{}},"Fields":[],"RefType":"","Truncated":false,"Scope":"","BaseName":"","Output":false,"Extensions":{},"Enum":null,"Comments":null,"Input":false,"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true,"SerializationMethod":null},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"segments","Type":{"Fields":[],"Enum":null,"Scope":"","BaseName":"","RefType":"","Truncated":false,"Discriminator":null,"ItemType":{"Output":false,"Format":"","AdditionalProperties":null,"Comments":null,"Examples":[],"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Truncated":false,"Name":"","Fields":[],"Scope":"","Input":false,"Discriminator":null,"Type":"number","Extensions":{}},"Output":false,"Extensions":{},"Examples":[],"Type":"array","Comments":null,"Input":false,"Format":"","AdditionalProperties":null,"Name":"","AssociatedTypes":[]},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of segment ids attached to the strategy"},"Annotations":[{"Ignore":false,"FieldName":"segments"}]},{"Name":"sortOrder","Type":{"Output":false,"Extensions":{},"AssociatedTypes":[],"Truncated":false,"Input":false,"Discriminator":null,"ItemType":null,"Fields":[],"Enum":null,"AdditionalProperties":null,"Name":"","RefType":"","Format":"","Comments":null,"Examples":[9999],"Type":"number","Scope":"","BaseName":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The order of the strategy in the list"},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"title"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"title","Type":{"AssociatedTypes":[],"Scope":"","Input":false,"Output":false,"Discriminator":null,"Name":"","Type":"string","Truncated":false,"Examples":["Gradual Rollout 25-Prod"],"Format":"","Enum":null,"RefType":"","Comments":null,"Extensions":{},"AdditionalProperties":null,"ItemType":null,"Fields":[],"BaseName":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"Input":false,"Name":"","Type":"array","ItemType":{"Format":"","Type":"class","Scope":"shared","Truncated":false,"Examples":[],"RefType":"Schemas","Output":false,"Name":"strategyVariantSchema","AssociatedTypes":[],"Enum":null,"BaseName":"","ItemType":null,"Fields":[{"Comments":{"DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"ItemType":null,"Scope":"","Comments":null,"Examples":["blue_group"],"Name":"","Type":"string","Enum":null,"BaseName":"","RefType":"","Output":false,"Extensions":{},"AdditionalProperties":null,"Fields":[],"Truncated":false,"Input":false,"AssociatedTypes":[],"Format":"","Discriminator":null}},{"Name":"payload","Type":{"AssociatedTypes":[],"BaseName":"","RefType":"Schemas","Fields":[{"ErrorMessage":false,"Name":"type","Type":{"Name":"strategyVariantSchema_payload_type","Type":"enum","RefType":"","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"Extensions":{},"Examples":[],"Format":"","ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":{"Type":{"Output":false,"Format":"","AdditionalProperties":null,"Name":"","Type":"string","Fields":[],"Scope":"","RefType":"","AssociatedTypes":[],"Comments":null,"Enum":null,"BaseName":"","Truncated":false,"Discriminator":null,"ItemType":null,"Input":false,"Extensions":{},"Examples":[]},"Values":["json","csv","string"],"Names":[]},"Input":false,"Output":false,"Discriminator":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"RefType":"","Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","Enum":null,"Examples":[],"Truncated":false,"Comments":null,"Input":false,"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Name":"","Extensions":{},"Discriminator":null}}],"Format":"","AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null},"Input":false,"Extensions":{},"Examples":[],"Enum":null,"Type":"class","Scope":"shared","Truncated":false,"Output":false,"Name":"strategyVariantSchema_payload"},"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Fields":[],"Enum":null,"RefType":"","Truncated":false,"Extensions":{},"Examples":["custom.context.field"],"Name":"","AssociatedTypes":[],"Scope":"","BaseName":"","Comments":null,"Output":false,"Type":"string","Format":"","Input":false},"Comments":{"Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Truncated":false,"Comments":null,"Extensions":{},"Format":"","AdditionalProperties":null,"Type":"integer","Fields":[],"AssociatedTypes":[],"RefType":"","Input":false,"Output":false,"Examples":[],"ItemType":null,"Scope":"","Enum":null,"BaseName":"","Discriminator":null,"Name":""},"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Type":"enum","Enum":{"Type":{"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Input":false,"Output":false,"Format":"","Name":"","Truncated":false,"Discriminator":null,"Examples":[],"Type":"string","Enum":null,"BaseName":"","RefType":"","Comments":null,"Fields":[],"Scope":"","Extensions":{}},"Values":["variable","fix"],"Names":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Input":false,"Scope":"shared","BaseName":"","RefType":"","Truncated":false,"ItemType":null,"Fields":[],"Examples":["fix"],"Format":"","Discriminator":null,"Name":"strategyVariantSchema_weightType","AssociatedTypes":[],"Output":false,"Extensions":{},"AdditionalProperties":null},"Comments":{"Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false}],"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null},"Input":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null},"Fields":[],"BaseName":"","RefType":"","Enum":null,"Scope":"","Truncated":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Comments":null,"Output":false,"Extensions":{},"Examples":[],"Discriminator":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Strategy level variants","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"variants"}]}],"Extensions":{},"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"class","Enum":null,"RefType":"Schemas","Comments":{"Summary":"","Description":"A single activation strategy configuration schema for a feature","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Name":"featureStrategySchema","Scope":"shared","Input":false,"Output":false,"BaseName":"","Truncated":false}, strategies1)
		// Generate(get.feature_environment.strategies.[].constraints, {"Name":"constraints","Type":{"Format":"","ItemType":{"AssociatedTypes":[],"Truncated":false,"Discriminator":null,"ItemType":null,"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)"},"Examples":[],"Format":"","Name":"constraintSchema","Enum":null,"RefType":"Schemas","Output":false,"AdditionalProperties":null,"Type":"class","Fields":[{"Comments":{"DeprecationMessage":"","Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"caseInsensitive","Type":{"Name":"","AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Comments":null,"Input":false,"AdditionalProperties":null,"Type":"boolean","ItemType":null,"Fields":[],"BaseName":"","RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Format":"","Discriminator":null}},{"Annotations":[{"FieldName":"contextName","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Comments":null,"Input":false,"Format":"","Enum":null,"RefType":"","Output":false,"AdditionalProperties":null,"Name":"","Truncated":false,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Type":"string","ItemType":null,"Examples":["appName"],"Discriminator":null},"Comments":{"Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Fields":[],"Enum":null,"RefType":"","AdditionalProperties":null,"Type":"boolean","ItemType":null,"Truncated":false,"Comments":null,"Input":false,"Output":false,"AssociatedTypes":[],"BaseName":"","Examples":[],"Format":"","Name":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null},"Comments":{"Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"inverted"}]},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"Examples":["IN"],"Scope":"shared","BaseName":"","Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Enum":{"Type":{"Name":"","ItemType":null,"AssociatedTypes":[],"Format":"","Scope":"","BaseName":"","Discriminator":null,"Type":"string","Truncated":false,"Comments":null,"Extensions":{},"Examples":[],"AdditionalProperties":null,"Fields":[],"Enum":null,"RefType":"","Input":false,"Output":false},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"RefType":"","AdditionalProperties":null,"Name":"constraintSchema_operator","Input":false,"Output":false,"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Discriminator":null,"Type":"enum","ItemType":null,"Fields":[]},"Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"operator"}]},{"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Name":"","ItemType":null,"Enum":null,"Scope":"","Input":false,"Format":"","Output":false,"Examples":["my-app"],"Discriminator":null,"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false}},{"ErrorMessage":false,"Name":"values","Type":{"Enum":null,"Examples":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AssociatedTypes":[],"RefType":"","Input":false,"Comments":null,"Format":"","AdditionalProperties":null,"Discriminator":null,"Name":"","Type":"array","Truncated":false,"BaseName":"","Output":false,"ItemType":{"BaseName":"","AdditionalProperties":null,"Type":"string","AssociatedTypes":[],"Output":false,"Truncated":false,"Examples":[],"Format":"","ItemType":null,"RefType":"","Enum":null,"Scope":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Discriminator":null,"Name":"","Fields":[]},"Fields":[],"Scope":""},"Comments":{"Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null}],"Scope":"shared","BaseName":"","Input":false,"Extensions":{"Symbol":"ConstraintSchema","x-untouched":true,"x-speakeasy-param-readonly":true}},"BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Enum":null,"Discriminator":null,"Truncated":false,"Comments":null,"Output":false,"AdditionalProperties":null,"Type":"array","Fields":[],"Scope":"","RefType":"","AssociatedTypes":[],"Examples":[]},"Comments":{"Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"constraints","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}, {"SerializationMethod":null,"ErrorMessage":false,"Name":"constraints","Type":{"Truncated":false,"Input":false,"Output":false,"Type":"array","BaseName":"","Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","RefType":"","Comments":null,"AdditionalProperties":null,"Name":"","ItemType":{"Type":"class","ItemType":null,"Comments":{"Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Examples":[],"Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"caseInsensitive","Type":{"ItemType":null,"RefType":"","Truncated":false,"Name":"","Format":"","Examples":[],"Fields":[],"Input":false,"Output":false,"Type":"boolean","Enum":null,"Scope":"","BaseName":"","Comments":null,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true},{"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"ItemType":null,"BaseName":"","Truncated":false,"Output":false,"Extensions":{},"Name":"","Type":"string","Fields":[],"Enum":null,"RefType":"","Comments":null,"Input":false,"Examples":["appName"],"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","Discriminator":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false}},{"Name":"inverted","Type":{"Name":"","AssociatedTypes":[],"RefType":"","Output":false,"Discriminator":null,"Type":"boolean","Fields":[],"Enum":null,"BaseName":"","Truncated":false,"Extensions":{},"Examples":[],"ItemType":null,"Scope":"","Input":false,"AdditionalProperties":null,"Comments":null,"Format":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"ItemType":null,"Scope":"shared","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators)."},"Name":"constraintSchema_operator","Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Input":false,"Examples":["IN"],"Fields":[],"Enum":{"Type":{"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Extensions":{},"Format":"","Fields":[],"RefType":"","Comments":null,"Examples":[],"Output":false,"Name":"","Type":"string","Scope":"","Truncated":false,"Input":false,"ItemType":null,"AdditionalProperties":null},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"Extensions":{},"Format":"","AdditionalProperties":null},"Comments":{"Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"ErrorMessage":false,"Name":"value","Type":{"Name":"","AssociatedTypes":[],"Truncated":false,"Input":false,"Output":false,"Fields":[],"Examples":["my-app"],"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Comments":null,"Discriminator":null,"Enum":null,"Scope":"","Extensions":{}},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null},{"ErrorMessage":false,"Name":"values","Type":{"Examples":[],"AdditionalProperties":null,"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Output":false,"Extensions":{},"Format":"","Type":"array","Fields":[],"Scope":"","Comments":null,"ItemType":{"ItemType":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","Comments":null,"Name":"","Type":"string","Format":"","AdditionalProperties":null,"BaseName":"","Examples":[],"Extensions":{},"Input":false,"Output":false,"Discriminator":null,"RefType":"","Truncated":false},"Enum":null,"Truncated":false,"Input":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null}],"Enum":null,"RefType":"Schemas","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"shared","Extensions":{},"Format":"","Discriminator":null,"Name":"constraintSchema","BaseName":"","Truncated":false,"Input":false,"Output":false},"Extensions":{},"Examples":[],"Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A list of the constraints attached to the strategy. See https://docs.getunleash.io/reference/strategy-constraints","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"constraints"}],"Optional":true})
		strategies1.Constraints = nil
		for _, constraintsItem := range strategiesItem.Constraints {
			var constraints1 ConstraintSchema
			// Generate(false, false, {"Name":"constraintSchema","Enum":null,"RefType":"Schemas","Output":false,"AdditionalProperties":null,"Type":"class","Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"caseInsensitive","Type":{"Enum":null,"Name":"","AssociatedTypes":[],"Comments":null,"Input":false,"Scope":"","Truncated":false,"Fields":[],"BaseName":"","RefType":"","AdditionalProperties":null,"Type":"boolean","ItemType":null,"Examples":[],"Format":"","Discriminator":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true}},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive)."},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true},{"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Name":"","Truncated":false,"Output":false,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["appName"],"Discriminator":null,"Enum":null,"RefType":"","Comments":null,"Input":false,"Format":""},"Comments":{"Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Type":"boolean","ItemType":null,"Truncated":false,"Comments":null,"Input":false,"Output":false,"AssociatedTypes":[],"BaseName":"","Examples":[],"Format":"","Name":"","Scope":"","Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Discriminator":null,"Fields":[],"Enum":null,"RefType":"","AdditionalProperties":null},"Comments":{"Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true},{"Type":{"RefType":"","AdditionalProperties":null,"Enum":{"Type":{"Comments":null,"Extensions":{},"Examples":[],"AdditionalProperties":null,"Type":"string","Truncated":false,"RefType":"","Input":false,"Output":false,"Fields":[],"Enum":null,"AssociatedTypes":[],"Format":"","Name":"","ItemType":null,"Discriminator":null,"Scope":"","BaseName":""},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"Input":false,"Output":false,"Name":"constraintSchema_operator","ItemType":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Discriminator":null,"Type":"enum","BaseName":"","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null},"Examples":["IN"],"Scope":"shared"},"Comments":{"Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator"},{"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null,"Name":"","ItemType":null,"Enum":null,"Scope":"","Input":false,"Format":"","Output":false,"Examples":["my-app"],"Discriminator":null},"Comments":{"Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Type":"array","Truncated":false,"Comments":null,"Format":"","AdditionalProperties":null,"Discriminator":null,"Name":"","Fields":[],"Scope":"","BaseName":"","Output":false,"ItemType":{"ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":"","Name":"","Fields":[],"Enum":null,"Scope":"","Comments":null,"Input":false,"Extensions":{"Symbol":"Permissions","x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Type":"string","AssociatedTypes":[],"BaseName":"","AdditionalProperties":null,"Output":false},"Examples":[],"Enum":null,"RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AssociatedTypes":[]},"Comments":{"Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true}],"Scope":"shared","BaseName":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"ConstraintSchema"},"AssociatedTypes":[],"Truncated":false,"Discriminator":null,"ItemType":null,"Comments":{"DeprecationMessage":"","Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Examples":[],"Format":""}, {"Format":"","Discriminator":null,"Name":"constraintSchema","BaseName":"","Truncated":false,"Input":false,"Output":false,"Extensions":{},"Type":"class","ItemType":null,"Comments":{"Summary":"","Description":"A strategy constraint. For more information, refer to [the strategy constraint reference documentation](https://docs.getunleash.io/reference/strategy-constraints)","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Examples":[],"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"caseInsensitive","Type":{"Type":"boolean","Fields":[],"Input":false,"Output":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Scope":"","BaseName":"","Comments":null,"Extensions":{},"Name":"","ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":""},"Comments":{"Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Examples":["appName"],"Format":"","AdditionalProperties":null,"Enum":null,"RefType":"","Comments":null,"Input":false,"AssociatedTypes":[],"Scope":"","Discriminator":null,"Extensions":{},"ItemType":null,"BaseName":"","Truncated":false,"Output":false,"Name":"","Type":"string","Fields":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null},"Annotations":[{"FieldName":"contextName","Ignore":false}],"Optional":false},{"ErrorMessage":false,"Name":"inverted","Type":{"Name":"","AssociatedTypes":[],"RefType":"","Output":false,"Discriminator":null,"Type":"boolean","Fields":[],"Enum":null,"BaseName":"","Truncated":false,"Extensions":{},"Examples":[],"ItemType":null,"Scope":"","Input":false,"AdditionalProperties":null,"Comments":null,"Format":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true,"SerializationMethod":null},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"operator","Type":{"Name":"constraintSchema_operator","Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Input":false,"Examples":["IN"],"Fields":[],"Enum":{"Type":{"Fields":[],"RefType":"","Comments":null,"Examples":[],"Name":"","Type":"string","Scope":"","Truncated":false,"Input":false,"Output":false,"ItemType":null,"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Extensions":{},"Format":"","Discriminator":null},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"Extensions":{},"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"shared","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators)."}},"Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"operator"}]},{"Name":"value","Type":{"Name":"","AssociatedTypes":[],"Truncated":false,"Input":false,"Output":false,"Fields":[],"Examples":["my-app"],"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Comments":null,"Discriminator":null,"Enum":null,"Scope":"","Extensions":{}},"Comments":{"Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"values","Type":{"Input":false,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Examples":[],"AdditionalProperties":null,"Discriminator":null,"Type":"array","Fields":[],"Scope":"","Comments":null,"Output":false,"Extensions":{},"Format":"","ItemType":{"Examples":[],"Format":"","AdditionalProperties":null,"BaseName":"","Output":false,"Extensions":{},"Input":false,"Truncated":false,"Discriminator":null,"RefType":"","Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Scope":"","Comments":null,"Name":""},"Enum":null,"Truncated":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null}],"Enum":null,"RefType":"Schemas","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"shared"}, constraints1)
			// Generate(get.feature_environment.strategies.[].constraints.[].case_insensitive, {"Comments":{"Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"caseInsensitive","Type":{"Type":"boolean","ItemType":null,"Fields":[],"BaseName":"","RefType":"","AdditionalProperties":null,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Examples":[],"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Comments":null,"Input":false}}, {"Name":"caseInsensitive","Type":{"Type":"boolean","Fields":[],"Input":false,"Output":false,"AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Enum":null,"Scope":"","BaseName":"","Comments":null,"Extensions":{},"Name":"","ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Format":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Whether the operator should be case sensitive or not. Defaults to `false` (being case sensitive).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"caseInsensitive"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
			if constraintsItem.CaseInsensitive != nil {
				constraints1.CaseInsensitive = types.BoolValue(*constraintsItem.CaseInsensitive)
			} else {
				constraints1.CaseInsensitive = types.BoolNull()
			}
			// Generate(get.feature_environment.strategies.[].constraints.[].context_name, {"Comments":{"Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"contextName","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Output":false,"AdditionalProperties":null,"Name":"","Truncated":false,"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Type":"string","ItemType":null,"Examples":["appName"],"Discriminator":null,"Comments":null,"Input":false,"Format":"","Enum":null,"RefType":""}}, {"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"ItemType":null,"BaseName":"","Truncated":false,"Output":false,"Extensions":{},"Name":"","Type":"string","Fields":[],"Enum":null,"RefType":"","Comments":null,"Input":false,"Examples":["appName"],"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","Discriminator":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field that this constraint should apply to.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"contextName"}]})
			constraints1.ContextName = types.StringValue(constraintsItem.ContextName)
			// Generate(get.feature_environment.strategies.[].constraints.[].inverted, {"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Comments":null,"Input":false,"Output":false,"Type":"boolean","ItemType":null,"Truncated":false,"Format":"","AssociatedTypes":[],"BaseName":"","Examples":[],"Discriminator":null,"Name":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Fields":[],"Enum":null,"RefType":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"inverted"}],"Optional":true}, {"Comments":{"Summary":"","Description":"Whether the result should be negated or not. If `true`, will turn a `true` result into a `false` result and vice versa.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"inverted","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"inverted","Type":{"Truncated":false,"Extensions":{},"Examples":[],"Type":"boolean","Fields":[],"Enum":null,"BaseName":"","ItemType":null,"Scope":"","Input":false,"AdditionalProperties":null,"Comments":null,"Format":"","Discriminator":null,"Name":"","AssociatedTypes":[],"RefType":"","Output":false}})
			if constraintsItem.Inverted != nil {
				constraints1.Inverted = types.BoolValue(*constraintsItem.Inverted)
			} else {
				constraints1.Inverted = types.BoolNull()
			}
			// Generate(get.feature_environment.strategies.[].constraints.[].operator, {"Name":"operator","Type":{"Discriminator":null,"Type":"enum","ItemType":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Scope":"shared","BaseName":"","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators)."},"Examples":["IN"],"Enum":{"Type":{"Fields":[],"Enum":null,"RefType":"","Input":false,"Output":false,"Name":"","ItemType":null,"AssociatedTypes":[],"Format":"","Scope":"","BaseName":"","Discriminator":null,"Type":"string","Truncated":false,"Comments":null,"Extensions":{},"Examples":[],"AdditionalProperties":null},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"RefType":"","AdditionalProperties":null,"Name":"constraintSchema_operator","Input":false,"Output":false},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators)."},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}, {"Name":"operator","Type":{"Name":"constraintSchema_operator","Type":"enum","Truncated":false,"Output":false,"Discriminator":null,"AssociatedTypes":[],"BaseName":"","RefType":"","Input":false,"Examples":["IN"],"Fields":[],"Enum":{"Type":{"Examples":[],"Fields":[],"RefType":"","Comments":null,"Truncated":false,"Input":false,"Output":false,"Name":"","Type":"string","Scope":"","ItemType":null,"AdditionalProperties":null,"Extensions":{},"Format":"","Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":""},"Values":["NOT_IN","IN","STR_ENDS_WITH","STR_STARTS_WITH","STR_CONTAINS","NUM_EQ","NUM_GT","NUM_GTE","NUM_LT","NUM_LTE","DATE_AFTER","DATE_BEFORE","SEMVER_EQ","SEMVER_GT","SEMVER_LT"],"Names":[]},"Extensions":{},"Format":"","AdditionalProperties":null,"ItemType":null,"Scope":"shared","Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},"Comments":{"Summary":"","Description":"The operator to use when evaluating this constraint. For more information about the various operators, refer to [the strategy constraint operator documentation](https://docs.getunleash.io/reference/strategy-constraints#strategy-constraint-operators).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"operator"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
			constraints1.Operator = types.StringValue(string(constraintsItem.Operator))
			// Generate(get.feature_environment.strategies.[].constraints.[].value, {"Comments":{"Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null,"Name":"","ItemType":null,"Enum":null,"Scope":"","Input":false,"Format":"","Output":false,"Examples":["my-app"],"Discriminator":null,"BaseName":"","RefType":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null}}, {"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context value that should be used for constraint evaluation. Use this property instead of `values` for properties that only accept single values."},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Output":false,"Name":"","AssociatedTypes":[],"Truncated":false,"Input":false,"Fields":[],"Examples":["my-app"],"Format":"","AdditionalProperties":null,"Comments":null,"Discriminator":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Enum":null,"Scope":"","Extensions":{}}})
			if constraintsItem.Value != nil {
				constraints1.Value = types.StringValue(*constraintsItem.Value)
			} else {
				constraints1.Value = types.StringNull()
			}
			// Generate(get.feature_environment.strategies.[].constraints.[].values, {"ErrorMessage":false,"Name":"values","Type":{"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AssociatedTypes":[],"RefType":"","Truncated":false,"Comments":null,"Format":"","AdditionalProperties":null,"Discriminator":null,"Name":"","Type":"array","Scope":"","BaseName":"","Output":false,"ItemType":{"Format":"","ItemType":null,"RefType":"","Truncated":false,"Examples":[],"Comments":null,"Input":false,"Extensions":{"Symbol":"Permissions","x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Fields":[],"Enum":null,"Scope":"","Type":"string","AssociatedTypes":[],"BaseName":"","AdditionalProperties":null,"Output":false},"Fields":[],"Enum":null,"Examples":[]},"Comments":{"Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null}, {"ErrorMessage":false,"Name":"values","Type":{"ItemType":{"RefType":"","Truncated":false,"Discriminator":null,"Scope":"","Comments":null,"Name":"","Type":"string","ItemType":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"BaseName":"","Examples":[],"Format":"","AdditionalProperties":null,"Input":false,"Output":false,"Extensions":{}},"Enum":null,"Truncated":false,"Input":false,"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Examples":[],"AdditionalProperties":null,"Format":"","Type":"array","Fields":[],"Scope":"","Comments":null,"Output":false,"Extensions":{}},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The context values that should be used for constraint evaluation. Use this property instead of `value` for properties that accept multiple values.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":true,"SerializationMethod":null})
			constraints1.Values = nil
			for _, v := range constraintsItem.Values {
				constraints1.Values = append(constraints1.Values, types.StringValue(v))
			}
			strategies1.Constraints = append(strategies1.Constraints, constraints1)
		}
		// Generate(get.feature_environment.strategies.[].disabled, {"SerializationMethod":null,"ErrorMessage":false,"Name":"disabled","Type":{"Discriminator":null,"Name":"","ItemType":null,"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Fields":[],"Enum":null,"BaseName":"","Examples":[false],"Scope":"","Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"Type":"boolean","RefType":"","Truncated":false,"Input":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true}, {"Annotations":[{"Ignore":false,"FieldName":"disabled"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"disabled","Type":{"ItemType":null,"Input":false,"AdditionalProperties":null,"Discriminator":null,"Name":"","RefType":"","Truncated":false,"Examples":[false],"Enum":null,"Comments":null,"Output":false,"Extensions":{},"BaseName":"","Format":"","Type":"boolean","Fields":[],"AssociatedTypes":[],"Scope":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A toggle to disable the strategy. defaults to false. Disabled strategies are not evaluated or returned to the SDKs","ExternalDocs":null}})
		if strategiesItem.Disabled != nil {
			strategies1.Disabled = types.BoolValue(*strategiesItem.Disabled)
		} else {
			strategies1.Disabled = types.BoolNull()
		}
		// Generate(get.feature_environment.strategies.[].feature_name, {"ErrorMessage":false,"Name":"featureName","Type":{"Type":"string","Enum":null,"RefType":"","Format":"","Discriminator":null,"ItemType":null,"Scope":"","Input":false,"Name":"","BaseName":"","AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Truncated":false,"Comments":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["myAwesomeFeature"]},"Comments":{"Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null}, {"Name":"featureName","Type":{"Comments":null,"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","RefType":"","Type":"string","Truncated":false,"AdditionalProperties":null,"ItemType":null,"Input":false,"Examples":["myAwesomeFeature"],"Format":"","Extensions":{},"Fields":[],"Enum":null,"Scope":"","Output":false},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The name or feature the strategy is attached to","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"featureName"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
		if strategiesItem.FeatureName != nil {
			strategies1.FeatureName = types.StringValue(*strategiesItem.FeatureName)
		} else {
			strategies1.FeatureName = types.StringNull()
		}
		// Generate(get.feature_environment.strategies.[].id, {"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"],"Format":"","Name":"","Scope":"","Truncated":false,"Input":false,"Output":false,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"Discriminator":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true}, {"SerializationMethod":null,"ErrorMessage":false,"Name":"id","Type":{"Type":"string","Fields":[],"Scope":"","Output":false,"Format":"","BaseName":"","RefType":"","Comments":null,"Discriminator":null,"Name":"","ItemType":null,"Enum":null,"Extensions":{},"AdditionalProperties":null,"AssociatedTypes":[],"Truncated":false,"Input":false,"Examples":["6b5157cb-343a-41e7-bfa3-7b4ec3044840"]},"Comments":{"Summary":"","Description":"A uuid for the feature strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"id"}],"Optional":true})
		if strategiesItem.ID != nil {
			strategies1.ID = types.StringValue(*strategiesItem.ID)
		} else {
			strategies1.ID = types.StringNull()
		}
		// Generate(get.feature_environment.strategies.[].name, {"Type":{"Name":"","Fields":[],"AssociatedTypes":[],"BaseName":"","RefType":"","Discriminator":null,"Type":"string","ItemType":null,"Truncated":false,"Comments":null,"Format":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":["flexibleRollout"],"AdditionalProperties":null,"Enum":null,"Scope":"","Output":false},"Comments":{"Description":"The name or type of strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"}, {"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Output":false,"Name":"","BaseName":"","Input":false,"Discriminator":null,"Truncated":false,"Extensions":{},"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"Fields":[],"Scope":"","Examples":["flexibleRollout"]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name or type of strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"name"}]})
		strategies1.Name = types.StringValue(strategiesItem.Name)
		// Generate(get.feature_environment.strategies.[].parameters, {"SerializationMethod":null,"ErrorMessage":false,"Name":"parameters","Type":{"Fields":[],"AssociatedTypes":[],"Enum":null,"Truncated":false,"Scope":"","RefType":"","Input":false,"Examples":[],"AdditionalProperties":null,"BaseName":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"map","ItemType":{"Examples":[],"AdditionalProperties":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Fields":[],"Enum":null,"Scope":"","BaseName":"","RefType":"","Truncated":false,"Input":false,"Discriminator":null,"Name":"","Type":"string","ItemType":null,"AssociatedTypes":[],"Comments":null,"Output":false,"Format":""},"Output":false,"Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of parameters for a strategy"},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true}, {"Name":"parameters","Type":{"AdditionalProperties":null,"Name":"","AssociatedTypes":[],"Fields":[],"RefType":"","Truncated":false,"Examples":[],"Type":"map","ItemType":{"Output":false,"Format":"","Discriminator":null,"Type":"string","Enum":null,"Scope":"","RefType":"","Input":false,"ItemType":null,"BaseName":"","Comments":null,"Examples":[],"Truncated":false,"Extensions":{},"Name":"","Fields":[],"AssociatedTypes":[],"AdditionalProperties":null},"Output":false,"Extensions":{},"Scope":"","BaseName":"","Input":false,"Format":"","Discriminator":null,"Enum":null,"Comments":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of parameters for a strategy","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"parameters"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
		if strategies1.Parameters == nil && len(strategiesItem.Parameters) > 0 {
			strategies1.Parameters = make(map[string]types.String)
			for key, value1 := range strategiesItem.Parameters {
				strategies1.Parameters[key] = types.StringValue(value1)
			}
		}
		// Generate(get.feature_environment.strategies.[].segments, {"Name":"segments","Type":{"Fields":[],"Scope":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"AdditionalProperties":null,"Name":"","BaseName":"","Examples":[],"Discriminator":null,"Type":"array","ItemType":{"RefType":"","Examples":[],"Fields":[],"AssociatedTypes":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Segments"},"Format":"","Discriminator":null,"ItemType":null,"Scope":"","Enum":null,"Truncated":false,"Comments":null,"Input":false,"Name":"","Type":"number","AdditionalProperties":null,"BaseName":"","Output":false},"AssociatedTypes":[],"RefType":"","Truncated":false,"Enum":null,"Input":false,"Output":false,"Format":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of segment ids attached to the strategy","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"segments"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}, {"Type":{"Type":"array","Output":false,"Extensions":{},"Examples":[],"Name":"","Comments":null,"Input":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Truncated":false,"Discriminator":null,"ItemType":{"Fields":[],"Scope":"","Input":false,"Discriminator":null,"Name":"","Extensions":{},"Type":"number","Format":"","AdditionalProperties":null,"Output":false,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Truncated":false,"Comments":null,"Examples":[],"ItemType":null},"Fields":[],"Enum":null,"Scope":"","BaseName":"","RefType":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"A list of segment ids attached to the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"segments"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"segments"})
		strategies1.Segments = nil
		for _, v := range strategiesItem.Segments {
			strategies1.Segments = append(strategies1.Segments, types.NumberValue(big.NewFloat(float64(v))))
		}
		// Generate(get.feature_environment.strategies.[].sort_order, {"SerializationMethod":null,"ErrorMessage":false,"Name":"sortOrder","Type":{"AssociatedTypes":[],"BaseName":"","RefType":"","AdditionalProperties":null,"ItemType":null,"Scope":"","Input":false,"Examples":[9999],"Format":"","Discriminator":null,"Fields":[],"Type":"number","Truncated":false,"Comments":null,"Name":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Enum":null},"Comments":{"Summary":"","Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"sortOrder","Ignore":false}],"Optional":true}, {"Name":"sortOrder","Type":{"Fields":[],"Enum":null,"Discriminator":null,"ItemType":null,"RefType":"","Format":"","AdditionalProperties":null,"Name":"","Scope":"","BaseName":"","Comments":null,"Examples":[9999],"Type":"number","Truncated":false,"Input":false,"Output":false,"Extensions":{},"AssociatedTypes":[]},"Comments":{"Description":"The order of the strategy in the list","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"sortOrder"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
		if strategiesItem.SortOrder != nil {
			strategies1.SortOrder = types.NumberValue(big.NewFloat(float64(*strategiesItem.SortOrder)))
		} else {
			strategies1.SortOrder = types.NumberNull()
		}
		// Generate(get.feature_environment.strategies.[].title, {"ErrorMessage":false,"Name":"title","Type":{"Truncated":false,"ItemType":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"string","Fields":[],"Comments":null,"Discriminator":null,"BaseName":"","Output":false,"Examples":["Gradual Rollout 25-Prod"],"AdditionalProperties":null,"Scope":"","Input":false,"Format":""},"Comments":{"Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"title"}],"Optional":true,"SerializationMethod":null}, {"SerializationMethod":null,"ErrorMessage":false,"Name":"title","Type":{"Comments":null,"Extensions":{},"AdditionalProperties":null,"ItemType":null,"Fields":[],"BaseName":"","AssociatedTypes":[],"Scope":"","Input":false,"Output":false,"Discriminator":null,"Name":"","Type":"string","Truncated":false,"Examples":["Gradual Rollout 25-Prod"],"Format":"","Enum":null,"RefType":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A descriptive title for the strategy","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"title"}],"Optional":true})
		if strategiesItem.Title != nil {
			strategies1.Title = types.StringValue(*strategiesItem.Title)
		} else {
			strategies1.Title = types.StringNull()
		}
		// Generate(get.feature_environment.strategies.[].variants, {"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"Name":"","Fields":[],"AssociatedTypes":[],"Input":false,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"ItemType":{"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchema"},"ItemType":null,"BaseName":"","RefType":"Schemas","Input":false,"Examples":[],"AdditionalProperties":null,"Type":"class","Truncated":false,"Comments":{"Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Output":false,"Scope":"shared","Fields":[{"Type":{"Truncated":false,"Format":"","Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","ItemType":null,"Scope":"","BaseName":"","Discriminator":null,"Type":"string","Input":false,"Examples":["blue_group"],"AdditionalProperties":null,"Comments":null},"Comments":{"Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"},{"Name":"payload","Type":{"Truncated":false,"Comments":{"DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Format":"","Discriminator":null,"Type":"class","RefType":"Schemas","Output":false,"Fields":[{"Name":"type","Type":{"BaseName":"","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Examples":[],"Type":"enum","ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Name":"strategyVariantSchema_payload_type","AssociatedTypes":[],"Enum":{"Type":{"Format":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"Examples":[],"ItemType":null,"BaseName":"","Input":false,"Extensions":{},"AdditionalProperties":null,"Type":"string","Truncated":false,"Output":false,"Scope":"","RefType":""},"Values":["json","csv","string"],"Names":[]}},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"ItemType":null,"AssociatedTypes":[],"Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","Input":false,"RefType":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Name":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload"}}],"Enum":null,"BaseName":"","Name":"strategyVariantSchema_payload","AssociatedTypes":[],"Scope":"shared","Examples":[],"AdditionalProperties":null,"ItemType":null},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"RefType":"","Discriminator":null,"BaseName":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"Scope":"","Examples":["custom.context.field"]},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false},{"Comments":{"DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Type":"integer","Fields":[],"Truncated":false,"Input":false,"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Output":false,"Format":"","Discriminator":null,"Scope":"","Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Name":"","Comments":null,"Examples":[]}},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Type":"enum","RefType":"","Truncated":false,"Output":false,"Name":"strategyVariantSchema_weightType","Enum":{"Type":{"Name":"","AssociatedTypes":[],"BaseName":"","Extensions":{},"Format":"","AdditionalProperties":null,"Enum":null,"Scope":"","RefType":"","Type":"string","ItemType":null,"Output":false,"Input":false,"Examples":[],"Discriminator":null,"Fields":[],"Truncated":false,"Comments":null},"Values":["variable","fix"],"Names":[]},"Scope":"shared","Format":"","AssociatedTypes":[],"Input":false,"Examples":["fix"],"AdditionalProperties":null,"BaseName":"","Fields":[],"Comments":{"Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"ItemType":null}}],"AssociatedTypes":[],"Enum":null,"Format":"","Discriminator":null,"Name":"strategyVariantSchema"},"Comments":null,"Examples":[],"Format":"","Type":"array","Enum":null,"Scope":"","AdditionalProperties":null,"Discriminator":null,"BaseName":"","RefType":"","Truncated":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Strategy level variants","ExternalDocs":null}}, {"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants","Type":{"Enum":null,"Scope":"","Truncated":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Comments":null,"Output":false,"Extensions":{},"Examples":[],"Discriminator":null,"Input":false,"Name":"","Type":"array","ItemType":{"Output":false,"Name":"strategyVariantSchema","AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"Schemas","ItemType":null,"Fields":[{"Name":"name","Type":{"AssociatedTypes":[],"Format":"","Discriminator":null,"ItemType":null,"Scope":"","Comments":null,"Examples":["blue_group"],"RefType":"","Output":false,"Extensions":{},"AdditionalProperties":null,"Name":"","Type":"string","Enum":null,"BaseName":"","Fields":[],"Truncated":false,"Input":false},"Comments":{"Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"RefType":"Schemas","Fields":[{"Name":"type","Type":{"Format":"","ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"Comments":{"DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Extensions":{},"Examples":[],"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":{"Values":["json","csv","string"],"Names":[],"Type":{"Scope":"","RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Name":"","Type":"string","Fields":[],"AssociatedTypes":[],"Comments":null,"Discriminator":null,"Enum":null,"BaseName":"","Truncated":false,"Examples":[],"ItemType":null,"Input":false,"Extensions":{}}},"Input":false,"Output":false,"Discriminator":null,"Name":"strategyVariantSchema_payload_type","Type":"enum","RefType":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Format":"","Enum":null,"Examples":[],"Input":false,"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Comments":null,"Name":"","Extensions":{},"Discriminator":null},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value"}],"AssociatedTypes":[],"BaseName":"","Discriminator":null,"ItemType":null,"Format":"","AdditionalProperties":null,"Extensions":{},"Examples":[],"Enum":null,"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"Truncated":false,"Output":false,"Name":"strategyVariantSchema_payload","Type":"class","Scope":"shared"}},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Name":"","Fields":[],"Enum":null,"RefType":"","Truncated":false,"Extensions":{},"Examples":["custom.context.field"],"Type":"string","AssociatedTypes":[],"Scope":"","BaseName":"","Comments":null,"Output":false,"Input":false,"Format":"","ItemType":null,"AdditionalProperties":null,"Discriminator":null},"Comments":{"Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}]},{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information"},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"AssociatedTypes":[],"RefType":"","Input":false,"Output":false,"Examples":[],"ItemType":null,"Fields":[],"Scope":"","BaseName":"","Discriminator":null,"Name":"","Enum":null,"Comments":null,"Extensions":{},"Format":"","AdditionalProperties":null,"Type":"integer","Truncated":false}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Type":"enum","Enum":{"Type":{"Type":"string","Enum":null,"BaseName":"","RefType":"","Comments":null,"Examples":[],"Fields":[],"Scope":"","Extensions":{},"ItemType":null,"AssociatedTypes":[],"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Name":"","Truncated":false,"Discriminator":null},"Values":["variable","fix"],"Names":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Input":false,"Scope":"shared","BaseName":"","RefType":"","Truncated":false,"ItemType":null,"Fields":[],"Examples":["fix"],"Format":"","Discriminator":null,"Name":"strategyVariantSchema_weightType","AssociatedTypes":[],"Output":false,"Extensions":{},"AdditionalProperties":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)."},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false}],"Comments":{"Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{},"AdditionalProperties":null,"Discriminator":null,"Type":"class","Scope":"shared","Truncated":false,"Examples":[],"Format":""},"Fields":[],"BaseName":"","RefType":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Strategy level variants","ExternalDocs":null}})
		strategies1.Variants = nil
		for _, variantsItem := range strategiesItem.Variants {
			var variants1 StrategyVariantSchema
			// Generate(false, false, {"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchema"},"ItemType":null,"BaseName":"","RefType":"Schemas","Input":false,"Examples":[],"AdditionalProperties":null,"Type":"class","Truncated":false,"Comments":{"Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Output":false,"Scope":"shared","Fields":[{"ErrorMessage":false,"Name":"name","Type":{"Comments":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"Format":"","Fields":[],"ItemType":null,"Scope":"","BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Input":false,"Examples":["blue_group"],"AdditionalProperties":null,"Discriminator":null,"Type":"string"},"Comments":{"Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null},{"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Discriminator":null,"Type":"class","Truncated":false,"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload","x-untouched":true},"Format":"","Fields":[{"Name":"type","Type":{"RefType":"","Fields":[],"ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Type":"enum","Format":"","AssociatedTypes":[],"Enum":{"Names":[],"Type":{"Scope":"","RefType":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"Examples":[],"Format":"","ItemType":null,"BaseName":"","Input":false,"Extensions":{},"AdditionalProperties":null,"Type":"string","Truncated":false,"Output":false},"Values":["json","csv","string"]},"Name":"strategyVariantSchema_payload_type","Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"Discriminator":null,"BaseName":""},"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"value","Type":{"ItemType":null,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Type":"string","AssociatedTypes":[],"Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"RefType":"","Input":false,"Name":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"RefType":"Schemas","Output":false,"Name":"strategyVariantSchema_payload","Enum":null,"BaseName":"","ItemType":null,"AssociatedTypes":[],"Scope":"shared","Examples":[],"AdditionalProperties":null},"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"RefType":"","Discriminator":null,"BaseName":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"Scope":"","Examples":["custom.context.field"]},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time"},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}]},{"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"RefType":"","Output":false,"Format":"","Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Comments":null,"Examples":[],"AdditionalProperties":null,"Type":"integer","Fields":[],"Truncated":false,"Input":false},"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"Name":"weightType","Type":{"Name":"strategyVariantSchema_weightType","Type":"enum","RefType":"","Truncated":false,"Output":false,"AssociatedTypes":[],"Enum":{"Type":{"Type":"string","ItemType":null,"Output":false,"Fields":[],"Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null,"Name":"","AssociatedTypes":[],"BaseName":"","Enum":null,"Scope":"","RefType":"","Extensions":{},"Format":"","AdditionalProperties":null},"Values":["variable","fix"],"Names":[]},"Scope":"shared","Format":"","BaseName":"","Input":false,"Examples":["fix"],"AdditionalProperties":null,"ItemType":null,"Fields":[],"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null},"Comments":{"Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"Enum":null,"Format":"","Discriminator":null,"Name":"strategyVariantSchema"}, {"BaseName":"","RefType":"Schemas","Output":false,"Name":"strategyVariantSchema","AssociatedTypes":[],"Enum":null,"ItemType":null,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Examples":["blue_group"],"ItemType":null,"Scope":"","Comments":null,"BaseName":"","RefType":"","Output":false,"Extensions":{},"AdditionalProperties":null,"Name":"","Type":"string","Enum":null,"Fields":[],"Truncated":false,"Input":false,"AssociatedTypes":[],"Format":"","Discriminator":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null}},{"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Extensions":{},"Examples":[],"Enum":null,"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant"},"Input":false,"Truncated":false,"Output":false,"Name":"strategyVariantSchema_payload","Type":"class","Scope":"shared","RefType":"Schemas","Fields":[{"Type":{"Fields":[],"AssociatedTypes":[],"Enum":{"Type":{"ItemType":null,"Input":false,"Extensions":{},"Examples":[],"Format":"","AdditionalProperties":null,"Name":"","Type":"string","Fields":[],"Scope":"","RefType":"","Output":false,"AssociatedTypes":[],"Comments":null,"Enum":null,"BaseName":"","Truncated":false,"Discriminator":null},"Values":["json","csv","string"],"Names":[]},"Input":false,"Output":false,"Discriminator":null,"Name":"strategyVariantSchema_payload_type","Type":"enum","RefType":"","ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Extensions":{},"Examples":[],"Format":"","AdditionalProperties":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type"},{"Name":"value","Type":{"Comments":null,"Input":false,"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Name":"","Extensions":{},"Discriminator":null,"Format":"","AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Enum":null,"Examples":[]},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"value","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"AssociatedTypes":[],"BaseName":"","Discriminator":null,"ItemType":null,"Format":"","AdditionalProperties":null}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Enum":null,"RefType":"","Truncated":false,"Extensions":{},"Examples":["custom.context.field"],"Name":"","Fields":[],"Scope":"","BaseName":"","Comments":null,"Output":false,"Type":"string","AssociatedTypes":[],"Input":false,"Format":"","Discriminator":null,"ItemType":null,"AdditionalProperties":null},"Comments":{"Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"stickiness","Ignore":false}],"Optional":false},{"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Scope":"","Enum":null,"BaseName":"","Discriminator":null,"Name":"","Truncated":false,"Comments":null,"Extensions":{},"Format":"","AdditionalProperties":null,"Type":"integer","Fields":[],"AssociatedTypes":[],"RefType":"","Input":false,"Output":false,"Examples":[],"ItemType":null}},{"Comments":{"DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"ItemType":null,"Fields":[],"Examples":["fix"],"Format":"","Discriminator":null,"Name":"strategyVariantSchema_weightType","AssociatedTypes":[],"Output":false,"Extensions":{},"AdditionalProperties":null,"Type":"enum","Enum":{"Type":{"Fields":[],"Scope":"","Extensions":{},"Output":false,"Format":"","AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Input":false,"Name":"","Truncated":false,"Discriminator":null,"RefType":"","Comments":null,"Examples":[],"Type":"string","Enum":null,"BaseName":""},"Values":["variable","fix"],"Names":[]},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Input":false,"Scope":"shared","BaseName":"","RefType":"","Truncated":false}}],"Comments":{"DeprecationMessage":"","Summary":"","Description":"This is an experimental property. It may change or be removed as we work on it. Please don't depend on it yet. A strategy variant allows you to attach any data to strategies instead of only returning `true`/`false`. Strategy variants take precedence over feature variants.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Discriminator":null,"Input":false,"Extensions":{},"AdditionalProperties":null,"Examples":[],"Format":"","Type":"class","Scope":"shared","Truncated":false}, variants1)
			// Generate(get.feature_environment.strategies.[].variants.[].name, {"Type":{"Comments":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Truncated":false,"Format":"","Name":"","ItemType":null,"Scope":"","BaseName":"","Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Type":"string","Input":false,"Examples":["blue_group"],"AdditionalProperties":null,"Discriminator":null},"Comments":{"Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"}, {"Name":"name","Type":{"Fields":[],"Truncated":false,"Input":false,"AssociatedTypes":[],"Format":"","Discriminator":null,"ItemType":null,"Scope":"","Comments":null,"Examples":["blue_group"],"RefType":"","Output":false,"Extensions":{},"AdditionalProperties":null,"Name":"","Type":"string","Enum":null,"BaseName":""},"Comments":{"Summary":"","Description":"The variant name. Must be unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
			variants1.Name = types.StringValue(variantsItem.Name)
			// Generate(get.feature_environment.strategies.[].variants.[].payload, {"Name":"payload","Type":{"Examples":[],"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Scope":"shared","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Format":"","Discriminator":null,"Type":"class","Truncated":false,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null},"Fields":[{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"Annotations":[{"FieldName":"type","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"BaseName":"","Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Type":"enum","ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Format":"","Name":"strategyVariantSchema_payload_type","AssociatedTypes":[],"Enum":{"Type":{"RefType":"","Scope":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"Examples":[],"Format":"","Discriminator":null,"Name":"","BaseName":"","Input":false,"Extensions":{},"AdditionalProperties":null,"ItemType":null,"Truncated":false,"Output":false,"Type":"string"},"Values":["json","csv","string"],"Names":[]}}},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","AssociatedTypes":[],"Output":false,"RefType":"","Input":false,"Scope":"","BaseName":"","Truncated":false,"Name":"","Fields":[],"Enum":null,"Examples":[],"ItemType":null,"Comments":null,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true}}}],"RefType":"Schemas","Output":false,"Name":"strategyVariantSchema_payload","Enum":null,"BaseName":""},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}, {"Name":"payload","Type":{"ItemType":null,"Format":"","AdditionalProperties":null,"Discriminator":null,"Examples":[],"Enum":null,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false},"Input":false,"Extensions":{},"Output":false,"Name":"strategyVariantSchema_payload","Type":"class","Scope":"shared","Truncated":false,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Input":false,"Output":false,"Discriminator":null,"Name":"strategyVariantSchema_payload_type","Type":"enum","RefType":"","Examples":[],"Format":"","ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"Extensions":{},"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":{"Values":["json","csv","string"],"Names":[],"Type":{"Fields":[],"Scope":"","RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Name":"","Type":"string","AssociatedTypes":[],"Comments":null,"Truncated":false,"Discriminator":null,"Enum":null,"BaseName":"","Extensions":{},"Examples":[],"ItemType":null,"Input":false}}},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Input":false,"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Comments":null,"Name":"","Extensions":{},"Discriminator":null,"AdditionalProperties":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Format":"","Enum":null,"Examples":[]},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"value","Ignore":false}],"Optional":false}],"AssociatedTypes":[],"BaseName":"","RefType":"Schemas"},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant"},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
			// Generate(true, true, {"Examples":[],"AdditionalProperties":null,"ItemType":null,"AssociatedTypes":[],"Scope":"shared","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Format":"","Discriminator":null,"Type":"class","Truncated":false,"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Fields":[{"ErrorMessage":false,"Name":"type","Type":{"Name":"strategyVariantSchema_payload_type","AssociatedTypes":[],"Enum":{"Type":{"Type":"string","Truncated":false,"Output":false,"Scope":"","RefType":"","Comments":null,"Examples":[],"Format":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"AdditionalProperties":null,"ItemType":null,"BaseName":"","Input":false,"Extensions":{}},"Values":["json","csv","string"],"Names":[]},"BaseName":"","Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false},"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Input":false,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Examples":[],"Type":"enum","ItemType":null,"Scope":"shared","Truncated":false,"Format":""},"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null},{"Annotations":[{"FieldName":"value","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"RefType":"","Input":false,"BaseName":"","Truncated":false,"Name":"","Fields":[],"Enum":null,"Scope":"","ItemType":null,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"AdditionalProperties":null,"Discriminator":null,"Type":"string","AssociatedTypes":[],"Output":false,"Format":""},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}}],"RefType":"Schemas","Output":false,"Name":"strategyVariantSchema_payload","Enum":null,"BaseName":""}, {"Enum":null,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null},"Input":false,"Extensions":{},"Examples":[],"Name":"strategyVariantSchema_payload","Type":"class","Scope":"shared","Truncated":false,"Output":false,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Input":false,"Output":false,"Discriminator":null,"Name":"strategyVariantSchema_payload_type","Type":"enum","RefType":"","Examples":[],"Format":"","ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{},"AdditionalProperties":null,"Fields":[],"AssociatedTypes":[],"Enum":{"Names":[],"Type":{"Enum":null,"BaseName":"","Truncated":false,"Discriminator":null,"ItemType":null,"Input":false,"Extensions":{},"Examples":[],"RefType":"","Output":false,"Format":"","AdditionalProperties":null,"Name":"","Type":"string","Fields":[],"Scope":"","AssociatedTypes":[],"Comments":null},"Values":["json","csv","string"]}},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null}},{"Type":{"Enum":null,"Examples":[],"Output":false,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Comments":null,"Input":false,"Name":"","Extensions":{},"Discriminator":null,"Type":"string","ItemType":null,"BaseName":"","RefType":"","Format":"","AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value"}],"AssociatedTypes":[],"BaseName":"","RefType":"Schemas","ItemType":null,"Format":"","AdditionalProperties":null,"Discriminator":null}, variants1.Payload)
			if variants1.Payload == nil {
				variants1.Payload = &StrategyVariantSchemaPayload{}
			}
			if variantsItem.Payload == nil {
				variants1.Payload = nil
			} else {
				variants1.Payload = &StrategyVariantSchemaPayload{}
				// Generate(get.feature_environment.strategies.[].variants.[].payload.type, {"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"BaseName":"","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv."},"AdditionalProperties":null,"Discriminator":null,"Fields":[],"RefType":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Type":"enum","ItemType":null,"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Format":"","Name":"strategyVariantSchema_payload_type","AssociatedTypes":[],"Enum":{"Type":{"Scope":"","RefType":"","Format":"","Discriminator":null,"Name":"","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"Examples":[],"ItemType":null,"BaseName":"","Input":false,"Extensions":{},"AdditionalProperties":null,"Type":"string","Truncated":false,"Output":false},"Values":["json","csv","string"],"Names":[]}},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}}, {"Name":"type","Type":{"RefType":"","Name":"strategyVariantSchema_payload_type","Type":"enum","BaseName":"","Truncated":false,"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{},"Examples":[],"Format":"","ItemType":null,"Scope":"shared","AdditionalProperties":null,"Enum":{"Type":{"AssociatedTypes":[],"Comments":null,"Enum":null,"BaseName":"","Truncated":false,"Discriminator":null,"ItemType":null,"Input":false,"Extensions":{},"Examples":[],"Format":"","AdditionalProperties":null,"Name":"","Type":"string","Fields":[],"Scope":"","RefType":"","Output":false},"Values":["json","csv","string"],"Names":[]},"Fields":[],"AssociatedTypes":[],"Discriminator":null,"Input":false,"Output":false},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
				variants1.Payload.Type = types.StringValue(string(variantsItem.Payload.Type))
				// Generate(get.feature_environment.strategies.[].variants.[].payload.value, {"Name":"value","Type":{"AssociatedTypes":[],"Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Type":"string","Input":false,"RefType":"","Fields":[],"Enum":null,"Scope":"","BaseName":"","Truncated":false,"Name":"","Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"ItemType":null},"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}, {"Name":"value","Type":{"Type":"string","ItemType":null,"BaseName":"","RefType":"","Format":"","AdditionalProperties":null,"Enum":null,"Examples":[],"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Comments":null,"Input":false,"Output":false,"Name":"","Extensions":{},"Discriminator":null},"Comments":{"Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
				variants1.Payload.Value = types.StringValue(variantsItem.Payload.Value)
			}
			// Generate(get.feature_environment.strategies.[].variants.[].stickiness, {"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"AdditionalProperties":null,"Type":"string","ItemType":null,"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"Format":"","RefType":"","Discriminator":null,"BaseName":"","Truncated":false,"Input":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Name":"","Fields":[],"Scope":"","Examples":["custom.context.field"]},"Comments":{"Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false}, {"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Input":false,"Format":"","ItemType":null,"AdditionalProperties":null,"Discriminator":null,"Truncated":false,"Extensions":{},"Examples":["custom.context.field"],"Name":"","Fields":[],"Enum":null,"RefType":"","Comments":null,"Output":false,"Type":"string","AssociatedTypes":[],"Scope":"","BaseName":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The [stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) to use for distribution of this variant. Stickiness is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":false})
			variants1.Stickiness = types.StringValue(variantsItem.Stickiness)
			// Generate(get.feature_environment.strategies.[].variants.[].weight, {"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Type":"integer","Fields":[],"Truncated":false,"Input":false,"AdditionalProperties":null,"Output":false,"Format":"","Discriminator":null,"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Scope":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Comments":null,"Examples":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weight"}]}, {"Name":"weight","Type":{"Name":"","Enum":null,"BaseName":"","Discriminator":null,"Type":"integer","Truncated":false,"Comments":null,"Extensions":{},"Format":"","AdditionalProperties":null,"ItemType":null,"Fields":[],"AssociatedTypes":[],"RefType":"","Input":false,"Output":false,"Examples":[],"Scope":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is an integer between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
			variants1.Weight = types.Int64Value(variantsItem.Weight)
			// Generate(get.feature_environment.strategies.[].variants.[].weight_type, {"Type":{"Truncated":false,"Output":false,"Name":"strategyVariantSchema_weightType","Type":"enum","RefType":"","Format":"","AssociatedTypes":[],"Enum":{"Type":{"AssociatedTypes":[],"BaseName":"","Name":"","Scope":"","RefType":"","Extensions":{},"Format":"","AdditionalProperties":null,"Enum":null,"ItemType":null,"Output":false,"Type":"string","Truncated":false,"Comments":null,"Input":false,"Examples":[],"Discriminator":null,"Fields":[]},"Values":["variable","fix"],"Names":[]},"Scope":"shared","AdditionalProperties":null,"BaseName":"","Input":false,"Examples":["fix"],"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Discriminator":null,"ItemType":null,"Fields":[],"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight)."}},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null,"Deprecated":false},"Annotations":[{"FieldName":"weightType","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType"}, {"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Type":"enum","Enum":{"Type":{"Name":"","Truncated":false,"Discriminator":null,"Type":"string","Enum":null,"BaseName":"","RefType":"","Comments":null,"Examples":[],"Fields":[],"Scope":"","Extensions":{},"ItemType":null,"AssociatedTypes":[],"Input":false,"Output":false,"Format":"","AdditionalProperties":null},"Values":["variable","fix"],"Names":[]},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Input":false,"Scope":"shared","BaseName":"","RefType":"","Truncated":false,"ItemType":null,"Fields":[],"Examples":["fix"],"Format":"","Discriminator":null,"Name":"strategyVariantSchema_weightType","AssociatedTypes":[],"Output":false,"Extensions":{},"AdditionalProperties":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to `fix` if this variant must have exactly the weight allocated to it. If the type is `variable`, the weight will adjust so that the total weight of all variants adds up to 1000. Refer to the [variant weight documentation](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight).","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":false})
			variants1.WeightType = types.StringValue(string(variantsItem.WeightType))
			strategies1.Variants = append(strategies1.Variants, variants1)
		}
		r.Strategies = append(r.Strategies, strategies1)
	}
	// Generate(get.feature_environment.type, {"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Comments":null,"Type":"string","ItemType":null,"Scope":"","RefType":"","Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Examples":["development"],"Format":"","Name":"","Fields":[],"Output":false,"AdditionalProperties":null},"Comments":{"Summary":"","Description":"The type of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}}, {"Name":"type","Type":{"Type":"string","Fields":[],"AssociatedTypes":[],"Enum":null,"Comments":null,"Output":false,"Examples":["development"],"Name":"","ItemType":null,"Scope":"","Truncated":false,"Extensions":{},"Format":"","AdditionalProperties":null,"Discriminator":null,"BaseName":"","RefType":"","Input":false},"Comments":{"Summary":"","Description":"The type of the environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
	if resp.Type != nil {
		r.Type = types.StringValue(*resp.Type)
	} else {
		r.Type = types.StringNull()
	}
	// Generate(get.feature_environment.variant_count, {"Name":"variantCount","Type":{"Discriminator":null,"Comments":null,"Examples":[],"Scope":"","RefType":"","Input":false,"Output":false,"Type":"number","ItemType":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"BaseName":"","Truncated":false,"AssociatedTypes":[],"Enum":null,"Format":"","AdditionalProperties":null,"Name":"","Fields":[]},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The number of defined variants","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"variantCount"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}, {"Name":"variantCount","Type":{"RefType":"","Comments":null,"Input":false,"Output":false,"AdditionalProperties":null,"Scope":"","Truncated":false,"Examples":[],"Format":"","Discriminator":null,"BaseName":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Type":"number","Extensions":{},"Name":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The number of defined variants","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"variantCount"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
	if resp.VariantCount != nil {
		r.VariantCount = types.NumberValue(big.NewFloat(float64(*resp.VariantCount)))
	} else {
		r.VariantCount = types.NumberNull()
	}
	// Generate(get.feature_environment.variants, {"Name":"variants","Type":{"Truncated":false,"Examples":[],"Fields":[],"Enum":null,"Discriminator":null,"RefType":"","Input":false,"ItemType":{"BaseName":"","Name":"variantSchema","Enum":null,"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Comments":{"Summary":"","Description":"A variant allows for further separation of users into segments. See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants) for a more detailed description","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Truncated":false,"Output":false,"ItemType":null,"Scope":"shared","AssociatedTypes":[],"RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"VariantSchema","x-untouched":true},"Type":"class","Fields":[{"ErrorMessage":false,"Name":"name","Type":{"Enum":null,"BaseName":"","RefType":"","AdditionalProperties":null,"Type":"string","Input":false,"Output":false,"Name":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"Comments":null,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Format":"","Scope":"","Truncated":false,"Examples":["blue_group"],"Discriminator":null},"Comments":{"Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null},{"Type":{"Comments":null,"Examples":[],"AdditionalProperties":null,"Type":"array","Enum":null,"AssociatedTypes":[],"Scope":"","RefType":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"Output":false,"Format":"","ItemType":{"Scope":"shared","Truncated":false,"Examples":[],"AdditionalProperties":null,"Name":"overrideSchema","Fields":[{"Comments":{"Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Name":"","Type":"string","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Fields":[],"RefType":"","Format":"","AdditionalProperties":null,"ItemType":null,"Comments":null,"Input":false,"AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Output":false,"Examples":["userId"]}},{"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Enum":null,"Comments":null,"Examples":[],"Name":"","AdditionalProperties":null,"Type":"array","Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"ItemType":{"Type":"string","Scope":"","Input":false,"Discriminator":null,"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"Output":false,"Format":"","Name":"","Truncated":false,"ItemType":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Examples":[]},"Discriminator":null,"Truncated":false,"Format":"","RefType":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Which values that should be overriden","ExternalDocs":null}}],"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"OverrideSchema"},"Format":"","Comments":{"Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Type":"class","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Discriminator":null},"BaseName":"","Discriminator":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"overrides"},{"Name":"payload","Type":{"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Discriminator":null,"Scope":"shared","Truncated":false,"Output":false,"Examples":[],"AdditionalProperties":null,"Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Scope":"shared","RefType":"","AdditionalProperties":null,"Name":"variantSchema_payload_type","AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Type":"enum","ItemType":null,"Fields":[],"Enum":{"Values":["json","csv","string"],"Names":[],"Type":{"Name":"","Scope":"","BaseName":"","AdditionalProperties":null,"Discriminator":null,"Enum":null,"Truncated":false,"Comments":null,"Output":false,"Format":"","Fields":[],"RefType":"","Extensions":{},"Examples":[],"Type":"string","ItemType":null,"AssociatedTypes":[],"Input":false}},"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"Output":false,"Examples":[],"Discriminator":null},"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"type"}]},{"ErrorMessage":false,"Name":"value","Type":{"Type":"string","Fields":[],"RefType":"","Comments":null,"Enum":null,"Output":false,"Format":"","AdditionalProperties":null,"Examples":[],"Discriminator":null,"AssociatedTypes":[],"Scope":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","ItemType":null,"BaseName":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null}],"AssociatedTypes":[],"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null},"Input":false,"BaseName":"","Format":"","Name":"variantSchema_payload","Type":"class","ItemType":null,"Enum":null},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null},"Annotations":[{"FieldName":"stickiness","Ignore":false}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Fields":[],"Input":false,"Output":false,"AssociatedTypes":[],"RefType":"","Truncated":false,"Format":"","AdditionalProperties":null,"Name":"","ItemType":null,"Enum":null,"Comments":null,"Examples":["custom.context.field"],"Discriminator":null,"Type":"string","Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true}}},{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"AdditionalProperties":null,"Truncated":false,"Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"BaseName":"","Type":"number","ItemType":null,"AssociatedTypes":[],"Enum":null,"Scope":"","Output":false,"Examples":[],"Name":"","RefType":"","Format":"","Discriminator":null,"Fields":[]},"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}]},{"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"ItemType":null,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Comments":{"DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Format":"","Name":"variantSchema_weightType","Fields":[],"AssociatedTypes":[],"Scope":"shared","Type":"enum","Input":false,"Output":false,"AdditionalProperties":null,"Enum":{"Type":{"Comments":null,"Extensions":{},"Discriminator":null,"BaseName":"","Truncated":false,"Enum":null,"Fields":[],"AssociatedTypes":[],"ItemType":null,"RefType":"","Input":false,"Examples":[],"Name":"","Type":"string","Format":"","AdditionalProperties":null,"Scope":"","Output":false},"Values":["variable","fix"],"Names":[]},"BaseName":"","RefType":"","Examples":["variable"]},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000"},"Annotations":[{"FieldName":"weightType","Ignore":false}],"Optional":true}]},"Scope":"","BaseName":"","Output":false,"AdditionalProperties":null,"Name":"","Type":"array","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","AssociatedTypes":[],"Comments":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A list of variants for the feature environment","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}, {"Type":{"Fields":[],"Input":false,"Format":"","Type":"array","ItemType":{"Examples":[],"AssociatedTypes":[],"Enum":null,"RefType":"Schemas","Input":false,"Output":false,"Extensions":{},"Name":"variantSchema","Fields":[{"Type":{"AdditionalProperties":null,"Discriminator":null,"Type":"string","Fields":[],"Scope":"","Input":false,"Comments":null,"Output":false,"Examples":["blue_group"],"Truncated":false,"Extensions":{},"Format":"","BaseName":"","RefType":"","Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null},"Comments":{"Summary":"","Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name"},{"Name":"overrides","Type":{"Fields":[],"Truncated":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Examples":[],"Name":"","Enum":null,"Scope":"","Output":false,"Extensions":{},"Type":"array","AssociatedTypes":[],"Input":false,"ItemType":{"Name":"overrideSchema","ItemType":null,"Enum":null,"Scope":"shared","Output":false,"Examples":[],"Type":"class","Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name"},"AdditionalProperties":null,"AssociatedTypes":[],"Truncated":false,"Extensions":{},"Fields":[{"Name":"contextName","Type":{"Truncated":false,"Input":false,"AdditionalProperties":null,"Discriminator":null,"Extensions":{},"Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Format":"","Name":"","Type":"string","Output":false,"Examples":["userId"],"ItemType":null,"Scope":"","BaseName":"","Comments":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Name":"","ItemType":{"Name":"","Fields":[],"Enum":null,"Scope":"","Output":false,"Extensions":{},"RefType":"","Comments":null,"Input":false,"Format":"","ItemType":null,"BaseName":"","Truncated":false,"Examples":[],"Discriminator":null,"Type":"string","AssociatedTypes":[],"AdditionalProperties":null},"AdditionalProperties":null,"Discriminator":null,"Type":"array","Enum":null,"RefType":"","Truncated":false,"Input":false,"Format":"","Fields":[],"Comments":null,"Extensions":{},"AssociatedTypes":[],"Scope":"","BaseName":"","Output":false,"Examples":[]},"Comments":{"Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false}],"BaseName":"","RefType":"Schemas","Input":false,"Format":"","Discriminator":null},"BaseName":"","RefType":"","Comments":null},"Comments":{"Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"payload","Type":{"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Fields":[{"Name":"type","Type":{"Type":"enum","AssociatedTypes":[],"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"ItemType":null,"RefType":"","Discriminator":null,"Name":"variantSchema_payload_type","Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Extensions":{},"Examples":[],"Fields":[],"Enum":{"Names":[],"Type":{"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Output":false,"Format":"","Name":"","AdditionalProperties":null,"Type":"string","Scope":"","Comments":null,"Input":false,"Fields":[],"Extensions":{},"Examples":[],"Discriminator":null,"RefType":""},"Values":["json","csv","string"]},"BaseName":""},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Name":"value","Type":{"AssociatedTypes":[],"ItemType":null,"Fields":[],"Scope":"","BaseName":"","Format":"","AdditionalProperties":null,"Name":"","Enum":null,"RefType":"","Output":false,"Comments":null,"Input":false,"Extensions":{},"Examples":[],"Discriminator":null,"Type":"string","Truncated":false},"Comments":{"Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Truncated":false,"Enum":null,"Scope":"shared","RefType":"Schemas","Output":false,"BaseName":"","Input":false,"Extensions":{},"Examples":[],"Format":"","Name":"variantSchema_payload","Type":"class","AssociatedTypes":[]},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"BaseName":"","Truncated":false,"Type":"string","Enum":null,"Scope":"","Discriminator":null,"Name":"","ItemType":null,"Format":"","AssociatedTypes":[],"Examples":["custom.context.field"],"AdditionalProperties":null,"Input":false,"Output":false,"Extensions":{},"Fields":[],"RefType":"","Comments":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":true},{"Type":{"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"RefType":"","Comments":null,"Examples":[],"ItemType":null,"Truncated":false,"Extensions":{},"Format":"","Discriminator":null,"Name":"","Output":false,"Type":"number","Fields":[],"Scope":"","BaseName":"","Input":false},"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"FieldName":"weight","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight"},{"Name":"weightType","Type":{"Discriminator":null,"Type":"enum","AssociatedTypes":[],"Scope":"shared","AdditionalProperties":null,"Name":"variantSchema_weightType","ItemType":null,"Output":false,"Format":"","Fields":[],"RefType":"","Truncated":false,"Input":false,"Extensions":{},"Examples":["variable"],"Enum":{"Names":[],"Type":{"Name":"","Enum":null,"BaseName":"","Output":false,"Extensions":{},"Examples":[],"Format":"","Type":"string","AssociatedTypes":[],"RefType":"","Comments":null,"Discriminator":null,"ItemType":null,"Scope":"","Truncated":false,"Fields":[],"Input":false,"AdditionalProperties":null},"Values":["variable","fix"]},"BaseName":"","Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false}},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000"},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"Format":"","Discriminator":null,"ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"Type":"class","Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"A variant allows for further separation of users into segments. See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants) for a more detailed description","ExternalDocs":null,"Deprecated":false},"AdditionalProperties":null},"AssociatedTypes":[],"BaseName":"","RefType":"","Comments":null,"AdditionalProperties":null,"Name":"","Truncated":false,"Scope":"","Output":false,"Extensions":{},"Examples":[],"Discriminator":null,"Enum":null},"Comments":{"Summary":"","Description":"A list of variants for the feature environment","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"variants"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"variants"})
	r.Variants = nil
	for _, variantsItem1 := range resp.Variants {
		var variants3 VariantSchema
		// Generate(false, false, {"AssociatedTypes":[],"RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"VariantSchema","x-untouched":true},"Type":"class","Fields":[{"Comments":{"DeprecationMessage":"","Summary":"","Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"FieldName":"name","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Type":"string","Input":false,"Output":false,"Format":"","Name":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Scope":"","Truncated":false,"Examples":["blue_group"],"Discriminator":null,"Enum":null,"BaseName":"","RefType":"","AdditionalProperties":null}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"overrides","Type":{"AdditionalProperties":null,"Type":"array","Enum":null,"Comments":null,"Examples":[],"RefType":"","Truncated":false,"Input":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Name":"","Fields":[],"AssociatedTypes":[],"Scope":"","ItemType":{"Output":false,"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false},"Input":false,"AssociatedTypes":[],"Enum":null,"BaseName":"","Discriminator":null,"Type":"class","ItemType":null,"Examples":[],"AdditionalProperties":null,"Scope":"shared","Truncated":false,"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"OverrideSchema"},"Format":"","Name":"overrideSchema","Fields":[{"Name":"contextName","Type":{"RefType":"","Format":"","AdditionalProperties":null,"Fields":[],"Comments":null,"Input":false,"ItemType":null,"Enum":null,"Scope":"","Truncated":false,"Output":false,"Examples":["userId"],"AssociatedTypes":[],"Type":"string","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":""},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Name":"","Enum":null,"Comments":null,"Examples":[],"Type":"array","AdditionalProperties":null,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"ItemType":{"Type":"string","Scope":"","Input":false,"Discriminator":null,"Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Name":"","Truncated":false,"ItemType":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Examples":[]},"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Input":false,"Discriminator":null,"RefType":"","Truncated":false,"Format":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false}]},"BaseName":"","Output":false,"Format":"","Discriminator":null},"Comments":{"Summary":"","Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true},{"Name":"payload","Type":{"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Scope":"shared","RefType":"","AdditionalProperties":null,"Name":"variantSchema_payload_type","AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Type":"enum","ItemType":null,"Fields":[],"Enum":{"Type":{"Type":"string","ItemType":null,"AssociatedTypes":[],"Input":false,"Name":"","Scope":"","BaseName":"","AdditionalProperties":null,"Discriminator":null,"Enum":null,"Truncated":false,"Comments":null,"Output":false,"Format":"","Fields":[],"RefType":"","Extensions":{},"Examples":[]},"Values":["json","csv","string"],"Names":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false},"Input":false,"Output":false,"Examples":[],"Discriminator":null},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Type":"string","Fields":[],"RefType":"","Comments":null,"Enum":null,"Output":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Discriminator":null,"Name":"","ItemType":null,"BaseName":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false}],"AssociatedTypes":[],"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"AdditionalProperties":null,"Name":"variantSchema_payload","Type":"class","ItemType":null,"Enum":null,"BaseName":"","Format":"","RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload"},"Discriminator":null,"Scope":"shared","Truncated":false,"Output":false,"Examples":[]},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Name":"stickiness","Type":{"Fields":[],"Input":false,"Output":false,"AssociatedTypes":[],"RefType":"","Truncated":false,"Format":"","AdditionalProperties":null,"Name":"","ItemType":null,"Enum":null,"Comments":null,"Examples":["custom.context.field"],"Discriminator":null,"Type":"string","Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true}},"Comments":{"DeprecationMessage":"","Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false},{"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"BaseName":"","Comments":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Type":"number","ItemType":null,"AssociatedTypes":[],"Enum":null,"Scope":"","Output":false,"Examples":[],"Fields":[],"RefType":"","Format":"","Discriminator":null,"Truncated":false,"AdditionalProperties":null}},{"Name":"weightType","Type":{"ItemType":null,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"variantSchema_weightType","Fields":[],"AssociatedTypes":[],"Scope":"shared","Comments":{"Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Format":"","Type":"enum","Input":false,"Output":false,"Enum":{"Type":{"BaseName":"","Truncated":false,"Comments":null,"Extensions":{},"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"Name":"","Type":"string","ItemType":null,"RefType":"","Input":false,"Examples":[],"Scope":"","Output":false,"Format":"","AdditionalProperties":null},"Values":["variable","fix"],"Names":[]},"BaseName":"","RefType":"","Examples":["variable"],"AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false}],"BaseName":"","Name":"variantSchema","Enum":null,"Examples":[],"Format":"","AdditionalProperties":null,"Discriminator":null,"Comments":{"Summary":"","Description":"A variant allows for further separation of users into segments. See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants) for a more detailed description","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Truncated":false,"Output":false,"ItemType":null,"Scope":"shared"}, {"Name":"variantSchema","Fields":[{"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Comments":null,"Output":false,"Examples":["blue_group"],"Truncated":false,"Extensions":{},"Format":"","BaseName":"","RefType":"","Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"AdditionalProperties":null,"Discriminator":null,"Type":"string","Fields":[],"Scope":"","Input":false},"Comments":{"Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"name"}]},{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"overrides","Type":{"BaseName":"","RefType":"","Comments":null,"ItemType":{"Examples":[],"Name":"overrideSchema","ItemType":null,"Enum":null,"Scope":"shared","Output":false,"Type":"class","Comments":{"Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"AssociatedTypes":[],"Truncated":false,"Extensions":{},"Discriminator":null,"Fields":[{"Comments":{"Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Comments":null,"ItemType":null,"Scope":"","BaseName":"","Discriminator":null,"Truncated":false,"Input":false,"AdditionalProperties":null,"RefType":"","Extensions":{},"Fields":[],"AssociatedTypes":[],"Enum":null,"Examples":["userId"],"Format":"","Name":"","Type":"string","Output":false}},{"Name":"values","Type":{"Output":false,"Examples":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Discriminator":null,"Name":"","ItemType":{"Type":"string","AssociatedTypes":[],"AdditionalProperties":null,"Scope":"","Output":false,"Extensions":{},"Name":"","Fields":[],"Enum":null,"Format":"","RefType":"","Comments":null,"Input":false,"Examples":[],"Discriminator":null,"ItemType":null,"BaseName":"","Truncated":false},"AdditionalProperties":null,"Truncated":false,"Input":false,"Format":"","Type":"array","Enum":null,"RefType":"","Fields":[],"Comments":null,"Extensions":{}},"Comments":{"Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"BaseName":"","RefType":"Schemas","Input":false,"Format":""},"Truncated":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"Fields":[],"Enum":null,"Scope":"","Output":false,"Extensions":{},"Examples":[],"Name":"","AssociatedTypes":[],"Input":false,"Type":"array"}},{"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant"},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"payload","Type":{"Output":false,"Format":"","Name":"variantSchema_payload","Type":"class","AssociatedTypes":[],"BaseName":"","Input":false,"Extensions":{},"Examples":[],"ItemType":null,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"ItemType":null,"RefType":"","Discriminator":null,"Name":"variantSchema_payload_type","Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{},"Examples":[],"Fields":[],"Enum":{"Type":{"BaseName":"","Truncated":false,"Output":false,"Format":"","Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"Type":"string","AdditionalProperties":null,"Fields":[],"Scope":"","Comments":null,"Input":false,"RefType":"","Extensions":{},"Examples":[],"Discriminator":null},"Values":["json","csv","string"],"Names":[]},"BaseName":"","Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Type":"enum","AssociatedTypes":[],"Scope":"shared","Truncated":false},"Comments":{"Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"ItemType":null,"Fields":[],"AssociatedTypes":[],"BaseName":"","Format":"","AdditionalProperties":null,"Name":"","Enum":null,"Scope":"","RefType":"","Output":false,"Input":false,"Extensions":{},"Examples":[],"Discriminator":null,"Type":"string","Truncated":false,"Comments":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload"},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false}],"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false},"AdditionalProperties":null,"Discriminator":null,"Enum":null,"Scope":"shared","RefType":"Schemas","Truncated":false}},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness","Type":{"Format":"","Discriminator":null,"Name":"","ItemType":null,"AdditionalProperties":null,"AssociatedTypes":[],"Examples":["custom.context.field"],"Comments":null,"Input":false,"Output":false,"Extensions":{},"Fields":[],"RefType":"","Scope":"","BaseName":"","Truncated":false,"Type":"string","Enum":null},"Comments":{"Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}]},{"Name":"weight","Type":{"Scope":"","BaseName":"","Input":false,"Type":"number","Fields":[],"RefType":"","Comments":null,"Examples":[],"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"Extensions":{},"Format":"","Discriminator":null,"ItemType":null,"Truncated":false,"Name":"","Output":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Scope":"shared","Discriminator":null,"Type":"enum","AssociatedTypes":[],"Output":false,"AdditionalProperties":null,"Name":"variantSchema_weightType","ItemType":null,"Truncated":false,"Format":"","Fields":[],"RefType":"","Comments":{"Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Extensions":{},"Examples":["variable"],"Enum":{"Type":{"Format":"","Name":"","Enum":null,"BaseName":"","Output":false,"Extensions":{},"Examples":[],"Type":"string","AssociatedTypes":[],"RefType":"","Comments":null,"Discriminator":null,"ItemType":null,"Scope":"","Truncated":false,"Fields":[],"Input":false,"AdditionalProperties":null},"Values":["variable","fix"],"Names":[]},"BaseName":""},"Comments":{"Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}]}],"Format":"","Discriminator":null,"ItemType":null,"Scope":"shared","BaseName":"","Truncated":false,"Type":"class","Comments":{"Summary":"","Description":"A variant allows for further separation of users into segments. See [our excellent documentation](https://docs.getunleash.io/reference/feature-toggle-variants#what-are-variants) for a more detailed description","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"Extensions":{},"Examples":[],"AssociatedTypes":[],"Enum":null,"RefType":"Schemas","Input":false,"Output":false}, variants3)
		// Generate(get.feature_environment.variants.[].name, {"SerializationMethod":null,"ErrorMessage":false,"Name":"name","Type":{"Type":"string","Input":false,"Output":false,"Comments":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Name":"","ItemType":null,"Fields":[],"AssociatedTypes":[],"Scope":"","Truncated":false,"Examples":["blue_group"],"Discriminator":null,"Enum":null,"BaseName":"","RefType":"","AdditionalProperties":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false}, {"ErrorMessage":false,"Name":"name","Type":{"ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Name":"","Fields":[],"Scope":"","Input":false,"AdditionalProperties":null,"Discriminator":null,"Type":"string","Output":false,"Examples":["blue_group"],"Comments":null,"Extensions":{},"Format":"","Truncated":false},"Comments":{"Summary":"","Description":"The variants name. Is unique for this feature toggle","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Optional":false,"SerializationMethod":null})
		variants3.Name = types.StringValue(variantsItem1.Name)
		// Generate(get.feature_environment.variants.[].overrides, {"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"overrides","Type":{"Type":"array","Enum":null,"Comments":null,"Examples":[],"AdditionalProperties":null,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Name":"","Fields":[],"AssociatedTypes":[],"Scope":"","RefType":"","Truncated":false,"ItemType":{"Name":"overrideSchema","Fields":[{"ErrorMessage":false,"Name":"contextName","Type":{"AssociatedTypes":[],"Enum":null,"Scope":"","Truncated":false,"Output":false,"Examples":["userId"],"Name":"","Type":"string","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Fields":[],"RefType":"","Format":"","AdditionalProperties":null,"ItemType":null,"Comments":null,"Input":false},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides"},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null},{"Comments":{"Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"Name":"","Enum":null,"Comments":null,"Examples":[],"Type":"array","AdditionalProperties":null,"Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"ItemType":{"Output":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"Name":"","Truncated":false,"ItemType":null,"Fields":[],"Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"Permissions","x-untouched":true},"Examples":[],"Type":"string","Scope":"","Input":false,"Discriminator":null},"Fields":[],"AssociatedTypes":[],"Scope":"","BaseName":"","Discriminator":null,"RefType":"","Truncated":false,"Format":""}}],"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"OverrideSchema"},"Format":"","Comments":{"Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Input":false,"Output":false,"Type":"class","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Discriminator":null,"Scope":"shared","Truncated":false,"Examples":[],"AdditionalProperties":null},"BaseName":"","Output":false,"Format":"","Discriminator":null},"Comments":{"Summary":"","Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"overrides"}]}, {"SerializationMethod":null,"ErrorMessage":false,"Name":"overrides","Type":{"Format":"","AdditionalProperties":null,"Discriminator":null,"Fields":[],"Truncated":false,"Scope":"","Output":false,"Extensions":{},"Examples":[],"Name":"","Enum":null,"Input":false,"Type":"array","AssociatedTypes":[],"RefType":"","Comments":null,"ItemType":{"Comments":{"Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"AdditionalProperties":null,"Type":"class","Truncated":false,"Extensions":{},"AssociatedTypes":[],"BaseName":"","RefType":"Schemas","Input":false,"Format":"","Discriminator":null,"Fields":[{"Name":"contextName","Type":{"Input":false,"AdditionalProperties":null,"Discriminator":null,"Truncated":false,"AssociatedTypes":[],"Enum":null,"RefType":"","Extensions":{},"Fields":[],"Type":"string","Output":false,"Examples":["userId"],"Format":"","Name":"","Scope":"","BaseName":"","Comments":null,"ItemType":null},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"Type":{"AssociatedTypes":[],"Scope":"","BaseName":"","Output":false,"Examples":[],"Name":"","ItemType":{"RefType":"","Comments":null,"Input":false,"Format":"","ItemType":null,"BaseName":"","Truncated":false,"Examples":[],"Discriminator":null,"Type":"string","AssociatedTypes":[],"AdditionalProperties":null,"Name":"","Fields":[],"Enum":null,"Scope":"","Output":false,"Extensions":{}},"AdditionalProperties":null,"Discriminator":null,"Type":"array","Enum":null,"RefType":"","Truncated":false,"Input":false,"Format":"","Fields":[],"Comments":null,"Extensions":{}},"Comments":{"Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"values"}],"ItemType":null,"Enum":null,"Scope":"shared","Output":false,"Examples":[],"Name":"overrideSchema"},"BaseName":""},"Comments":{"Summary":"","Description":"Overrides assigning specific variants to specific users. The weighting system automatically assigns users to specific groups for you, but any overrides in this list will take precedence.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"overrides"}],"Optional":true})
		variants3.Overrides = nil
		for _, overridesItem := range variantsItem1.Overrides {
			var overrides1 OverrideSchema
			// Generate(false, false, {"Comments":{"Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Type":"class","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Discriminator":null,"Scope":"shared","Truncated":false,"Examples":[],"AdditionalProperties":null,"Name":"overrideSchema","Fields":[{"Name":"contextName","Type":{"BaseName":"","Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Discriminator":null,"Name":"","Type":"string","Format":"","AdditionalProperties":null,"Fields":[],"RefType":"","Input":false,"ItemType":null,"Comments":null,"Scope":"","Truncated":false,"Output":false,"Examples":["userId"],"AssociatedTypes":[],"Enum":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false},{"ErrorMessage":false,"Name":"values","Type":{"Format":"","RefType":"","Truncated":false,"Comments":null,"Examples":[],"Name":"","Enum":null,"Type":"array","AdditionalProperties":null,"AssociatedTypes":[],"Scope":"","BaseName":"","Input":false,"Output":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"ItemType":{"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","RefType":"","Comments":null,"Output":false,"Format":"","Name":"","Truncated":false,"ItemType":null,"Fields":[],"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"Permissions"},"Examples":[],"Type":"string","Scope":"","Input":false,"Discriminator":null},"Fields":[],"Discriminator":null},"Comments":{"Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null}],"RefType":"Schemas","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true,"Symbol":"OverrideSchema"},"Format":""}, {"Type":"class","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"An override for deciding which variant should be assigned to a user based on the context name","ExternalDocs":null},"AdditionalProperties":null,"AssociatedTypes":[],"Truncated":false,"Extensions":{},"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"contextName","Type":{"Enum":null,"RefType":"","Extensions":{},"Fields":[],"AssociatedTypes":[],"Output":false,"Examples":["userId"],"Format":"","Name":"","Type":"string","BaseName":"","Comments":null,"ItemType":null,"Scope":"","AdditionalProperties":null,"Discriminator":null,"Truncated":false,"Input":false},"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null}},{"Name":"values","Type":{"Type":"array","Enum":null,"RefType":"","Truncated":false,"Input":false,"Format":"","Fields":[],"Comments":null,"Extensions":{},"AssociatedTypes":[],"Scope":"","BaseName":"","Output":false,"Examples":[],"Name":"","ItemType":{"Type":"string","AssociatedTypes":[],"AdditionalProperties":null,"Scope":"","Output":false,"Extensions":{},"Name":"","Fields":[],"Enum":null,"Format":"","RefType":"","Comments":null,"Input":false,"Examples":[],"Discriminator":null,"ItemType":null,"BaseName":"","Truncated":false},"AdditionalProperties":null,"Discriminator":null},"Comments":{"Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}],"BaseName":"","RefType":"Schemas","Input":false,"Format":"","Discriminator":null,"Name":"overrideSchema","ItemType":null,"Enum":null,"Scope":"shared","Output":false,"Examples":[]}, overrides1)
			// Generate(get.feature_environment.variants.[].overrides.[].context_name, {"Name":"contextName","Type":{"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"","Type":"string","Format":"","AdditionalProperties":null,"Fields":[],"RefType":"","Input":false,"ItemType":null,"Comments":null,"Scope":"","Truncated":false,"Output":false,"Examples":["userId"],"AssociatedTypes":[],"Enum":null},"Comments":{"Summary":"","Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}, {"Name":"contextName","Type":{"Enum":null,"RefType":"","Extensions":{},"Fields":[],"AssociatedTypes":[],"Output":false,"Examples":["userId"],"Format":"","Name":"","Type":"string","BaseName":"","Comments":null,"ItemType":null,"Scope":"","AdditionalProperties":null,"Discriminator":null,"Truncated":false,"Input":false},"Comments":{"Description":"The name of the context field used to determine overrides","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"contextName"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
			overrides1.ContextName = types.StringValue(overridesItem.ContextName)
			// Generate(get.feature_environment.variants.[].overrides.[].values, {"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"AssociatedTypes":[],"Scope":"","BaseName":"","Input":false,"Output":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"ItemType":{"Truncated":false,"Name":"","Fields":[],"Extensions":{"Symbol":"Permissions","x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"ItemType":null,"Scope":"","Input":false,"Discriminator":null,"Type":"string","Enum":null,"BaseName":"","RefType":"","Comments":null,"Output":false,"Format":"","AdditionalProperties":null,"AssociatedTypes":[]},"Fields":[],"Discriminator":null,"Format":"","RefType":"","Truncated":false,"Comments":null,"Examples":[],"Name":"","Enum":null,"Type":"array","AdditionalProperties":null},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false}}, {"Annotations":[{"Ignore":false,"FieldName":"values"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"values","Type":{"RefType":"","Truncated":false,"Input":false,"Format":"","Type":"array","Enum":null,"Extensions":{},"Fields":[],"Comments":null,"BaseName":"","Output":false,"Examples":[],"AssociatedTypes":[],"Scope":"","AdditionalProperties":null,"Discriminator":null,"Name":"","ItemType":{"Type":"string","AssociatedTypes":[],"AdditionalProperties":null,"Scope":"","Output":false,"Extensions":{},"Name":"","Fields":[],"Enum":null,"Format":"","RefType":"","Comments":null,"Input":false,"Examples":[],"Discriminator":null,"ItemType":null,"BaseName":"","Truncated":false}},"Comments":{"Summary":"","Description":"Which values that should be overriden","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}})
			overrides1.Values = nil
			for _, v := range overridesItem.Values {
				overrides1.Values = append(overrides1.Values, types.StringValue(v))
			}
			variants3.Overrides = append(variants3.Overrides, overrides1)
		}
		// Generate(get.feature_environment.variants.[].payload, {"ErrorMessage":false,"Name":"payload","Type":{"RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload","x-untouched":true},"Discriminator":null,"Scope":"shared","Truncated":false,"Output":false,"Examples":[],"Fields":[{"Annotations":[{"FieldName":"type","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Name":"variantSchema_payload_type","AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Examples":[],"Type":"enum","ItemType":null,"Fields":[],"Enum":{"Type":{"AdditionalProperties":null,"Discriminator":null,"Name":"","Scope":"","BaseName":"","Output":false,"Format":"","Enum":null,"Truncated":false,"Comments":null,"Examples":[],"Fields":[],"RefType":"","Extensions":{},"Input":false,"Type":"string","ItemType":null,"AssociatedTypes":[]},"Values":["json","csv","string"],"Names":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false},"Input":false,"Output":false,"Discriminator":null,"Scope":"shared","RefType":"","AdditionalProperties":null},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Name":"","ItemType":null,"BaseName":"","Type":"string","Fields":[],"RefType":"","Comments":null,"Enum":null,"Output":false,"Format":"","AdditionalProperties":null,"Discriminator":null,"AssociatedTypes":[],"Scope":"","Truncated":false,"Input":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[]},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false}],"AssociatedTypes":[],"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"AdditionalProperties":null,"Name":"variantSchema_payload","Type":"class","ItemType":null,"Enum":null,"BaseName":"","Format":""},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null}, {"ErrorMessage":false,"Name":"payload","Type":{"ItemType":null,"Fields":[{"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false},"Extensions":{},"Examples":[],"Name":"variantSchema_payload_type","Enum":{"Values":["json","csv","string"],"Names":[],"Type":{"Type":"string","AdditionalProperties":null,"Fields":[],"Scope":"","Comments":null,"Input":false,"RefType":"","Extensions":{},"Examples":[],"Discriminator":null,"Format":"","Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false,"Output":false}},"BaseName":"","Fields":[],"AssociatedTypes":[],"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Type":"enum","RefType":"","Discriminator":null,"ItemType":null},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false},{"Comments":{"Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Examples":[],"Discriminator":null,"Type":"string","Truncated":false,"Comments":null,"Input":false,"Extensions":{},"ItemType":null,"Fields":[],"AssociatedTypes":[],"AdditionalProperties":null,"Name":"","Enum":null,"Scope":"","BaseName":"","Format":"","RefType":"","Output":false}}],"Comments":{"Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"AdditionalProperties":null,"Discriminator":null,"Enum":null,"Scope":"shared","RefType":"Schemas","Truncated":false,"Output":false,"Examples":[],"Format":"","Name":"variantSchema_payload","Type":"class","AssociatedTypes":[],"BaseName":"","Input":false,"Extensions":{}},"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"payload"}],"Optional":true,"SerializationMethod":null})
		// Generate(true, true, {"Fields":[{"Type":{"Name":"variantSchema_payload_type","AssociatedTypes":[],"BaseName":"","Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Output":false,"Examples":[],"Type":"enum","ItemType":null,"Fields":[],"Enum":{"Values":["json","csv","string"],"Names":[],"Type":{"Examples":[],"Fields":[],"RefType":"","Extensions":{},"Input":false,"Type":"string","ItemType":null,"AssociatedTypes":[],"AdditionalProperties":null,"Discriminator":null,"Name":"","Scope":"","BaseName":"","Output":false,"Format":"","Enum":null,"Truncated":false,"Comments":null}},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Discriminator":null,"Scope":"shared","RefType":"","AdditionalProperties":null},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type"},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Discriminator":null,"AssociatedTypes":[],"Scope":"","Truncated":false,"Input":false,"Name":"","ItemType":null,"BaseName":"","Type":"string","Fields":[],"RefType":"","Comments":null,"Enum":null,"Output":false,"Format":"","AdditionalProperties":null},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload"},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false}],"AssociatedTypes":[],"Comments":{"Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"AdditionalProperties":null,"Name":"variantSchema_payload","Type":"class","ItemType":null,"Enum":null,"BaseName":"","Format":"","RefType":"Schemas","Extensions":{"x-speakeasy-param-readonly":true,"Symbol":"StrategyVariantSchemaPayload","x-untouched":true},"Discriminator":null,"Scope":"shared","Truncated":false,"Output":false,"Examples":[]}, {"AdditionalProperties":null,"Discriminator":null,"ItemType":null,"Fields":[{"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Output":false,"Format":"","AdditionalProperties":null,"Type":"enum","AssociatedTypes":[],"Scope":"shared","Truncated":false,"Input":false,"ItemType":null,"RefType":"","Discriminator":null,"Name":"variantSchema_payload_type","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null},"Extensions":{},"Examples":[],"Fields":[],"Enum":{"Type":{"Discriminator":null,"RefType":"","Extensions":{},"Examples":[],"Enum":null,"BaseName":"","Truncated":false,"Output":false,"Format":"","Name":"","ItemType":null,"AssociatedTypes":[],"Type":"string","AdditionalProperties":null,"Input":false,"Fields":[],"Scope":"","Comments":null},"Values":["json","csv","string"],"Names":[]},"BaseName":""},"Comments":{"DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""}},{"SerializationMethod":null,"ErrorMessage":false,"Name":"value","Type":{"Examples":[],"Discriminator":null,"Type":"string","Truncated":false,"Comments":null,"Input":false,"Extensions":{},"ItemType":null,"Fields":[],"AssociatedTypes":[],"AdditionalProperties":null,"Name":"","Enum":null,"Scope":"","BaseName":"","Format":"","RefType":"","Output":false},"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false}],"Comments":{"DeprecationMessage":"","Summary":"","Description":"Extra data configured for this variant","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Truncated":false,"Enum":null,"Scope":"shared","RefType":"Schemas","Output":false,"BaseName":"","Input":false,"Extensions":{},"Examples":[],"Format":"","Name":"variantSchema_payload","Type":"class","AssociatedTypes":[]}, variants3.Payload)
		if variants3.Payload == nil {
			variants3.Payload = &StrategyVariantSchemaPayload{}
		}
		if variantsItem1.Payload == nil {
			variants3.Payload = nil
		} else {
			variants3.Payload = &StrategyVariantSchemaPayload{}
			// Generate(get.feature_environment.variants.[].payload.type, {"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Scope":"shared","RefType":"","AdditionalProperties":null,"Truncated":false,"Name":"variantSchema_payload_type","AssociatedTypes":[],"BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Format":"","Enum":{"Type":{"Format":"","Enum":null,"Truncated":false,"Comments":null,"Output":false,"Fields":[],"RefType":"","Extensions":{},"Examples":[],"Type":"string","ItemType":null,"AssociatedTypes":[],"Input":false,"Discriminator":null,"Name":"","Scope":"","BaseName":"","AdditionalProperties":null},"Values":["json","csv","string"],"Names":[]},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Examples":[],"Type":"enum","ItemType":null,"Fields":[],"Discriminator":null}}, {"Annotations":[{"Ignore":false,"FieldName":"type"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"type","Type":{"Extensions":{},"Examples":[],"Name":"variantSchema_payload_type","Comments":{"DeprecationMessage":"","Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"BaseName":"","Fields":[],"Enum":{"Type":{"Type":"string","AdditionalProperties":null,"Fields":[],"Scope":"","Comments":null,"Input":false,"RefType":"","Extensions":{},"Examples":[],"Discriminator":null,"Output":false,"Format":"","Name":"","ItemType":null,"AssociatedTypes":[],"Enum":null,"BaseName":"","Truncated":false},"Values":["json","csv","string"],"Names":[]},"Scope":"shared","Truncated":false,"Input":false,"Output":false,"Format":"","AdditionalProperties":null,"Type":"enum","AssociatedTypes":[],"Discriminator":null,"ItemType":null,"RefType":""},"Comments":{"Summary":"","Description":"The type of the value. Commonly used types are string, json and csv.","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""}})
			variants3.Payload.Type = types.StringValue(string(variantsItem1.Payload.Type))
			// Generate(get.feature_environment.variants.[].payload.value, {"Name":"value","Type":{"Type":"string","Fields":[],"RefType":"","Comments":null,"Enum":null,"Output":false,"Format":"","AdditionalProperties":null,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Examples":[],"Discriminator":null,"AssociatedTypes":[],"Scope":"","Truncated":false,"Input":false,"Name":"","ItemType":null,"BaseName":""},"Comments":{"Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"Ignore":false,"FieldName":"value"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}, {"Name":"value","Type":{"Enum":null,"Scope":"","BaseName":"","Format":"","AdditionalProperties":null,"Name":"","Output":false,"RefType":"","Truncated":false,"Comments":null,"Input":false,"Extensions":{},"Examples":[],"Discriminator":null,"Type":"string","Fields":[],"AssociatedTypes":[],"ItemType":null},"Comments":{"Description":"The actual value of payload","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":""},"Annotations":[{"FieldName":"value","Ignore":false}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false})
			variants3.Payload.Value = types.StringValue(variantsItem1.Payload.Value)
		}
		// Generate(get.feature_environment.variants.[].stickiness, {"Type":{"Examples":["custom.context.field"],"Discriminator":null,"Name":"","ItemType":null,"Enum":null,"Comments":null,"Type":"string","Scope":"","BaseName":"","Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Fields":[],"Input":false,"Output":false,"AdditionalProperties":null,"AssociatedTypes":[],"RefType":"","Truncated":false,"Format":""},"Comments":{"ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time"},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"stickiness"}, {"Name":"stickiness","Type":{"AssociatedTypes":[],"Examples":["custom.context.field"],"AdditionalProperties":null,"Extensions":{},"Fields":[],"RefType":"","Comments":null,"Input":false,"Output":false,"Type":"string","Enum":null,"Scope":"","BaseName":"","Truncated":false,"Name":"","ItemType":null,"Format":"","Discriminator":null},"Comments":{"Summary":"","Description":"[Stickiness](https://docs.getunleash.io/reference/feature-toggle-variants#variant-stickiness) is how Unleash guarantees that the same user gets the same variant every time","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"stickiness"}],"Optional":true,"SerializationMethod":null,"ErrorMessage":false})
		if variantsItem1.Stickiness != nil {
			variants3.Stickiness = types.StringValue(*variantsItem1.Stickiness)
		} else {
			variants3.Stickiness = types.StringNull()
		}
		// Generate(get.feature_environment.variants.[].weight, {"Name":"weight","Type":{"Truncated":false,"AdditionalProperties":null,"BaseName":"","Comments":null,"Input":false,"Extensions":{"x-speakeasy-param-readonly":true,"x-untouched":true},"Enum":null,"Scope":"","Output":false,"Examples":[],"Name":"","Type":"number","ItemType":null,"AssociatedTypes":[],"Fields":[],"RefType":"","Format":"","Discriminator":null},"Comments":{"Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false}, {"Comments":{"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The weight is the likelihood of any one user getting this variant. It is a number between 0 and 1000. See the section on [variant weights](https://docs.getunleash.io/reference/feature-toggle-variants#variant-weight) for more information","ExternalDocs":null,"Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"weight"}],"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Name":"weight","Type":{"Scope":"","BaseName":"","Input":false,"Type":"number","Fields":[],"RefType":"","Comments":null,"Examples":[],"AdditionalProperties":null,"AssociatedTypes":[],"Enum":null,"Extensions":{},"Format":"","Discriminator":null,"ItemType":null,"Truncated":false,"Name":"","Output":false}})
		variants3.Weight = types.NumberValue(big.NewFloat(float64(variantsItem1.Weight)))
		// Generate(get.feature_environment.variants.[].weight_type, {"ErrorMessage":false,"Name":"weightType","Type":{"Type":"enum","Input":false,"Output":false,"Enum":{"Type":{"Extensions":{},"Discriminator":null,"BaseName":"","Truncated":false,"Comments":null,"Fields":[],"AssociatedTypes":[],"Enum":null,"RefType":"","Input":false,"Examples":[],"Name":"","Type":"string","ItemType":null,"AdditionalProperties":null,"Scope":"","Output":false,"Format":""},"Values":["variable","fix"],"Names":[]},"BaseName":"","RefType":"","Examples":["variable"],"AdditionalProperties":null,"ItemType":null,"Truncated":false,"Extensions":{"x-untouched":true,"x-speakeasy-param-readonly":true},"Discriminator":null,"Name":"variantSchema_weightType","Fields":[],"AssociatedTypes":[],"Scope":"shared","Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null},"Format":""},"Comments":{"Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}],"Optional":true,"SerializationMethod":null}, {"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Name":"weightType","Type":{"Input":false,"Extensions":{},"Examples":["variable"],"Enum":{"Type":{"Comments":null,"Discriminator":null,"Type":"string","AssociatedTypes":[],"RefType":"","ItemType":null,"Scope":"","Truncated":false,"Fields":[],"Input":false,"AdditionalProperties":null,"Output":false,"Extensions":{},"Examples":[],"Format":"","Name":"","Enum":null,"BaseName":""},"Values":["variable","fix"],"Names":[]},"BaseName":"","Comments":{"DeprecationMessage":"","Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":""},"Discriminator":null,"Type":"enum","AssociatedTypes":[],"Scope":"shared","AdditionalProperties":null,"Name":"variantSchema_weightType","ItemType":null,"Output":false,"Format":"","Fields":[],"RefType":"","Truncated":false},"Comments":{"Summary":"","Description":"Set to fix if this variant must have exactly the weight allocated to it. If the type is variable, the weight will adjust so that the total weight of all variants adds up to 1000","ExternalDocs":null,"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"weightType"}]})
		if variantsItem1.WeightType != nil {
			variants3.WeightType = types.StringValue(string(*variantsItem1.WeightType))
		} else {
			variants3.WeightType = types.StringNull()
		}
		r.Variants = append(r.Variants, variants3)
	}
}
